{
  "Dialog": {
    "filePath": "D:/sources/rtdui/packages/dialogs/src/Dialog.tsx",
    "description": "",
    "displayName": "Dialog",
    "props": {
      "actions": {
        "defaultValue": null,
        "description": "Dialog actions",
        "name": "actions",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "cancelLabel": {
        "defaultValue": {
          "value": "\"Cancel\""
        },
        "description": "cancel button text for mode confirm or prompt",
        "name": "cancelLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Dialog message, place main text here",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "closeLabel": {
        "defaultValue": {
          "value": "\"Close\""
        },
        "description": "close button text for mode alert",
        "name": "closeLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "confirmLabel": {
        "defaultValue": {
          "value": "\"OK\""
        },
        "description": "confirm button text for mode confirm or prompt",
        "name": "confirmLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "fullScreen": {
        "defaultValue": null,
        "description": "full screen dialog",
        "name": "fullScreen",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "mode": {
        "defaultValue": {
          "value": "\"dialog\""
        },
        "description": "dialog mode",
        "name": "mode",
        "required": false,
        "type": {
          "name": "\"dialog\" | \"alert\" | \"prompt\" | \"confirm\" | undefined",
          "raw": "\"dialog\" | \"alert\" | \"prompt\" | \"confirm\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"alert\""
            },
            {
              "value": "\"prompt\""
            },
            {
              "value": "\"confirm\""
            }
          ]
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "Called when close button is clicked",
        "name": "onClose",
        "required": false,
        "type": {
          "name": "((result?: any) => void) | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ closeBtn?: string | undefined; dialogTitle?: string | undefined; title?: string | undefined; dialogContent?: string | undefined; dialogAction?: string | undefined; okBtn?: string | undefined; cancelBtn?: string | undefined; } | undefined"
        }
      },
      "title": {
        "defaultValue": null,
        "description": "Dialog title, displayed before body",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "withCloseButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether close button should be visible in title",
        "name": "withCloseButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "DialogContainer": {
    "filePath": "D:/sources/rtdui/packages/dialogs/src/DialogContainer.tsx",
    "description": "",
    "displayName": "DialogContainer",
    "props": {
      "actions": {
        "defaultValue": null,
        "description": "Dialog actions",
        "name": "actions",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "cancelLabel": {
        "defaultValue": {
          "value": "\"Cancel\""
        },
        "description": "cancel button text for mode confirm or prompt",
        "name": "cancelLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Dialog message, place main text here",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "closeLabel": {
        "defaultValue": {
          "value": "\"Close\""
        },
        "description": "close button text for mode alert",
        "name": "closeLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "confirmLabel": {
        "defaultValue": {
          "value": "\"OK\""
        },
        "description": "confirm button text for mode confirm or prompt",
        "name": "confirmLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "data": {
        "defaultValue": null,
        "description": "",
        "name": "data",
        "required": true,
        "type": {
          "name": "DialogData"
        }
      },
      "fullScreen": {
        "defaultValue": null,
        "description": "full screen dialog",
        "name": "fullScreen",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "mode": {
        "defaultValue": {
          "value": "\"dialog\""
        },
        "description": "dialog mode",
        "name": "mode",
        "required": false,
        "type": {
          "name": "\"dialog\" | \"alert\" | \"prompt\" | \"confirm\" | undefined",
          "raw": "\"dialog\" | \"alert\" | \"prompt\" | \"confirm\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"alert\""
            },
            {
              "value": "\"prompt\""
            },
            {
              "value": "\"confirm\""
            }
          ]
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "Called when close button is clicked",
        "name": "onClose",
        "required": false,
        "type": {
          "name": "((result?: any) => void) | undefined"
        }
      },
      "onHide": {
        "defaultValue": null,
        "description": "",
        "name": "onHide",
        "required": true,
        "type": {
          "name": "(id: string) => void"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ closeBtn?: string | undefined; dialogTitle?: string | undefined; title?: string | undefined; dialogContent?: string | undefined; dialogAction?: string | undefined; okBtn?: string | undefined; cancelBtn?: string | undefined; } | undefined"
        }
      },
      "title": {
        "defaultValue": null,
        "description": "Dialog title, displayed before body",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "withCloseButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether close button should be visible in title",
        "name": "withCloseButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Dialogs": {
    "filePath": "D:/sources/rtdui/packages/dialogs/src/Dialogs.tsx",
    "description": "该组件只能使用一次. 通常作为React项目根组件的第一个孩子.",
    "displayName": "Dialogs",
    "props": {
      "target": {
        "defaultValue": null,
        "description": "Target element of Portal component",
        "name": "target",
        "required": false,
        "type": {
          "name": "string | HTMLElement | undefined"
        }
      }
    }
  },
  "Notification": {
    "filePath": "D:/sources/rtdui/packages/notifications/src/Notification.tsx",
    "description": "",
    "displayName": "Notification",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Notification message, place main text here",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "Notification color",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"transparent\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"transparent\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"transparent\""
            }
          ]
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Notification icon, replaces color line",
        "name": "icon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "loading": {
        "defaultValue": null,
        "description": "Replaces colored line or icon with Loader component",
        "name": "loading",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "Called when close button is clicked",
        "name": "onClose",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ icon?: string | undefined; title?: string | undefined; content?: string | undefined; closeBtn?: string | undefined; } | undefined"
        }
      },
      "title": {
        "defaultValue": null,
        "description": "Notification title, displayed before body",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "withCloseButton": {
        "defaultValue": null,
        "description": "Determines whether close button should be visible, true by default",
        "name": "withCloseButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "NotificationContainer": {
    "filePath": "D:/sources/rtdui/packages/notifications/src/NotificationContainer.tsx",
    "description": "",
    "displayName": "NotificationContainer",
    "props": {
      "autoClose": {
        "defaultValue": null,
        "description": "",
        "name": "autoClose",
        "required": true,
        "type": {
          "name": "number | false"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Notification message, place main text here",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "Notification color",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"transparent\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"transparent\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"transparent\""
            }
          ]
        }
      },
      "data": {
        "defaultValue": null,
        "description": "",
        "name": "data",
        "required": true,
        "type": {
          "name": "NotificationData"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Notification icon, replaces color line",
        "name": "icon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "loading": {
        "defaultValue": null,
        "description": "Replaces colored line or icon with Loader component",
        "name": "loading",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onClose": {
        "defaultValue": null,
        "description": "Called when close button is clicked",
        "name": "onClose",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onHide": {
        "defaultValue": null,
        "description": "",
        "name": "onHide",
        "required": true,
        "type": {
          "name": "(id: string) => void"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ icon?: string | undefined; title?: string | undefined; content?: string | undefined; closeBtn?: string | undefined; } | undefined"
        }
      },
      "title": {
        "defaultValue": null,
        "description": "Notification title, displayed before body",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "withCloseButton": {
        "defaultValue": null,
        "description": "Determines whether close button should be visible, true by default",
        "name": "withCloseButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Notifications": {
    "filePath": "D:/sources/rtdui/packages/notifications/src/Notifications.tsx",
    "description": "该组件只能使用一次. 通常作为React项目根组件的第一个孩子.",
    "displayName": "Notifications",
    "props": {
      "autoClose": {
        "defaultValue": {
          "value": "4000"
        },
        "description": "Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by notifications.show function",
        "name": "autoClose",
        "required": false,
        "type": {
          "name": "number | false | undefined"
        }
      },
      "limit": {
        "defaultValue": {
          "value": "5"
        },
        "description": "Maximum amount of notifications displayed at a time, other new notifications will be added to queue",
        "name": "limit",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "Target element of Portal component",
        "name": "target",
        "required": false,
        "type": {
          "name": "string | HTMLElement | undefined"
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "250"
        },
        "description": "Notification transitions duration, 0 to turn transitions off",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "Spotlight": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/Spotlight.tsx",
    "description": "",
    "displayName": "Spotlight",
    "props": {
      "actions": {
        "defaultValue": null,
        "description": "Actions data, passed down to <code>Spotlight.Action</code> component",
        "name": "actions",
        "required": true,
        "type": {
          "name": "SpotlightActions[]"
        }
      },
      "clearQueryOnClose": {
        "defaultValue": null,
        "description": "Determines whether the search query should be cleared when the spotlight is closed, <code>true</code> by default",
        "name": "clearQueryOnClose",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "closeOnActionTrigger": {
        "defaultValue": null,
        "description": "Determines whether spotlight should be closed when one of the actions is triggered, <code>true</code> by default",
        "name": "closeOnActionTrigger",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "If set, spotlight will not be rendered",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "filter": {
        "defaultValue": null,
        "description": "Function to filter actions data based on search query, by default actions are filtered by title, description and keywords",
        "name": "filter",
        "required": false,
        "type": {
          "name": "SpotlightFilterFunction | undefined"
        }
      },
      "forceOpened": {
        "defaultValue": null,
        "description": "Forces opened state, useful for tests",
        "name": "forceOpened",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "highlightQuery": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether search query should be highlighted in action label",
        "name": "highlightQuery",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "limit": {
        "defaultValue": {
          "value": "Infinity"
        },
        "description": "Maximum number of actions displayed at a time",
        "name": "limit",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "maxHeight": {
        "defaultValue": null,
        "description": "Spotlight content max-height. Ignored unless <code>scrollable</code> prop is set. <code>400</code> by default",
        "name": "maxHeight",
        "required": false,
        "type": {
          "name": "MaxHeight<string | number> | undefined"
        }
      },
      "nothingFound": {
        "defaultValue": null,
        "description": "Message displayed when none of the actions match given <code>filter</code>",
        "name": "nothingFound",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "onQueryChange": {
        "defaultValue": null,
        "description": "Called when query changes",
        "name": "onQueryChange",
        "required": false,
        "type": {
          "name": "((query: string) => void) | undefined"
        }
      },
      "onSpotlightClose": {
        "defaultValue": null,
        "description": "Called when spotlight closes",
        "name": "onSpotlightClose",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onSpotlightOpen": {
        "defaultValue": null,
        "description": "Called when spotlight opens",
        "name": "onSpotlightOpen",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "query": {
        "defaultValue": null,
        "description": "Controlled Spotlight search query",
        "name": "query",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "scrollable": {
        "defaultValue": null,
        "description": "Determines whether the actions list should be scrollable. If not set, <code>maxHeight</code> is ignored, <code>false</code> by default",
        "name": "scrollable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "searchProps": {
        "defaultValue": null,
        "description": "Props passed down to the <code>Spotlight.Search</code>",
        "name": "searchProps",
        "required": false,
        "type": {
          "name": "SpotlightSearchProps | undefined"
        }
      },
      "shortcut": {
        "defaultValue": null,
        "description": "Keyboard shortcut or a list of shortcuts to trigger spotlight, <code>'mod + K'</code> by default",
        "name": "shortcut",
        "required": false,
        "type": {
          "name": "string | string[] | null | undefined"
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Spotlight store, can be used to create multiple instances of spotlight",
        "name": "store",
        "required": false,
        "type": {
          "name": "SpotlightStore | undefined"
        }
      },
      "tagsToIgnore": {
        "defaultValue": null,
        "description": "A list of tags which when focused will be ignored by shortcut, <code>['input', 'textarea', 'select']</code> by default",
        "name": "tagsToIgnore",
        "required": false,
        "type": {
          "name": "string[] | undefined"
        }
      },
      "triggerOnContentEditable": {
        "defaultValue": null,
        "description": "Determines whether shortcut should trigger based in contentEditable, <code>false</code> by default",
        "name": "triggerOnContentEditable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "SpotlightAction": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightAction.tsx",
    "description": "",
    "displayName": "SpotlightAction",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Children override default action elements, if passed, label, description and sections are hidden",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "closeSpotlightOnTrigger": {
        "defaultValue": null,
        "description": "Determines whether the spotlight should be closed when action is triggered, overrides <code>closeOnActionTrigger</code> prop set on <code>Spotlight</code>",
        "name": "closeSpotlightOnTrigger",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "description": {
        "defaultValue": null,
        "description": "Action description, pass string to use in default filter",
        "name": "description",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "dimmedSections": {
        "defaultValue": null,
        "description": "Determines whether left and right sections should have dimmed styles, <code>true</code> by default",
        "name": "dimmedSections",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "highlightColor": {
        "defaultValue": null,
        "description": "Key of <code>theme.colors</code> of any valid CSS color that will be used to highlight search query, <code>'yellow'</code> by default",
        "name": "highlightColor",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "highlightQuery": {
        "defaultValue": null,
        "description": "Determines whether search query should be highlighted in action label, <code>false</code> by default",
        "name": "highlightQuery",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "keywords": {
        "defaultValue": null,
        "description": "Keywords that are used for default filtering, not displayed anywhere, can be a string: \"react,router,javascript\" or an array: ['react', 'router', 'javascript']",
        "name": "keywords",
        "required": false,
        "type": {
          "name": "string | string[] | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "Action label, pass string to use in default filter",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "Section displayed on the left side of the label, for example, icon",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "Section displayed on the right side of the label, for example, hotkey",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "SpotlightActionsGroup": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightActionsGroup.tsx",
    "description": "",
    "displayName": "SpotlightActionsGroup",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "<code>Spotlight.Action</code> components",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "Group label",
        "name": "label",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "SpotlightActionsList": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightActionsList.tsx",
    "description": "",
    "displayName": "SpotlightActionsList",
    "props": {}
  },
  "SpotlightEmpty": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightEmpty.tsx",
    "description": "",
    "displayName": "SpotlightEmpty",
    "props": {}
  },
  "SpotlightFooter": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightFooter.tsx",
    "description": "",
    "displayName": "SpotlightFooter",
    "props": {}
  },
  "SpotlightRoot": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightRoot.tsx",
    "description": "",
    "displayName": "SpotlightRoot",
    "props": {
      "clearQueryOnClose": {
        "defaultValue": null,
        "description": "Determines whether the search query should be cleared when the spotlight is closed, <code>true</code> by default",
        "name": "clearQueryOnClose",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "closeOnActionTrigger": {
        "defaultValue": null,
        "description": "Determines whether spotlight should be closed when one of the actions is triggered, <code>true</code> by default",
        "name": "closeOnActionTrigger",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "If set, spotlight will not be rendered",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "forceOpened": {
        "defaultValue": null,
        "description": "Forces opened state, useful for tests",
        "name": "forceOpened",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "maxHeight": {
        "defaultValue": null,
        "description": "Spotlight content max-height. Ignored unless <code>scrollable</code> prop is set. <code>400</code> by default",
        "name": "maxHeight",
        "required": false,
        "type": {
          "name": "MaxHeight<string | number> | undefined"
        }
      },
      "onQueryChange": {
        "defaultValue": null,
        "description": "Called when query changes",
        "name": "onQueryChange",
        "required": false,
        "type": {
          "name": "((query: string) => void) | undefined"
        }
      },
      "onSpotlightClose": {
        "defaultValue": null,
        "description": "Called when spotlight closes",
        "name": "onSpotlightClose",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onSpotlightOpen": {
        "defaultValue": null,
        "description": "Called when spotlight opens",
        "name": "onSpotlightOpen",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "query": {
        "defaultValue": null,
        "description": "Controlled Spotlight search query",
        "name": "query",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "scrollable": {
        "defaultValue": null,
        "description": "Determines whether the actions list should be scrollable. If not set, <code>maxHeight</code> is ignored, <code>false</code> by default",
        "name": "scrollable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "shortcut": {
        "defaultValue": null,
        "description": "Keyboard shortcut or a list of shortcuts to trigger spotlight, <code>'mod + K'</code> by default",
        "name": "shortcut",
        "required": false,
        "type": {
          "name": "string | string[] | null | undefined"
        }
      },
      "store": {
        "defaultValue": null,
        "description": "Spotlight store, can be used to create multiple instances of spotlight",
        "name": "store",
        "required": false,
        "type": {
          "name": "SpotlightStore | undefined"
        }
      },
      "tagsToIgnore": {
        "defaultValue": null,
        "description": "A list of tags which when focused will be ignored by shortcut, <code>['input', 'textarea', 'select']</code> by default",
        "name": "tagsToIgnore",
        "required": false,
        "type": {
          "name": "string[] | undefined"
        }
      },
      "triggerOnContentEditable": {
        "defaultValue": null,
        "description": "Determines whether shortcut should trigger based in contentEditable, <code>false</code> by default",
        "name": "triggerOnContentEditable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "SpotlightSearch": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/SpotlightSearch.tsx",
    "description": "",
    "displayName": "SpotlightSearch",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "CodeHighlight": {
    "filePath": "D:/sources/rtdui/packages/code-highlight/src/CodeHighlight/CodeHighlight.tsx",
    "description": "",
    "displayName": "CodeHighlight",
    "props": {
      "bad": {
        "defaultValue": {
          "value": "false"
        },
        "description": "坏的范例",
        "name": "bad",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "code": {
        "defaultValue": null,
        "description": "Code to highlight",
        "name": "code",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "copiedLabel": {
        "defaultValue": {
          "value": "'Copied'"
        },
        "description": "Copied tooltip label",
        "name": "copiedLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "copyLabel": {
        "defaultValue": {
          "value": "'Copy code'"
        },
        "description": "Copy tooltip label",
        "name": "copyLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "diff": {
        "defaultValue": null,
        "description": "是否启用diff形式",
        "name": "diff",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "highlingtLines": {
        "defaultValue": null,
        "description": "字符串范围表示的需要突出显示的行\n如: {1,3-4}",
        "name": "highlingtLines",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "language": {
        "defaultValue": {
          "value": "tsx"
        },
        "description": "Code language",
        "name": "language",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "showLineNumbers": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否显示行号",
        "name": "showLineNumbers",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "withCopyButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether copy button should be displayed",
        "name": "withCopyButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Accordion": {
    "filePath": "D:/sources/rtdui/packages/core/src/Accordion/Accordion.tsx",
    "description": "",
    "displayName": "Accordion",
    "props": {
      "expandIcon": {
        "defaultValue": null,
        "description": "展开的图标",
        "name": "expandIcon",
        "required": false,
        "type": {
          "name": "\"arrow\" | \"plus\" | undefined",
          "raw": "\"arrow\" | \"plus\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"arrow\""
            },
            {
              "value": "\"plus\""
            }
          ]
        }
      },
      "initExpandIndex": {
        "defaultValue": null,
        "description": "初始展开的项索引",
        "name": "initExpandIndex",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "items": {
        "defaultValue": null,
        "description": "项数组",
        "name": "items",
        "required": true,
        "type": {
          "name": "{ [key: string]: any; title: ReactNode; content: ReactNode; }[]"
        }
      }
    }
  },
  "Affix": {
    "filePath": "D:/sources/rtdui/packages/core/src/Affix/Affix.tsx",
    "description": "",
    "displayName": "Affix",
    "props": {
      "position": {
        "defaultValue": {
          "value": "{ bottom: 24, right: 16 }"
        },
        "description": "Affix position on screen",
        "name": "position",
        "required": false,
        "type": {
          "name": "{ top?: string | number | undefined; left?: string | number | undefined; bottom?: string | number | undefined; right?: string | number | undefined; } | undefined"
        }
      },
      "zIndex": {
        "defaultValue": {
          "value": "200"
        },
        "description": "Root element <code>z-index</code> property,",
        "name": "zIndex",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      }
    }
  },
  "Alert": {
    "filePath": "D:/sources/rtdui/packages/core/src/Alert/Alert.tsx",
    "description": "",
    "displayName": "Alert",
    "props": {
      "actions": {
        "defaultValue": null,
        "description": "",
        "name": "actions",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": true,
        "type": {
          "name": "\"info\" | \"success\" | \"warning\" | \"error\"",
          "raw": "\"info\" | \"success\" | \"warning\" | \"error\"",
          "value": [
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "content": {
        "defaultValue": null,
        "description": "",
        "name": "content",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "",
        "name": "icon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "title": {
        "defaultValue": null,
        "description": "",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "AppShell": {
    "filePath": "D:/sources/rtdui/packages/core/src/AppShell/AppShell.tsx",
    "description": "",
    "displayName": "AppShell",
    "props": {
      "drawer": {
        "defaultValue": null,
        "description": "",
        "name": "drawer",
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>> | undefined"
        }
      },
      "footer": {
        "defaultValue": null,
        "description": "",
        "name": "footer",
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>> | undefined"
        }
      },
      "header": {
        "defaultValue": null,
        "description": "",
        "name": "header",
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>> | undefined"
        }
      },
      "main": {
        "defaultValue": null,
        "description": "",
        "name": "main",
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>> | undefined"
        }
      },
      "responsive": {
        "defaultValue": {
          "value": "\"lg\""
        },
        "description": "响应式断点",
        "name": "responsive",
        "required": false,
        "type": {
          "name": "\"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ contentWrapper?: string | undefined; header?: string | undefined; footer?: string | undefined; aside?: string | undefined; main?: string | undefined; drawer?: string | undefined; } | undefined"
        }
      }
    }
  },
  "AspectRatio": {
    "filePath": "D:/sources/rtdui/packages/core/src/AspectRatio/AspectRatio.tsx",
    "description": "",
    "displayName": "AspectRatio",
    "props": {
      "ratio": {
        "defaultValue": {
          "value": "1"
        },
        "description": "宽高比, 如: 16 / 9, 4 / 3, 1920 / 1080\n取值\n@link https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio",
        "name": "ratio",
        "required": true,
        "type": {
          "name": "string"
        }
      }
    }
  },
  "AutoComplete": {
    "filePath": "D:/sources/rtdui/packages/core/src/AutoComplete/AutoComplete.tsx",
    "description": "ref属性会转发至内部的input元素",
    "displayName": "AutoComplete",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "clearable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示清除按钮",
        "name": "clearable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((val: string) => void) | undefined"
        }
      },
      "options": {
        "defaultValue": null,
        "description": "数据源列表",
        "name": "options",
        "required": true,
        "type": {
          "name": "string[]"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Avatar": {
    "filePath": "D:/sources/rtdui/packages/core/src/Avatar/Avatar.tsx",
    "description": "",
    "displayName": "Avatar",
    "props": {
      "online": {
        "defaultValue": null,
        "description": "",
        "name": "online",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "只显示一些字符\nsrc属性的优先级比placeholder属性高.\n不建议超过两个字符",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "src": {
        "defaultValue": null,
        "description": "头像的url",
        "name": "src",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "variant": {
        "defaultValue": {
          "value": "circle"
        },
        "description": "方形或圆形变体",
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"circle\" | \"square\" | undefined",
          "raw": "\"circle\" | \"square\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"square\""
            }
          ]
        }
      }
    }
  },
  "AvatarGroup": {
    "filePath": "D:/sources/rtdui/packages/core/src/AvatarGroup/AvatarGroup.tsx",
    "description": "",
    "displayName": "AvatarGroup",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "avatars",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "max": {
        "defaultValue": null,
        "description": "",
        "name": "max",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      }
    }
  },
  "Badge": {
    "filePath": "D:/sources/rtdui/packages/core/src/Badge/Badge.tsx",
    "description": "多态组件, ref会转发给实际的组件",
    "displayName": "Badge",
    "props": {
      "as": {
        "defaultValue": null,
        "description": "",
        "name": "as",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "theme color",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "no background and no border",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "",
        "name": "icon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "outline": {
        "defaultValue": null,
        "description": "border without background",
        "name": "outline",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"md\""
        },
        "description": "尺寸大小",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      }
    }
  },
  "Button": {
    "filePath": "D:/sources/rtdui/packages/core/src/Button/Button.tsx",
    "description": "ref属性会转发至button元素",
    "displayName": "Button",
    "props": {
      "block": {
        "defaultValue": null,
        "description": "full width",
        "name": "block",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "endIcon": {
        "defaultValue": null,
        "description": "右侧图标元素",
        "name": "endIcon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "无边框和背景",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "glass": {
        "defaultValue": null,
        "description": "毛玻璃效果,需要有背景才有效果",
        "name": "glass",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "link": {
        "defaultValue": null,
        "description": "link样式的按钮",
        "name": "link",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "loading": {
        "defaultValue": null,
        "description": "是否在左侧显示加载动画图标",
        "name": "loading",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "noAnimation": {
        "defaultValue": null,
        "description": "无点击动画",
        "name": "noAnimation",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "outline": {
        "defaultValue": null,
        "description": "边框按钮",
        "name": "outline",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "sharp": {
        "defaultValue": null,
        "description": "矩形或圆形, 用于单字符或图标",
        "name": "sharp",
        "required": false,
        "type": {
          "name": "\"circle\" | \"square\" | undefined",
          "raw": "\"circle\" | \"square\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"square\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "尺寸大小",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "startIcon": {
        "defaultValue": null,
        "description": "左侧图标元素",
        "name": "startIcon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "wide": {
        "defaultValue": null,
        "description": "更多的水平padding",
        "name": "wide",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ButtonCheckbox": {
    "filePath": "D:/sources/rtdui/packages/core/src/ButtonCheckbox/ButtonCheckbox.tsx",
    "description": "ref属性会转发至内部的input元素",
    "displayName": "ButtonCheckbox",
    "props": {
      "block": {
        "defaultValue": null,
        "description": "full width",
        "name": "block",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "无边框和背景",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "glass": {
        "defaultValue": null,
        "description": "毛玻璃效果,需要有背景才有效果",
        "name": "glass",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "link": {
        "defaultValue": null,
        "description": "link样式的按钮",
        "name": "link",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((checked: boolean) => void) | undefined"
        }
      },
      "outline": {
        "defaultValue": null,
        "description": "边框按钮",
        "name": "outline",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "sharp": {
        "defaultValue": null,
        "description": "矩形或圆形, 用于单字符或图标",
        "name": "sharp",
        "required": false,
        "type": {
          "name": "\"circle\" | \"square\" | undefined",
          "raw": "\"circle\" | \"square\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"square\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "尺寸大小",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "wide": {
        "defaultValue": null,
        "description": "更多的水平padding",
        "name": "wide",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Card": {
    "filePath": "D:/sources/rtdui/packages/core/src/Card/Card.tsx",
    "description": "ref属性会转发至内部的根div元素",
    "displayName": "Card",
    "props": {
      "action": {
        "defaultValue": null,
        "description": "",
        "name": "action",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "content": {
        "defaultValue": null,
        "description": "",
        "name": "content",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "glass": {
        "defaultValue": null,
        "description": "",
        "name": "glass",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "imageOverlay": {
        "defaultValue": null,
        "description": "",
        "name": "imageOverlay",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "imageSide": {
        "defaultValue": null,
        "description": "",
        "name": "imageSide",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "imageSrc": {
        "defaultValue": null,
        "description": "",
        "name": "imageSrc",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "shadowSize": {
        "defaultValue": null,
        "description": "",
        "name": "shadowSize",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      },
      "title": {
        "defaultValue": null,
        "description": "",
        "name": "title",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "Carousel": {
    "filePath": "D:/sources/rtdui/packages/core/src/Carousel/Carousel.tsx",
    "description": "",
    "displayName": "Carousel",
    "props": {
      "indicator": {
        "defaultValue": {
          "value": "arrow"
        },
        "description": "变体, arrow使用next/prev箭头按钮切换. number使用数字按钮切换",
        "name": "indicator",
        "required": false,
        "type": {
          "name": "\"number\" | \"arrow\" | undefined",
          "raw": "\"number\" | \"arrow\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"number\""
            },
            {
              "value": "\"arrow\""
            }
          ]
        }
      },
      "items": {
        "defaultValue": null,
        "description": "",
        "name": "items",
        "required": true,
        "type": {
          "name": "{ imageSrc: string; }[]"
        }
      }
    }
  },
  "Checkbox": {
    "filePath": "D:/sources/rtdui/packages/core/src/Checkbox/Checkbox.tsx",
    "description": "ref属性会转发至内部的input元素",
    "displayName": "Checkbox",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((checked: boolean) => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "Chip": {
    "filePath": "D:/sources/rtdui/packages/core/src/Chip/Chip.tsx",
    "description": "ref属性会转发至内部的button元素",
    "displayName": "Chip",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "deleteIcon": {
        "defaultValue": null,
        "description": "",
        "name": "deleteIcon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "onDelete": {
        "defaultValue": null,
        "description": "",
        "name": "onDelete",
        "required": false,
        "type": {
          "name": "((e?: any) => void) | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"normal\""
        },
        "description": "尺寸",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"small\" | \"normal\" | undefined",
          "raw": "\"small\" | \"normal\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"small\""
            },
            {
              "value": "\"normal\""
            }
          ]
        }
      },
      "startIcon": {
        "defaultValue": null,
        "description": "",
        "name": "startIcon",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "ColorInput": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorInput/ColorInput.tsx",
    "description": "",
    "displayName": "@rtdui/core/ColorInput",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "closeOnColorSwatchClick": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether the dropdown should be closed when one of the color swatches is clicked",
        "name": "closeOnColorSwatchClick",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled component default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "disallowInput": {
        "defaultValue": {
          "value": "false"
        },
        "description": "If input is not allowed, the user can only pick value with color picker and swatches",
        "name": "disallowInput",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "fixOnBlur": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the input value should be reset to the last known valid value when the input loses focusable",
        "name": "fixOnBlur",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "format": {
        "defaultValue": {
          "value": "hex"
        },
        "description": "Color format",
        "name": "format",
        "required": false,
        "type": {
          "name": "\"rgb\" | \"rgba\" | \"hex\" | \"hexa\" | \"hsl\" | \"hsla\" | undefined",
          "raw": "\"rgb\" | \"rgba\" | \"hex\" | \"hexa\" | \"hsl\" | \"hsla\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"rgb\""
            },
            {
              "value": "\"rgba\""
            },
            {
              "value": "\"hex\""
            },
            {
              "value": "\"hexa\""
            },
            {
              "value": "\"hsl\""
            },
            {
              "value": "\"hsla\""
            }
          ]
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "Called when the user stops dragging one of the sliders or changes the value with arrow keys",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "swatches": {
        "defaultValue": null,
        "description": "An array of colors in one of the supported formats. Used to render swatches list below the color picker.",
        "name": "swatches",
        "required": false,
        "type": {
          "name": "string[] | undefined"
        }
      },
      "swatchesPerRow": {
        "defaultValue": {
          "value": "7"
        },
        "description": "Number of swatches per row",
        "name": "swatchesPerRow",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled component value",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "withEyeDropper": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether eye dropper button should be displayed in the right section",
        "name": "withEyeDropper",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "withPicker": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the color picker should be displayed",
        "name": "withPicker",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "withPreview": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the preview color swatch should be displayed in the left section of the input",
        "name": "withPreview",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ColorPicker": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/ColorPicker.tsx",
    "description": "",
    "displayName": "@rtdui/core/ColorPicker",
    "props": {
      "alphaLabel": {
        "defaultValue": null,
        "description": "Alpha slider <code>aria-label</code> prop",
        "name": "alphaLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled component default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "focusable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether interactive elements (sliders thumbs and swatches) should be focusable",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "format": {
        "defaultValue": {
          "value": "hex"
        },
        "description": "Color format",
        "name": "format",
        "required": false,
        "type": {
          "name": "\"rgb\" | \"rgba\" | \"hex\" | \"hexa\" | \"hsl\" | \"hsla\" | undefined",
          "raw": "\"rgb\" | \"rgba\" | \"hex\" | \"hexa\" | \"hsl\" | \"hsla\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"rgb\""
            },
            {
              "value": "\"rgba\""
            },
            {
              "value": "\"hex\""
            },
            {
              "value": "\"hexa\""
            },
            {
              "value": "\"hsl\""
            },
            {
              "value": "\"hsla\""
            }
          ]
        }
      },
      "fullWidth": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether the component should take 100% width of its container",
        "name": "fullWidth",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "hueLabel": {
        "defaultValue": null,
        "description": "Hue slider <code>aria-label</code> prop",
        "name": "hueLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "Called when the user stops dragging one of the sliders or changes the value with arrow keys",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "onColorSwatchClick": {
        "defaultValue": null,
        "description": "Called when one of the color swatches is clicked",
        "name": "onColorSwatchClick",
        "required": false,
        "type": {
          "name": "((color: string) => void) | undefined"
        }
      },
      "saturationLabel": {
        "defaultValue": null,
        "description": "Saturation slider <code>aria-label</code> prop",
        "name": "saturationLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"md\""
        },
        "description": "Controls size of hue, alpha and saturation sliders",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "swatches": {
        "defaultValue": null,
        "description": "An array of colors in one of the supported formats. Used to render swatches list below the color picker.",
        "name": "swatches",
        "required": false,
        "type": {
          "name": "string[] | undefined"
        }
      },
      "swatchesPerRow": {
        "defaultValue": {
          "value": "7"
        },
        "description": "Number of swatches per row",
        "name": "swatchesPerRow",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled component value",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "withPicker": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the color picker should be displayed",
        "name": "withPicker",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ColorSwatch": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorSwatch/ColorSwatch.tsx",
    "description": "polymorphic",
    "displayName": "ColorSwatch",
    "props": {
      "as": {
        "defaultValue": null,
        "description": "",
        "name": "as",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Content rendered inside the swatch",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "Color to display, Key of theme colors or any valid CSS color values",
        "name": "color",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "radius": {
        "defaultValue": {
          "value": "\"circle\""
        },
        "description": "Key of <code>radius</code> or any valid CSS value to set <code>border-radius</code>",
        "name": "radius",
        "required": false,
        "type": {
          "name": "\"circle\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"circle\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "Controls <code>width</code> and <code>height</code> of the swatch, any valid CSS value",
        "name": "size",
        "required": false,
        "type": {
          "name": "Width<string | number> | undefined"
        }
      },
      "withShadow": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the swatch should have inner <code>box-shadow</code>",
        "name": "withShadow",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "CopyButton": {
    "filePath": "D:/sources/rtdui/packages/core/src/CopyButton/CopyButton.tsx",
    "description": "",
    "displayName": "CopyButton",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Children callback, provides current status and copy function as an argument",
        "name": "children",
        "required": true,
        "type": {
          "name": "(payload: { copied: boolean; copy: () => void; }) => ReactNode"
        }
      },
      "timeout": {
        "defaultValue": {
          "value": "1000"
        },
        "description": "Copied status timeout in ms",
        "name": "timeout",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value that will be copied to the clipboard when the button is clicked",
        "name": "value",
        "required": true,
        "type": {
          "name": "string"
        }
      }
    }
  },
  "Countdown": {
    "filePath": "D:/sources/rtdui/packages/core/src/Countdown/Countdown.tsx",
    "description": "",
    "displayName": "Countdown",
    "props": {
      "endDate": {
        "defaultValue": null,
        "description": "",
        "name": "endDate",
        "required": true,
        "type": {
          "name": "Date"
        }
      },
      "labelPosition": {
        "defaultValue": null,
        "description": "",
        "name": "labelPosition",
        "required": false,
        "type": {
          "name": "\"bottom\" | \"right\" | undefined",
          "raw": "\"bottom\" | \"right\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"right\""
            }
          ]
        }
      },
      "labels": {
        "defaultValue": {
          "value": "'{years:\"years\", months:\"months\", days:\"days\", hours:\"hours\", minutes:\"minutes\", seconds:\"seconds\"}'"
        },
        "description": "显示文本, 可以本地化",
        "name": "labels",
        "required": false,
        "type": {
          "name": "{ years: string; months: string; days: string; hours: string; minutes: string; seconds: string; } | undefined"
        }
      },
      "variant": {
        "defaultValue": null,
        "description": "",
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"box\" | \"labelInline\" | \"labelUnder\" | undefined",
          "raw": "\"box\" | \"labelInline\" | \"labelUnder\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"box\""
            },
            {
              "value": "\"labelInline\""
            },
            {
              "value": "\"labelUnder\""
            }
          ]
        }
      }
    }
  },
  "DebouncedInput": {
    "filePath": "D:/sources/rtdui/packages/core/src/DebouncedInput/DebouncedInput.tsx",
    "description": "",
    "displayName": "DebouncedInput",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": true,
        "type": {
          "name": "(value: string) => void"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "wait": {
        "defaultValue": {
          "value": "500"
        },
        "description": "延迟的毫秒数",
        "name": "wait",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "Divider": {
    "filePath": "D:/sources/rtdui/packages/core/src/Divider/Divider.tsx",
    "description": "ref属性会转发至内部的根div元素",
    "displayName": "Divider",
    "props": {
      "direction": {
        "defaultValue": null,
        "description": "",
        "name": "direction",
        "required": false,
        "type": {
          "name": "\"horizontal\" | \"vertical\" | undefined",
          "raw": "\"horizontal\" | \"vertical\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      }
    }
  },
  "Drawer": {
    "filePath": "D:/sources/rtdui/packages/core/src/Drawer/Drawer.tsx",
    "description": "drawer",
    "displayName": "Drawer",
    "props": {
      "anchor": {
        "defaultValue": null,
        "description": "",
        "name": "anchor",
        "required": false,
        "type": {
          "name": "\"right\" | \"left\" | undefined",
          "raw": "\"right\" | \"left\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            }
          ]
        }
      },
      "clickOutsideClose": {
        "defaultValue": {
          "value": "true"
        },
        "description": "click drawer outside close drawer",
        "name": "clickOutsideClose",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "",
        "name": "defaultOpen",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((open: boolean) => void) | undefined"
        }
      },
      "open": {
        "defaultValue": null,
        "description": "",
        "name": "open",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ side?: string | undefined; } | undefined"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "",
        "name": "target",
        "required": false,
        "type": {
          "name": "string | HTMLElement | undefined"
        }
      }
    }
  },
  "FloatingIndicator": {
    "filePath": "D:/sources/rtdui/packages/core/src/FloatingIndicator/FloatingIndicator.tsx",
    "description": "多态组件, ref会转发给实际的组件",
    "displayName": "FloatingIndicator",
    "props": {
      "as": {
        "defaultValue": null,
        "description": "",
        "name": "as",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "displayAfterTransitionEnd": {
        "defaultValue": null,
        "description": "Determines whether indicator should be displayed after transition ends, should be set if used inside a container that has <code>transform: scale(n)</code> styles",
        "name": "displayAfterTransitionEnd",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "parent": {
        "defaultValue": null,
        "description": "Parent element with relative position based on which indicator position should be calculated",
        "name": "parent",
        "required": true,
        "type": {
          "name": "HTMLElement | null | undefined"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "Target element over which indicator should be displayed",
        "name": "target",
        "required": true,
        "type": {
          "name": "HTMLElement | null | undefined"
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "150"
        },
        "description": "Transition duration in ms",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      }
    }
  },
  "FloatingSelect": {
    "filePath": "D:/sources/rtdui/packages/core/src/FloatingSelect/FloatingSelect.tsx",
    "description": "",
    "displayName": "@rtdui/core/FloatingSelect",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "Key of <code>theme.colors</code> or any valid CSS color, changes color of indicator, by default color is based on current color scheme",
        "name": "color",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "data": {
        "defaultValue": null,
        "description": "Data based on which controls are rendered",
        "name": "data",
        "required": true,
        "type": {
          "name": "(string | FloatingSelectItem)[]"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled component default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Determines whether the component is disabled",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "fullWidth": {
        "defaultValue": null,
        "description": "Determines whether the component should take 100% width of its parent, <code>false</code> by default",
        "name": "fullWidth",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Name of the radio group, by default random name is generated",
        "name": "name",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "orientation": {
        "defaultValue": {
          "value": "\"horizontal\""
        },
        "description": "Determines in which orientation component id displayed",
        "name": "orientation",
        "required": false,
        "type": {
          "name": "\"horizontal\" | \"vertical\" | undefined",
          "raw": "\"horizontal\" | \"vertical\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "radius": {
        "defaultValue": {
          "value": "\"sm\""
        },
        "description": "Key of <code>theme.radius</code> or any valid CSS value to set <code>border-radius</code>, numbers are converted to rem",
        "name": "radius",
        "required": false,
        "type": {
          "name": "\"circle\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"circle\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "readOnly": {
        "defaultValue": null,
        "description": "Determines whether the value can be changed",
        "name": "readOnly",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"sm\""
        },
        "description": "Controls <code>font-size</code>, <code>padding</code> and <code>height</code> properties",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            }
          ]
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "200"
        },
        "description": "Indicator <code>transition-duration</code> in ms, set <code>0</code> to turn off transitions",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled component value",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "withItemsSeparator": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether there should be borders between items",
        "name": "withItemsSeparator",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Grid": {
    "filePath": "D:/sources/rtdui/packages/core/src/Grid/Grid.tsx",
    "description": "",
    "displayName": "Grid",
    "props": {
      "align": {
        "defaultValue": {
          "value": "stretch"
        },
        "description": "设置 <code>align-items</code> css规则",
        "name": "align",
        "required": false,
        "type": {
          "name": "AlignItems | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "孩子必须是Col组件",
        "name": "children",
        "required": false,
        "type": {
          "name": "ReactElement<GridColProps, ForwardRefExoticComponent<GridColProps & RefAttributes<HTMLDivElement>>>[] | undefined"
        }
      },
      "columns": {
        "defaultValue": {
          "value": "12"
        },
        "description": "总共列数",
        "name": "columns",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "grow": {
        "defaultValue": {
          "value": "false"
        },
        "description": "最后一行中的列是否填充所有剩余空间.",
        "name": "grow",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "gutter": {
        "defaultValue": {
          "value": "4px"
        },
        "description": "设置 <code>gap</code> css规则",
        "name": "gutter",
        "required": false,
        "type": {
          "name": "ResponsiveProp<string> | undefined"
        }
      },
      "justify": {
        "defaultValue": {
          "value": "flex-start"
        },
        "description": "设置 <code>justify-content</code> css规则",
        "name": "justify",
        "required": false,
        "type": {
          "name": "JustifyContent | undefined"
        }
      }
    }
  },
  "Indicator": {
    "filePath": "D:/sources/rtdui/packages/core/src/Indicator/Indicator.tsx",
    "description": "",
    "displayName": "Indicator",
    "props": {
      "animation": {
        "defaultValue": null,
        "description": "",
        "name": "animation",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "badgeColor": {
        "defaultValue": {
          "value": "secondary"
        },
        "description": "",
        "name": "badgeColor",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "badgeText": {
        "defaultValue": null,
        "description": "",
        "name": "badgeText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "InlineStyles": {
    "filePath": "D:/sources/rtdui/packages/core/src/InlineStyles/InlineStyles.tsx",
    "description": "",
    "displayName": "InlineStyles",
    "props": {
      "media": {
        "defaultValue": null,
        "description": "",
        "name": "media",
        "required": false,
        "type": {
          "name": "InlineStylesMediaQuery[] | undefined"
        }
      },
      "selector": {
        "defaultValue": null,
        "description": "",
        "name": "selector",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "styles": {
        "defaultValue": null,
        "description": "",
        "name": "styles",
        "required": false,
        "type": {
          "name": "CSSProperties | undefined"
        }
      }
    }
  },
  "JionGroup": {
    "filePath": "D:/sources/rtdui/packages/core/src/JionGroup/JionGroup.tsx",
    "description": "",
    "displayName": "JionGroup",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "ReactElements",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      }
    }
  },
  "JsonInput": {
    "filePath": "D:/sources/rtdui/packages/core/src/JsonInput/JsonInput.tsx",
    "description": "`JsonInput`继承了`TextArea`组件的属性",
    "displayName": "JsonInput",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Default value for uncontrolled component",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "formatOnBlur": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the value should be formatted on blur",
        "name": "formatOnBlur",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "maxRows": {
        "defaultValue": null,
        "description": "Maximum rows for autosize textarea to grow",
        "name": "maxRows",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "minRows": {
        "defaultValue": {
          "value": "2"
        },
        "description": "Minimum rows of autosize textarea",
        "name": "minRows",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string) => void) | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ textarea?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value for controlled component",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Kbd": {
    "filePath": "D:/sources/rtdui/packages/core/src/Kbd/Kbd.tsx",
    "description": "",
    "displayName": "Kbd",
    "props": {
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      }
    }
  },
  "Link": {
    "filePath": "D:/sources/rtdui/packages/core/src/Link/Link.tsx",
    "description": "多态组件, ref会转发给实际的组件",
    "displayName": "Link",
    "props": {
      "as": {
        "defaultValue": null,
        "description": "",
        "name": "as",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "尺寸大小",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      }
    }
  },
  "Loading": {
    "filePath": "D:/sources/rtdui/packages/core/src/Loading/Loading.tsx",
    "description": "",
    "displayName": "Loading",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "variant": {
        "defaultValue": {
          "value": "spinner"
        },
        "description": "",
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"spinner\" | \"dots\" | \"ring\" | \"ball\" | \"bars\" | \"infinity\" | undefined",
          "raw": "\"spinner\" | \"dots\" | \"ring\" | \"ball\" | \"bars\" | \"infinity\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"spinner\""
            },
            {
              "value": "\"dots\""
            },
            {
              "value": "\"ring\""
            },
            {
              "value": "\"ball\""
            },
            {
              "value": "\"bars\""
            },
            {
              "value": "\"infinity\""
            }
          ]
        }
      }
    }
  },
  "NumberInput": {
    "filePath": "D:/sources/rtdui/packages/core/src/NumberInput/NumberInput.tsx",
    "description": "NumberInput继承了TextInput的所有属性",
    "displayName": "NumberInput",
    "props": {
      "allowDecimal": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether decimal values are allowed",
        "name": "allowDecimal",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "allowNegative": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether negative values are allowed",
        "name": "allowNegative",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "clampBehavior": {
        "defaultValue": {
          "value": "\"blur\""
        },
        "description": "Controls how value is clamped\n<code>strict</code> – user is not allowed to enter values that are not in <code>[min, max]</code> range,\n<code>blur</code> – user is allowed to enter any values, but the value is clamped when the input loses focus (default behavior),\n<code>none</code> – lifts all restrictions, <code>[min, max]</code> range is applied only for controls and up/down keys",
        "name": "clampBehavior",
        "required": false,
        "type": {
          "name": "\"none\" | \"strict\" | \"blur\" | undefined",
          "raw": "\"none\" | \"strict\" | \"blur\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"strict\""
            },
            {
              "value": "\"blur\""
            }
          ]
        }
      },
      "decimalScale": {
        "defaultValue": null,
        "description": "Limits the number of digits that can be entered after the decimal point",
        "name": "decimalScale",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled component default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "isAllowed": {
        "defaultValue": null,
        "description": "A function to validate the input value. If this function returns <code>false</code>, the <code>onChange</code> will not be called and the input value will not change.",
        "name": "isAllowed",
        "required": false,
        "type": {
          "name": "((values: NumberFormatValues) => boolean) | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "max": {
        "defaultValue": null,
        "description": "Maximum possible value",
        "name": "max",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "min": {
        "defaultValue": null,
        "description": "Minimum possible value",
        "name": "min",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string | number) => void) | undefined"
        }
      },
      "onValueChange": {
        "defaultValue": null,
        "description": "Called when value changes with <code>react-number-format</code> payload",
        "name": "onValueChange",
        "required": false,
        "type": {
          "name": "OnValueChange | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "prefix": {
        "defaultValue": null,
        "description": "Prefix added before the input value",
        "name": "prefix",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "step": {
        "defaultValue": {
          "value": "1"
        },
        "description": "Number by which value will be incremented/decremented with up/down controls and keyboard arrows",
        "name": "step",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "suffix": {
        "defaultValue": null,
        "description": "Suffix added after the input value",
        "name": "suffix",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thousandsGroupStyle": {
        "defaultValue": null,
        "description": "Defines the thousand grouping style.",
        "name": "thousandsGroupStyle",
        "required": false,
        "type": {
          "name": "\"thousand\" | \"lakh\" | \"wan\" | undefined",
          "raw": "\"thousand\" | \"lakh\" | \"wan\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"thousand\""
            },
            {
              "value": "\"lakh\""
            },
            {
              "value": "\"wan\""
            }
          ]
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled component value",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      }
    }
  },
  "Pagination": {
    "filePath": "D:/sources/rtdui/packages/core/src/Pagination/Pagination.tsx",
    "description": "",
    "displayName": "Pagination",
    "props": {
      "boundaryCount": {
        "defaultValue": {
          "value": "1"
        },
        "description": "左右边界的显示数量",
        "name": "boundaryCount",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "count": {
        "defaultValue": null,
        "description": "总页数",
        "name": "count",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "defaultPage": {
        "defaultValue": null,
        "description": "",
        "name": "defaultPage",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((page: number) => void) | undefined"
        }
      },
      "page": {
        "defaultValue": null,
        "description": "",
        "name": "page",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "sharp": {
        "defaultValue": null,
        "description": "矩形或圆形, 用于单字符或图标",
        "name": "sharp",
        "required": false,
        "type": {
          "name": "\"circle\" | \"square\" | undefined",
          "raw": "\"circle\" | \"square\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"circle\""
            },
            {
              "value": "\"square\""
            }
          ]
        }
      },
      "showFirstButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "showFirstButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showLastButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "showLastButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showNextButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "showNextButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showPrevButton": {
        "defaultValue": {
          "value": "true"
        },
        "description": "",
        "name": "showPrevButton",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "siblingCount": {
        "defaultValue": {
          "value": "1"
        },
        "description": "选中项两边的显示数量",
        "name": "siblingCount",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      }
    }
  },
  "Paper": {
    "filePath": "D:/sources/rtdui/packages/core/src/Paper/Paper.tsx",
    "description": "",
    "displayName": "Paper",
    "props": {
      "elevation": {
        "defaultValue": null,
        "description": "",
        "name": "elevation",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      }
    }
  },
  "Box": {
    "filePath": "D:/sources/rtdui/packages/core/src/Polymorphic/Box.tsx",
    "description": "",
    "displayName": "Box",
    "props": {
      "as": {
        "defaultValue": null,
        "description": "",
        "name": "as",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      }
    }
  },
  "Popover": {
    "filePath": "D:/sources/rtdui/packages/core/src/Popover/Popover.tsx",
    "description": "",
    "displayName": "Popover",
    "props": {
      "activeListIndex": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引,该属性是受控属性",
        "name": "activeListIndex",
        "required": false,
        "type": {
          "name": "number | null | undefined"
        }
      },
      "defaultActiveIndex": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引,该属性是非受控属性",
        "name": "defaultActiveIndex",
        "required": false,
        "type": {
          "name": "number | null | undefined"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "非受控属性",
        "name": "defaultOpen",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "禁用的",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "extraMiddleware": {
        "defaultValue": null,
        "description": "额外的@floating-ui中间件",
        "name": "extraMiddleware",
        "required": false,
        "type": {
          "name": "{ name: string; options?: any; fn: (state: { platform: Platform; placement: Placement; strategy: Strategy; x: number; y: number; initialPlacement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<...>; }[] | undefined"
        }
      },
      "focusTrap": {
        "defaultValue": {
          "value": "false"
        },
        "description": "弹出框显示时是否将焦点范围限制在弹出框内",
        "name": "focusTrap",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "listRef": {
        "defaultValue": null,
        "description": "list ref, 对于列表非常有用",
        "name": "listRef",
        "required": false,
        "type": {
          "name": "MutableRefObject<any> | undefined"
        }
      },
      "offset": {
        "defaultValue": {
          "value": "8"
        },
        "description": "弹出框偏移引用元素的距离",
        "name": "offset",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onActiveIndexChanged": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引改变时触发",
        "name": "onActiveIndexChanged",
        "required": false,
        "type": {
          "name": "((index: number | null) => void) | undefined"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "An event callback that is invoked when the floating element is opened or\nclosed.",
        "name": "onOpenChange",
        "required": false,
        "type": {
          "name": "((open: boolean) => void) | undefined"
        }
      },
      "open": {
        "defaultValue": null,
        "description": "受控属性",
        "name": "open",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnClick": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否鼠标点击时显示弹出框",
        "name": "openOnClick",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnFocus": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否引用元素得到焦点时显示弹出框, 用于键盘导航到引用元素",
        "name": "openOnFocus",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnHover": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否鼠标移入时显示弹出框, 这对于实现工具提示非常有用",
        "name": "openOnHover",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "placement": {
        "defaultValue": null,
        "description": "弹出位置",
        "name": "placement",
        "required": false,
        "type": {
          "name": "\"bottom\" | \"right\" | \"left\" | \"top\" | \"bottom-end\" | \"bottom-start\" | \"right-end\" | \"right-start\" | \"left-end\" | \"left-start\" | \"top-end\" | \"top-start\" | undefined",
          "raw": "\"bottom\" | \"right\" | \"left\" | \"top\" | \"bottom-end\" | \"bottom-start\" | \"right-end\" | \"right-start\" | \"left-end\" | \"left-start\" | \"top-end\" | \"top-start\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"top\""
            },
            {
              "value": "\"bottom-end\""
            },
            {
              "value": "\"bottom-start\""
            },
            {
              "value": "\"right-end\""
            },
            {
              "value": "\"right-start\""
            },
            {
              "value": "\"left-end\""
            },
            {
              "value": "\"left-start\""
            },
            {
              "value": "\"top-end\""
            },
            {
              "value": "\"top-start\""
            }
          ]
        }
      },
      "transition": {
        "defaultValue": {
          "value": "\"fade\""
        },
        "description": "传递给Transition组件的transition属性",
        "name": "transition",
        "required": false,
        "type": {
          "name": "TransitionType | undefined"
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "250"
        },
        "description": "传递给Transition组件的duration属性",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "TransitionDuration | undefined"
        }
      },
      "transitionTimingFunction": {
        "defaultValue": {
          "value": "\"ease\""
        },
        "description": "传递给Transition组件的timingFunction属性",
        "name": "transitionTimingFunction",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "usePopover": {
    "filePath": "D:/sources/rtdui/packages/core/src/Popover/usePopover.tsx",
    "description": "",
    "displayName": "usePopover",
    "props": {
      "activeListIndex": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引,该属性是受控属性",
        "name": "activeListIndex",
        "required": false,
        "type": {
          "name": "number | null | undefined"
        }
      },
      "defaultActiveIndex": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引,该属性是非受控属性",
        "name": "defaultActiveIndex",
        "required": false,
        "type": {
          "name": "number | null | undefined"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "非受控属性",
        "name": "defaultOpen",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "禁用的",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "extraMiddleware": {
        "defaultValue": null,
        "description": "额外的@floating-ui中间件",
        "name": "extraMiddleware",
        "required": false,
        "type": {
          "name": "{ name: string; options?: any; fn: (state: { platform: Platform; placement: Placement; strategy: Strategy; x: number; y: number; initialPlacement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<...>; }[] | undefined"
        }
      },
      "focusTrap": {
        "defaultValue": {
          "value": "false"
        },
        "description": "弹出框显示时是否将焦点范围限制在弹出框内",
        "name": "focusTrap",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "listRef": {
        "defaultValue": null,
        "description": "list ref, 对于列表非常有用",
        "name": "listRef",
        "required": false,
        "type": {
          "name": "MutableRefObject<any> | undefined"
        }
      },
      "offset": {
        "defaultValue": {
          "value": "8"
        },
        "description": "弹出框偏移引用元素的距离",
        "name": "offset",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onActiveIndexChanged": {
        "defaultValue": null,
        "description": "列表键盘导航激活的索引改变时触发",
        "name": "onActiveIndexChanged",
        "required": false,
        "type": {
          "name": "((index: number | null) => void) | undefined"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "An event callback that is invoked when the floating element is opened or\nclosed.",
        "name": "onOpenChange",
        "required": false,
        "type": {
          "name": "((open: boolean) => void) | undefined"
        }
      },
      "open": {
        "defaultValue": null,
        "description": "受控属性",
        "name": "open",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnClick": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否鼠标点击时显示弹出框",
        "name": "openOnClick",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnFocus": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否引用元素得到焦点时显示弹出框, 用于键盘导航到引用元素",
        "name": "openOnFocus",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "openOnHover": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否鼠标移入时显示弹出框, 这对于实现工具提示非常有用",
        "name": "openOnHover",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "placement": {
        "defaultValue": null,
        "description": "弹出位置",
        "name": "placement",
        "required": false,
        "type": {
          "name": "\"bottom\" | \"right\" | \"left\" | \"top\" | \"bottom-end\" | \"bottom-start\" | \"right-end\" | \"right-start\" | \"left-end\" | \"left-start\" | \"top-end\" | \"top-start\" | undefined",
          "raw": "\"bottom\" | \"right\" | \"left\" | \"top\" | \"bottom-end\" | \"bottom-start\" | \"right-end\" | \"right-start\" | \"left-end\" | \"left-start\" | \"top-end\" | \"top-start\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"top\""
            },
            {
              "value": "\"bottom-end\""
            },
            {
              "value": "\"bottom-start\""
            },
            {
              "value": "\"right-end\""
            },
            {
              "value": "\"right-start\""
            },
            {
              "value": "\"left-end\""
            },
            {
              "value": "\"left-start\""
            },
            {
              "value": "\"top-end\""
            },
            {
              "value": "\"top-start\""
            }
          ]
        }
      },
      "transition": {
        "defaultValue": {
          "value": "\"fade\""
        },
        "description": "传递给Transition组件的transition属性",
        "name": "transition",
        "required": false,
        "type": {
          "name": "TransitionType | undefined"
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "250"
        },
        "description": "传递给Transition组件的duration属性",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "TransitionDuration | undefined"
        }
      },
      "transitionTimingFunction": {
        "defaultValue": {
          "value": "\"ease\""
        },
        "description": "传递给Transition组件的timingFunction属性",
        "name": "transitionTimingFunction",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Portal": {
    "filePath": "D:/sources/rtdui/packages/core/src/Portal/Portal.tsx",
    "description": "",
    "displayName": "Portal",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Portal children, for example, modal or popover",
        "name": "children",
        "required": true,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "Element inside which portal should be created, by default a new div element is created and appended to the <code>document.body</code>",
        "name": "target",
        "required": false,
        "type": {
          "name": "string | HTMLElement | undefined"
        }
      },
      "type": {
        "defaultValue": null,
        "description": "",
        "name": "type",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Progress": {
    "filePath": "D:/sources/rtdui/packages/core/src/Progress/Progress.tsx",
    "description": "",
    "displayName": "Progress",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "max": {
        "defaultValue": {
          "value": "100"
        },
        "description": "",
        "name": "max",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "xs"
        },
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "value": {
        "defaultValue": null,
        "description": "如果未提供, 则会动画进度条表示不确定的状态",
        "name": "value",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "RadialProgress": {
    "filePath": "D:/sources/rtdui/packages/core/src/RadialProgress/RadialProgress.tsx",
    "description": "",
    "displayName": "RadialProgress",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "size": {
        "defaultValue": null,
        "description": "任意合法的CSS长度单位",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thickness": {
        "defaultValue": null,
        "description": "任意合法的CSS长度单位",
        "name": "thickness",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "0-100内的任意值",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "Radio": {
    "filePath": "D:/sources/rtdui/packages/core/src/Radio/Radio.tsx",
    "description": "ref属性会转发至内部的input元素\n如果Radio在RadioGroup内,则自身的name,checked,size和color属性值会被忽略, 优先使用RadioGroup上下文提供的值\n自身的onChange事件会保留并优先触发, 以便用户应对特殊情况的特殊处理",
    "displayName": "Radio",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "RadioGroup": {
    "filePath": "D:/sources/rtdui/packages/core/src/RadioGroup/RadioGroup.tsx",
    "description": "ref属性会转发至内部的input元素",
    "displayName": "RadioGroup",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string | number) => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      }
    }
  },
  "Rating": {
    "filePath": "D:/sources/rtdui/packages/core/src/Rating/Rating.tsx",
    "description": "星级评分",
    "displayName": "Rating",
    "props": {
      "count": {
        "defaultValue": {
          "value": "5"
        },
        "description": "评级的数量",
        "name": "count",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "half": {
        "defaultValue": {
          "value": "5"
        },
        "description": "是否可评半级",
        "name": "half",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "",
        "name": "name",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((val: number) => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "显示尺寸\n@link SizeMode",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ star?: string | undefined; } | undefined"
        }
      },
      "star": {
        "defaultValue": {
          "value": "star2"
        },
        "description": "星图像",
        "name": "star",
        "required": false,
        "type": {
          "name": "\"star\" | \"star2\" | \"heart\" | undefined",
          "raw": "\"star\" | \"star2\" | \"heart\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"star\""
            },
            {
              "value": "\"star2\""
            },
            {
              "value": "\"heart\""
            }
          ]
        }
      },
      "value": {
        "defaultValue": {
          "value": "5"
        },
        "description": "当前的星级, 从1开始",
        "name": "value",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "Select": {
    "filePath": "D:/sources/rtdui/packages/core/src/Select/Select.tsx",
    "description": "",
    "displayName": "Select",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | string[] | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "multiple": {
        "defaultValue": null,
        "description": "",
        "name": "multiple",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((val: string | string[]) => void) | undefined"
        }
      },
      "options": {
        "defaultValue": null,
        "description": "",
        "name": "options",
        "required": true,
        "type": {
          "name": "string[] | ItemOption[]"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "({ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } & { menu?: string | undefined; }) | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | string[] | undefined"
        }
      }
    }
  },
  "SelectNative": {
    "filePath": "D:/sources/rtdui/packages/core/src/SelectNative/SelectNative.tsx",
    "description": "",
    "displayName": "SelectNative",
    "props": {
      "bordered": {
        "defaultValue": null,
        "description": "",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ select?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "Skeleton": {
    "filePath": "D:/sources/rtdui/packages/core/src/Skeleton/Skeleton.tsx",
    "description": "",
    "displayName": "Skeleton",
    "props": {
      "box": {
        "defaultValue": null,
        "description": "",
        "name": "box",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "circle": {
        "defaultValue": null,
        "description": "",
        "name": "circle",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "paragraph": {
        "defaultValue": null,
        "description": "",
        "name": "paragraph",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "StatPanel": {
    "filePath": "D:/sources/rtdui/packages/core/src/StatPanel/StatPanel.tsx",
    "description": "",
    "displayName": "StatPanel",
    "props": {
      "elevation": {
        "defaultValue": null,
        "description": "",
        "name": "elevation",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      },
      "items": {
        "defaultValue": null,
        "description": "",
        "name": "items",
        "required": true,
        "type": {
          "name": "{ figure?: ReactNode; title?: ReactNode; value?: ReactNode; desc?: ReactNode; actions?: ReactNode; }[]"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ stat?: string | undefined; title?: string | undefined; figure?: string | undefined; value?: string | undefined; desc?: string | undefined; actions?: string | undefined; } | undefined"
        }
      }
    }
  },
  "Steps": {
    "filePath": "D:/sources/rtdui/packages/core/src/Steps/Steps.tsx",
    "description": "",
    "displayName": "Steps",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "defaultStep": {
        "defaultValue": null,
        "description": "非受控属性, 当前步骤",
        "name": "defaultStep",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "步骤改变时",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((step: number) => void) | undefined"
        }
      },
      "sequential": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否按顺序跳转, true时只能通过受控属性或api跳转, false时用户可以点击任意步骤跳转",
        "name": "sequential",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "step": {
        "defaultValue": null,
        "description": "受控属性, 当前步骤",
        "name": "step",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "steps": {
        "defaultValue": null,
        "description": "步骤列表",
        "name": "steps",
        "required": true,
        "type": {
          "name": "string[]"
        }
      }
    }
  },
  "Swap": {
    "filePath": "D:/sources/rtdui/packages/core/src/Swap/Swap.tsx",
    "description": "",
    "displayName": "Swap",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "如果indeterminate未启用时, 应提供并列的两个孩子作为切换元素, 其中第一个为on时的显示元素, 第二个为off时的显示元素;\n否则应提供并列的三个孩子, 其中前两个作为切换元素, 最后一个作为中间态时的显示元素.\n元素可以是任意有效的React元素.",
        "name": "children",
        "required": true,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "indeterminate": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否启用中间态",
        "name": "indeterminate",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "transitionEffect": {
        "defaultValue": {
          "value": "fade"
        },
        "description": "过渡效果",
        "name": "transitionEffect",
        "required": false,
        "type": {
          "name": "\"fade\" | \"rotate\" | \"flip\" | undefined",
          "raw": "\"fade\" | \"rotate\" | \"flip\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"fade\""
            },
            {
              "value": "\"rotate\""
            },
            {
              "value": "\"flip\""
            }
          ]
        }
      }
    }
  },
  "Switch": {
    "filePath": "D:/sources/rtdui/packages/core/src/Switch/Switch.tsx",
    "description": "",
    "displayName": "Switch",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "labelPosition": {
        "defaultValue": {
          "value": "left"
        },
        "description": "标签居左还是居右",
        "name": "labelPosition",
        "required": false,
        "type": {
          "name": "\"right\" | \"left\" | undefined",
          "raw": "\"right\" | \"left\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            }
          ]
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((checked: boolean) => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "Tab": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tabs/Tab.tsx",
    "description": "",
    "displayName": "@rtdui/core/Tab",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Tab label",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "controls control color based on <code>variant</code>",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "Content displayed on the left side of the label, for example, icon",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "Content displayed on the right side of the label, for example, icon",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value of associated panel",
        "name": "value",
        "required": true,
        "type": {
          "name": "string"
        }
      }
    }
  },
  "TabList": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tabs/TabList.tsx",
    "description": "",
    "displayName": "@rtdui/core/TabList",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "<code>Tabs.Tab</code> components",
        "name": "children",
        "required": true,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "grow": {
        "defaultValue": null,
        "description": "Determines whether tabs should take all available space, <code>false</code> by default",
        "name": "grow",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "justify": {
        "defaultValue": {
          "value": "'start'"
        },
        "description": "Tabs alignment",
        "name": "justify",
        "required": false,
        "type": {
          "name": "\"center\" | \"end\" | \"start\" | undefined",
          "raw": "\"center\" | \"end\" | \"start\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"center\""
            },
            {
              "value": "\"end\""
            },
            {
              "value": "\"start\""
            }
          ]
        }
      }
    }
  },
  "TabPanel": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tabs/TabPanel.tsx",
    "description": "",
    "displayName": "@rtdui/core/TabPanel",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Panel content",
        "name": "children",
        "required": true,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "keepMounted": {
        "defaultValue": null,
        "description": "If set to <code>true</code>, the content will be kept mounted, even if <code>keepMounted</code> is set <code>false</code> in the parent <code>Tabs</code> component",
        "name": "keepMounted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value of associated control",
        "name": "value",
        "required": true,
        "type": {
          "name": "string"
        }
      }
    }
  },
  "Tabs": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tabs/Tabs.tsx",
    "description": "",
    "displayName": "@rtdui/core/Tabs",
    "props": {
      "activateTabWithKeyboard": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether tab should be activated with arrow key press",
        "name": "activateTabWithKeyboard",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "allowTabDeactivation": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether tab can be deactivated",
        "name": "allowTabDeactivation",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Tabs content",
        "name": "children",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "color": {
        "defaultValue": {
          "value": "\"primary\""
        },
        "description": "Changes colors of <code>Tabs.Tab</code> components when variant is <code>pills</code> or <code>default</code>, does nothing for other variants",
        "name": "color",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Default value for uncontrolled component",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | null | undefined"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "Base id, used to generate ids to connect labels with controls, generated randomly by default",
        "name": "id",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "inverted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether tabs should have inverted styles",
        "name": "inverted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "keepMounted": {
        "defaultValue": {
          "value": "true"
        },
        "description": "If set to <code>false</code>, <code>Tabs.Panel</code> content will be unmounted when the associated tab is not active",
        "name": "keepMounted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "loop": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether arrow key presses should loop though items (first to last and last to first)",
        "name": "loop",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: string | null) => void) | undefined"
        }
      },
      "orientation": {
        "defaultValue": {
          "value": "'horizontal'"
        },
        "description": "Tabs orientation",
        "name": "orientation",
        "required": false,
        "type": {
          "name": "\"horizontal\" | \"vertical\" | undefined",
          "raw": "\"horizontal\" | \"vertical\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "placement": {
        "defaultValue": {
          "value": "'left'"
        },
        "description": "<code>Tabs.List</code> placement relative to <code>Tabs.Panel</code>, applicable only when <code>orientation=\"vertical\"</code>",
        "name": "placement",
        "required": false,
        "type": {
          "name": "\"right\" | \"left\" | undefined",
          "raw": "\"right\" | \"left\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            }
          ]
        }
      },
      "radius": {
        "defaultValue": {
          "value": "'md'"
        },
        "description": "\"xs\",\"sm\",\"md\",\"lg\" or any valid CSS value to set <code>border-radius</code>",
        "name": "radius",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value for controlled component",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | null | undefined"
        }
      },
      "variant": {
        "defaultValue": {
          "value": "'default'"
        },
        "description": "variant",
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"outline\" | \"default\" | \"pills\" | undefined",
          "raw": "\"outline\" | \"default\" | \"pills\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"outline\""
            },
            {
              "value": "\"default\""
            },
            {
              "value": "\"pills\""
            }
          ]
        }
      }
    }
  },
  "TabsSimple": {
    "filePath": "D:/sources/rtdui/packages/core/src/TabsSimple/TabsSimple.tsx",
    "description": "",
    "displayName": "TabsSimple",
    "props": {
      "initIndex": {
        "defaultValue": null,
        "description": "",
        "name": "initIndex",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"md\""
        },
        "description": "尺寸",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "variant": {
        "defaultValue": {
          "value": "lifted"
        },
        "description": "变体",
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"bordered\" | \"lifted\" | \"boxed\" | undefined",
          "raw": "\"bordered\" | \"lifted\" | \"boxed\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"bordered\""
            },
            {
              "value": "\"lifted\""
            },
            {
              "value": "\"boxed\""
            }
          ]
        }
      }
    }
  },
  "TabsSimplePanel": {
    "filePath": "D:/sources/rtdui/packages/core/src/TabsSimple/TabsSimplePanel.tsx",
    "description": "",
    "displayName": "TabsSimplePanel",
    "props": {
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "index": {
        "defaultValue": null,
        "description": "",
        "name": "index",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "keepMounted": {
        "defaultValue": null,
        "description": "",
        "name": "keepMounted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "variant": {
        "defaultValue": null,
        "description": "",
        "name": "variant",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "TextArea": {
    "filePath": "D:/sources/rtdui/packages/core/src/TextArea/TextArea.tsx",
    "description": "TextArea继承了textarea的所有属性",
    "displayName": "TextArea",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "maxRows": {
        "defaultValue": null,
        "description": "Maximum rows for autosize textarea to grow",
        "name": "maxRows",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "minRows": {
        "defaultValue": {
          "value": "2"
        },
        "description": "Minimum rows of autosize textarea",
        "name": "minRows",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ textarea?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "TextInput": {
    "filePath": "D:/sources/rtdui/packages/core/src/TextInput/TextInput.tsx",
    "description": "",
    "displayName": "TextInput",
    "props": {
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "可以通过槽为内部组件添加自定义className",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } | undefined"
        }
      }
    }
  },
  "Tooltip": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tooltip/Tooltip.tsx",
    "description": "",
    "displayName": "Tooltip",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "position": {
        "defaultValue": null,
        "description": "气泡提示的显示位置",
        "name": "position",
        "required": false,
        "type": {
          "name": "\"bottom\" | \"right\" | \"left\" | \"top\" | undefined",
          "raw": "\"bottom\" | \"right\" | \"left\" | \"top\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"top\""
            }
          ]
        }
      },
      "tip": {
        "defaultValue": null,
        "description": "",
        "name": "tip",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "transition": {
        "defaultValue": {
          "value": "\"fade\""
        },
        "description": "过渡属性",
        "name": "transition",
        "required": false,
        "type": {
          "name": "TransitionType | undefined"
        }
      },
      "transitionDuration": {
        "defaultValue": {
          "value": "250"
        },
        "description": "过渡时间",
        "name": "transitionDuration",
        "required": false,
        "type": {
          "name": "TransitionDuration | undefined"
        }
      },
      "transitionTimingFunction": {
        "defaultValue": null,
        "description": "",
        "name": "transitionTimingFunction",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Transition": {
    "filePath": "D:/sources/rtdui/packages/core/src/Transition/Transition.tsx",
    "description": "",
    "displayName": "Transition",
    "props": {
      "appear": {
        "defaultValue": null,
        "description": "是否in为true时挂载时执行过渡",
        "name": "appear",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "duration": {
        "defaultValue": {
          "value": "250"
        },
        "description": "Transition duration in ms",
        "name": "duration",
        "required": false,
        "type": {
          "name": "TransitionDuration | undefined"
        }
      },
      "in": {
        "defaultValue": null,
        "description": "进入过渡",
        "name": "in",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "timingFunction": {
        "defaultValue": {
          "value": "\"ease\""
        },
        "description": "过渡缓动函数",
        "name": "timingFunction",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "transition": {
        "defaultValue": {
          "value": "\"fade\""
        },
        "description": "过渡名称",
        "name": "transition",
        "required": false,
        "type": {
          "name": "TransitionType | undefined"
        }
      },
      "unmountOnExit": {
        "defaultValue": {
          "value": "true"
        },
        "description": "退场过渡完成后是否卸载组件, 初始时不挂载组件",
        "name": "unmountOnExit",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "Tree": {
    "filePath": "D:/sources/rtdui/packages/core/src/Tree/Tree.tsx",
    "description": "",
    "displayName": "Tree",
    "props": {
      "ItemActionsComponent": {
        "defaultValue": null,
        "description": "",
        "name": "ItemActionsComponent",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "ItemIconComponent": {
        "defaultValue": null,
        "description": "",
        "name": "ItemIconComponent",
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements> | undefined"
        }
      },
      "childrenField": {
        "defaultValue": null,
        "description": "",
        "name": "childrenField",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "data": {
        "defaultValue": null,
        "description": "",
        "name": "data",
        "required": true,
        "type": {
          "name": "Record<string, any>[]"
        }
      },
      "displayField": {
        "defaultValue": null,
        "description": "",
        "name": "displayField",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "expandAll": {
        "defaultValue": null,
        "description": "",
        "name": "expandAll",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onItemClick": {
        "defaultValue": null,
        "description": "",
        "name": "onItemClick",
        "required": false,
        "type": {
          "name": "((item: any) => void) | undefined"
        }
      }
    }
  },
  "createOptionalContext": {
    "filePath": "D:/sources/rtdui/packages/core/src/utils/createOptionalContext.tsx",
    "description": "",
    "displayName": "createOptionalContext",
    "props": {}
  },
  "createSafeContext": {
    "filePath": "D:/sources/rtdui/packages/core/src/utils/createSafeContext.tsx",
    "description": "",
    "displayName": "createSafeContext",
    "props": {}
  },
  "useWatermark": {
    "filePath": "D:/sources/rtdui/packages/core/src/Watermark/useWatermark.tsx",
    "description": "",
    "displayName": "useWatermark",
    "props": {}
  },
  "BaseSize": {
    "filePath": "D:/sources/rtdui/packages/core/src/Watermark/useWatermark.tsx",
    "description": "Base size of the canvas, 1 for parallel layout and 2 for alternate layout\nOnly alternate layout is currently supported",
    "displayName": "BaseSize",
    "props": {}
  },
  "Watermark": {
    "filePath": "D:/sources/rtdui/packages/core/src/Watermark/Watermark.tsx",
    "description": "",
    "displayName": "Watermark",
    "props": {
      "fillColor": {
        "defaultValue": null,
        "description": "填充色",
        "name": "fillColor",
        "required": false,
        "type": {
          "name": "string | CanvasGradient | CanvasPattern | undefined"
        }
      },
      "font": {
        "defaultValue": null,
        "description": "",
        "name": "font",
        "required": false,
        "type": {
          "name": "{ fontSize?: string | number | undefined; fontWeight?: number | \"normal\" | \"light\" | \"weight\" | undefined; fontStyle?: \"none\" | \"normal\" | \"italic\" | \"oblique\" | undefined; fontFamily?: string | undefined; } | undefined"
        }
      },
      "gap": {
        "defaultValue": null,
        "description": "",
        "name": "gap",
        "required": false,
        "type": {
          "name": "[number, number] | undefined"
        }
      },
      "height": {
        "defaultValue": null,
        "description": "",
        "name": "height",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "imageSrc": {
        "defaultValue": null,
        "description": "图像url",
        "name": "imageSrc",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "offset": {
        "defaultValue": null,
        "description": "",
        "name": "offset",
        "required": false,
        "type": {
          "name": "[number, number] | undefined"
        }
      },
      "rotate": {
        "defaultValue": {
          "value": "-22"
        },
        "description": "旋转度数, 正数顺时针, 负数逆时针",
        "name": "rotate",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "text": {
        "defaultValue": null,
        "description": "",
        "name": "text",
        "required": false,
        "type": {
          "name": "string | string[] | undefined"
        }
      },
      "width": {
        "defaultValue": null,
        "description": "",
        "name": "width",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "BodyCell": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/BodyCell.tsx",
    "description": "",
    "displayName": "BodyCell",
    "props": {
      "cell": {
        "defaultValue": null,
        "description": "",
        "name": "cell",
        "required": true,
        "type": {
          "name": "Cell<any, any>"
        }
      },
      "changesRef": {
        "defaultValue": null,
        "description": "",
        "name": "changesRef",
        "required": true,
        "type": {
          "name": "MutableRefObject<any>"
        }
      },
      "enableGrouping": {
        "defaultValue": null,
        "description": "",
        "name": "enableGrouping",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "scrollingTrigger": {
        "defaultValue": null,
        "description": "",
        "name": "scrollingTrigger",
        "required": true,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  "ColumnsVisibility": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/ColumnsVisibility.tsx",
    "description": "",
    "displayName": "ColumnsVisibility",
    "props": {
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "DataTable": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/DataTable.tsx",
    "description": "",
    "displayName": "DataTable",
    "props": {
      "autoExpandAll": {
        "defaultValue": {
          "value": "false"
        },
        "description": "当table可展开时是否自动展开所有",
        "name": "autoExpandAll",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "columnResizeMode": {
        "defaultValue": {
          "value": "\"onChange\""
        },
        "description": "调整列宽时状态在何时生效, 'onEnd'表示在释放拖动时生效, 'onChange'表示在拖动过程中生效",
        "name": "columnResizeMode",
        "required": false,
        "type": {
          "name": "\"onChange\" | \"onEnd\" | undefined",
          "raw": "\"onChange\" | \"onEnd\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"onChange\""
            },
            {
              "value": "\"onEnd\""
            }
          ]
        }
      },
      "columns": {
        "defaultValue": null,
        "description": "列定义对象数组\n\n自动生成列id规则: 最优先使用id键,如果没有指定则以accessorKey作为列id, 如果accessorKey没有指定并且header是字符串时, 则使用header的字符串值作为列id, 都不符合时报错\n\n列id在许多地方会用到, 包括作为组名, 显示/隐藏列的列名等. 因此对于中文列名, 必须手动设定列id, 并且用中文作为id值.",
        "name": "columns",
        "required": true,
        "type": {
          "name": "ColumnDef<any, any>[]"
        }
      },
      "data": {
        "defaultValue": null,
        "description": "数据行对象数组\n\n注意: 如果需要树形展示, data必须是层次结构的.不支持id-parentId形式的平面数据.\n可以使用@rtdui/core包中的工具函数<code>flatToTree()</code>先将id-parentId形式的平面数据转化为层次结构的数据. 然后再赋值给data属性",
        "name": "data",
        "required": true,
        "type": {
          "name": "any[]"
        }
      },
      "debouncedWait": {
        "defaultValue": {
          "value": "500"
        },
        "description": "过滤编辑器中用户输入生效的延迟毫秒数",
        "name": "debouncedWait",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "enableAutoRowNumber": {
        "defaultValue": {
          "value": "false"
        },
        "description": "自动创建行号列, 自动行号在初始化确定, 后续的排序过滤将不受影响.",
        "name": "enableAutoRowNumber",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableClickRowSelection": {
        "defaultValue": {
          "value": "true"
        },
        "description": "启用行选择功能时, 是否启动点击行选择.",
        "name": "enableClickRowSelection",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableColumnFilters": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用列头过滤功能, 列的过滤函数由列定义中的filterFn字段指定",
        "name": "enableColumnFilters",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableColumnReorder": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否允许用户拖放调整列序",
        "name": "enableColumnReorder",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableColumnResizing": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用调整列宽",
        "name": "enableColumnResizing",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableExpanding": {
        "defaultValue": null,
        "description": "是否启用展开功能, 树形和数据分组依赖该功能.\n只要 enableTree或者enableGrouping启用时为true",
        "name": "enableExpanding",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableExport": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否启用表格导出",
        "name": "enableExport",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableFilters": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否启用过滤功能",
        "name": "enableFilters",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableGlobalFilter": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用全局过滤功能,",
        "name": "enableGlobalFilter",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableGrouping": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用数据分组功能, 支持多列分组.\n注意: 不能和树型表格同时启用",
        "name": "enableGrouping",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableHiding": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用列隐藏",
        "name": "enableHiding",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableMultiRowSelection": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否允许用户多选行, 可以传入函数自定义决定哪些行可以被多选",
        "name": "enableMultiRowSelection",
        "required": false,
        "type": {
          "name": "boolean | ((row: Row<any>) => boolean) | undefined"
        }
      },
      "enableMultiSort": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用多列排序",
        "name": "enableMultiSort",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enablePagination": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否启用分页",
        "name": "enablePagination",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enablePinning": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用冻结功能",
        "name": "enablePinning",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableRowSelection": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否允许用户选择行, 可以传入自定义函数决定哪些行可以被选择",
        "name": "enableRowSelection",
        "required": false,
        "type": {
          "name": "boolean | ((row: Row<any>) => boolean) | undefined"
        }
      },
      "enableSorting": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用列排序功能, 支持Shift键多列排序",
        "name": "enableSorting",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableSortingRemoval": {
        "defaultValue": {
          "value": "true"
        },
        "description": "排序是否可以清除.\n当true时的排序循环: 'none' -> 'desc' -> 'asc' -> 'none' -> ..., 当false时的排序循环: 'none' -> 'desc' -> 'asc' -> 'desc' -> 'asc' -> ...",
        "name": "enableSortingRemoval",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableStickyHeader": {
        "defaultValue": {
          "value": "true"
        },
        "description": "表格滚动时列头固定在视图顶部",
        "name": "enableStickyHeader",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableSubRowSelection": {
        "defaultValue": {
          "value": "false"
        },
        "description": "多行选择启用时, 在树型表或数据分组时, 当父行选中时, 是否自动选中所有子行. 可以传入函数自定义决定哪些子行被选中",
        "name": "enableSubRowSelection",
        "required": false,
        "type": {
          "name": "boolean | ((row: Row<any>) => boolean) | undefined"
        }
      },
      "enableVirtualized": {
        "defaultValue": {
          "value": "false"
        },
        "description": "滚动虚拟化器",
        "name": "enableVirtualized",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "filterFromLeafRows": {
        "defaultValue": {
          "value": "false"
        },
        "description": "过滤启用时,并且启用了数据分组或树型表时, 决定过滤的顺序, false表示从父到子, 意味着父行不包括,所有子孙行必定也不包括. true表示从子到父, 意味着只要子孙行包括在内，必定会包括父行.\n注意: 如果该选项为true, 过滤后唯一值列表只会是空, 这导致了无法再进行选择列表进行过滤.",
        "name": "filterFromLeafRows",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "getRowId": {
        "defaultValue": {
          "value": "(row) => row.id"
        },
        "description": "定义如何获得行id",
        "name": "getRowId",
        "required": false,
        "type": {
          "name": "((row: any) => any) | undefined"
        }
      },
      "getSubRows": {
        "defaultValue": null,
        "description": "获取每行孩子的方法,如果定义该函数则启用可展示/收缩的树形展示, 列定义中第一个定义了id属性的列为可展开列\n注意: 当启用数据分组时不能设置该属性, 否则会有冲突.",
        "name": "getSubRows",
        "required": false,
        "type": {
          "name": "((row: any) => any[]) | undefined"
        }
      },
      "groupedColumnMode": {
        "defaultValue": {
          "value": "\"reorder\""
        },
        "description": "被分组的列的处理模式, 'reorder'表示放到首列并固定, false与'reorder'一致. 'remove'移除被分组的列",
        "name": "groupedColumnMode",
        "required": false,
        "type": {
          "name": "false | \"reorder\" | \"remove\" | undefined"
        }
      },
      "initialState": {
        "defaultValue": null,
        "description": "数据表的初始状态, 这个属性是非受控的. 数据表组件挂载后更新该属性不会导致数据表状态改变.\n注意: 不要同时对某项状态同时在initialState和state指定. state会覆盖initialState中的相应的值",
        "name": "initialState",
        "required": false,
        "type": {
          "name": "Partial<VisibilityTableState & ColumnOrderTableState & ColumnPinningTableState & FiltersTableState & ... 5 more ... & RowSelectionTableState> | undefined"
        }
      },
      "manualPagination": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否手动分页, false表示启用分页, 至于分页数据则由getPaginationRowModel提供, 也就是说不提供getPaginationRowModel属性也即不采取分页.",
        "name": "manualPagination",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onColumnFiltersChange": {
        "defaultValue": null,
        "description": "各类功能项的单独状态处理.\n这是推荐方式, 这样只会控制单独功能项的状态. 并且只需在state中设置你想管理的那些状态即可.\n@example const [sorting, setSorting] = React.useState([])\n// 方式1, 直接赋值给React的setState\nonSortingChange: setSorting;\n// 方式2, 需要对状态做额外处理\nonSortingChange: (updater) => {\n // 必须这样得到表的新状态值\n const newSortingValue = updater instanceof Function ? updater(sorting) : updater\n //do something with the new sorting value\n //...\n setSorting(updater) //normal state update\n}",
        "name": "onColumnFiltersChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ColumnFiltersState> | undefined"
        }
      },
      "onColumnOrderChange": {
        "defaultValue": null,
        "description": "",
        "name": "onColumnOrderChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ColumnOrderState> | undefined"
        }
      },
      "onColumnPinningChange": {
        "defaultValue": null,
        "description": "",
        "name": "onColumnPinningChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ColumnPinningState> | undefined"
        }
      },
      "onColumnSizingChange": {
        "defaultValue": null,
        "description": "",
        "name": "onColumnSizingChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ColumnSizingState> | undefined"
        }
      },
      "onColumnSizingInfoChange": {
        "defaultValue": null,
        "description": "",
        "name": "onColumnSizingInfoChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ColumnSizingInfoState> | undefined"
        }
      },
      "onColumnVisibilityChange": {
        "defaultValue": null,
        "description": "",
        "name": "onColumnVisibilityChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<VisibilityState> | undefined"
        }
      },
      "onExpandedChange": {
        "defaultValue": null,
        "description": "",
        "name": "onExpandedChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<ExpandedState> | undefined"
        }
      },
      "onGlobalFilterChange": {
        "defaultValue": null,
        "description": "",
        "name": "onGlobalFilterChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<any> | undefined"
        }
      },
      "onGroupingChange": {
        "defaultValue": null,
        "description": "",
        "name": "onGroupingChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<GroupingState> | undefined"
        }
      },
      "onPaginationChange": {
        "defaultValue": null,
        "description": "",
        "name": "onPaginationChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<PaginationState> | undefined"
        }
      },
      "onRowPinningChange": {
        "defaultValue": null,
        "description": "",
        "name": "onRowPinningChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<RowPinningState> | undefined"
        }
      },
      "onRowSelectionChange": {
        "defaultValue": null,
        "description": "",
        "name": "onRowSelectionChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<RowSelectionState> | undefined"
        }
      },
      "onSortingChange": {
        "defaultValue": null,
        "description": "",
        "name": "onSortingChange",
        "required": false,
        "type": {
          "name": "OnChangeFn<SortingState> | undefined"
        }
      },
      "onStateChange": {
        "defaultValue": null,
        "description": "所有功能状态的完全控制处理.\n注意: 这会完全接管表的所有功能状态, 这要求在state中设置所有功能项的状态值. 这样做既不方便也存在性能问题. 不推荐使用.",
        "name": "onStateChange",
        "required": false,
        "type": {
          "name": "((updater: Updater<TableState>) => void) | undefined"
        }
      },
      "pageCount": {
        "defaultValue": null,
        "description": "分页时每页数量",
        "name": "pageCount",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "paginateExpandedRows": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否对展开的行进行分页",
        "name": "paginateExpandedRows",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "selectAllForAllPages": {
        "defaultValue": {
          "value": "true"
        },
        "description": "启用多行选择功能时, 全选时的范围是所有行还是当前页内的行.",
        "name": "selectAllForAllPages",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showBorder": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示表格和单元格的边框",
        "name": "showBorder",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showHeader": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示表头行",
        "name": "showHeader",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "showToolbar": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示工具栏",
        "name": "showToolbar",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "\"sm\""
        },
        "description": "表行的高度",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "样式槽",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ container?: string | undefined; toolbar?: string | undefined; groupDropArea?: string | undefined; table?: string | undefined; } | undefined"
        }
      },
      "sortDescFirst": {
        "defaultValue": {
          "value": "false"
        },
        "description": "首次排序是否降序, false 表示首次按升序排序. true表示首次按降序排序",
        "name": "sortDescFirst",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "state": {
        "defaultValue": null,
        "description": "数据表的状态, 这个属性是受控属性. 必须通过onStateChange事件更新\n注意: 不要对某项状态在initialState和state同时指定, state会覆盖initialState中的相应的值",
        "name": "state",
        "required": false,
        "type": {
          "name": "Partial<VisibilityTableState & ColumnOrderTableState & ColumnPinningTableState & FiltersTableState & ... 5 more ... & RowSelectionTableState> | undefined"
        }
      }
    }
  },
  "ExportTable": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/ExportTable.tsx",
    "description": "",
    "displayName": "ExportTable",
    "props": {
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "FilterEditor": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/FilterEditor.tsx",
    "description": "",
    "displayName": "FilterEditor",
    "props": {
      "column": {
        "defaultValue": null,
        "description": "",
        "name": "column",
        "required": true,
        "type": {
          "name": "Column<any, unknown>"
        }
      },
      "debouncedWait": {
        "defaultValue": null,
        "description": "",
        "name": "debouncedWait",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "FooterCell": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/FooterCell.tsx",
    "description": "",
    "displayName": "FooterCell",
    "props": {
      "header": {
        "defaultValue": null,
        "description": "",
        "name": "header",
        "required": true,
        "type": {
          "name": "Header<any, any>"
        }
      },
      "scrollingTrigger": {
        "defaultValue": null,
        "description": "",
        "name": "scrollingTrigger",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "GroupDropArea": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/GroupDropArea.tsx",
    "description": "",
    "displayName": "GroupDropArea",
    "props": {
      "enableGrouping": {
        "defaultValue": null,
        "description": "",
        "name": "enableGrouping",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "HeaderCell": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/HeaderCell.tsx",
    "description": "",
    "displayName": "HeaderCell",
    "props": {
      "debouncedWait": {
        "defaultValue": null,
        "description": "",
        "name": "debouncedWait",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "enableColumnReorder": {
        "defaultValue": null,
        "description": "",
        "name": "enableColumnReorder",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "enableColumnResizing": {
        "defaultValue": null,
        "description": "",
        "name": "enableColumnResizing",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "header": {
        "defaultValue": null,
        "description": "",
        "name": "header",
        "required": true,
        "type": {
          "name": "Header<any, any>"
        }
      },
      "scrollingTrigger": {
        "defaultValue": null,
        "description": "",
        "name": "scrollingTrigger",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "showHeader": {
        "defaultValue": null,
        "description": "",
        "name": "showHeader",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "IndeterminateCheckbox": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/IndeterminateCheckbox.tsx",
    "description": "",
    "displayName": "IndeterminateCheckbox",
    "props": {
      "indeterminate": {
        "defaultValue": null,
        "description": "",
        "name": "indeterminate",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "TablePagination": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTable/TablePagination.tsx",
    "description": "",
    "displayName": "TablePagination",
    "props": {
      "table": {
        "defaultValue": null,
        "description": "",
        "name": "table",
        "required": true,
        "type": {
          "name": "Table<any>"
        }
      }
    }
  },
  "DataTableSelect": {
    "filePath": "D:/sources/rtdui/packages/datatable/src/DataTableSelect/DataTableSelect.tsx",
    "description": "ref属性会转发至内部的input元素",
    "displayName": "DataTableSelect",
    "props": {
      "autoExpandAll": {
        "defaultValue": {
          "value": "false"
        },
        "description": "当table可展开时是否自动展开所有",
        "name": "autoExpandAll",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "bordered": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否显示边框",
        "name": "bordered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            }
          ]
        }
      },
      "columns": {
        "defaultValue": null,
        "description": "列定义对象数组\n\n自动生成列id规则: 最优先使用id键,如果没有指定则以accessorKey作为列id, 如果accessorKey没有指定并且header是字符串时, 则使用header的字符串值作为列id, 都不符合时报错\n\n列id在许多地方会用到, 包括作为组名, 显示/隐藏列的列名等. 因此对于中文列名, 必须手动设定列id, 并且用中文作为id值.",
        "name": "columns",
        "required": true,
        "type": {
          "name": "ColumnDef<any, any>[]"
        }
      },
      "data": {
        "defaultValue": null,
        "description": "数据行对象数组\n\n注意: 如果需要树形展示, data必须是层次结构的.不支持id-parentId形式的平面数据.\n可以使用@rtdui/core包中的工具函数<code>flatToTree()</code>先将id-parentId形式的平面数据转化为层次结构的数据. 然后再赋值给data属性",
        "name": "data",
        "required": true,
        "type": {
          "name": "any[]"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "displayField": {
        "defaultValue": null,
        "description": "",
        "name": "displayField",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "enableFilters": {
        "defaultValue": {
          "value": "false"
        },
        "description": "是否启用过滤功能",
        "name": "enableFilters",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "enableGrouping": {
        "defaultValue": {
          "value": "true"
        },
        "description": "是否启用数据分组功能, 支持多列分组.\n注意: 不能和树型表格同时启用",
        "name": "enableGrouping",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "",
        "name": "error",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "getRowId": {
        "defaultValue": {
          "value": "(row) => row.id"
        },
        "description": "定义如何获得行id",
        "name": "getRowId",
        "required": false,
        "type": {
          "name": "((row: any) => any) | undefined"
        }
      },
      "getSubRows": {
        "defaultValue": null,
        "description": "获取每行孩子的方法,如果定义该函数则启用可展示/收缩的树形展示, 列定义中第一个定义了id属性的列为可展开列\n注意: 当启用数据分组时不能设置该属性, 否则会有冲突.",
        "name": "getSubRows",
        "required": false,
        "type": {
          "name": "((row: any) => any[]) | undefined"
        }
      },
      "ghost": {
        "defaultValue": null,
        "description": "",
        "name": "ghost",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "",
        "name": "helperText",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "initialState": {
        "defaultValue": null,
        "description": "数据表的初始状态, 这个属性是非受控的. 数据表组件挂载后更新该属性不会导致数据表状态改变.\n注意: 不要同时对某项状态同时在initialState和state指定. state会覆盖initialState中的相应的值",
        "name": "initialState",
        "required": false,
        "type": {
          "name": "Partial<VisibilityTableState & ColumnOrderTableState & ColumnPinningTableState & FiltersTableState & ... 5 more ... & RowSelectionTableState> | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "leftSection": {
        "defaultValue": null,
        "description": "",
        "name": "leftSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "leftSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "leftSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((ids: string | string[]) => void) | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "rightSection": {
        "defaultValue": null,
        "description": "",
        "name": "rightSection",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "rightSectionWidth": {
        "defaultValue": null,
        "description": "",
        "name": "rightSectionWidth",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            }
          ]
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "({ input?: string | undefined; left?: string | undefined; right?: string | undefined; label?: string | undefined; helperText?: string | undefined; } & { dropdown?: string | undefined; }) | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "RichTextEditor": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/RichTextEditor.tsx",
    "description": "",
    "displayName": "RichTextEditor",
    "props": {
      "editable": {
        "defaultValue": null,
        "description": "",
        "name": "editable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "imageResizable": {
        "defaultValue": null,
        "description": "",
        "name": "imageResizable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "",
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ toolbar?: string | undefined; content?: string | undefined; } | undefined"
        }
      },
      "uploadImageUrl": {
        "defaultValue": null,
        "description": "",
        "name": "uploadImageUrl",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "QRCode": {
    "filePath": "D:/sources/rtdui/packages/qr-code/src/QRCode/QRCode.tsx",
    "description": "",
    "displayName": "QRCode",
    "props": {
      "bgColor": {
        "defaultValue": {
          "value": "\"#fff\""
        },
        "description": "背景色",
        "name": "bgColor",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "fgColor": {
        "defaultValue": {
          "value": "\"#000\""
        },
        "description": "二维码颜色",
        "name": "fgColor",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "二维码中图片的地址（目前只支持图片地址）",
        "name": "icon",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "iconSize": {
        "defaultValue": {
          "value": "40"
        },
        "description": "二维码中图片的大小",
        "name": "iconSize",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "imageSettings": {
        "defaultValue": null,
        "description": "",
        "name": "imageSettings",
        "required": false,
        "type": {
          "name": "ImageSettings | undefined"
        }
      },
      "includeMargin": {
        "defaultValue": null,
        "description": "",
        "name": "includeMargin",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "level": {
        "defaultValue": {
          "value": "\"M\""
        },
        "description": "纠错级别",
        "name": "level",
        "required": false,
        "type": {
          "name": "\"L\" | \"M\" | \"Q\" | \"H\" | undefined",
          "raw": "\"L\" | \"M\" | \"Q\" | \"H\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"L\""
            },
            {
              "value": "\"M\""
            },
            {
              "value": "\"Q\""
            },
            {
              "value": "\"H\""
            }
          ]
        }
      },
      "onRefresh": {
        "defaultValue": {
          "value": "() => void"
        },
        "description": "expired状态时点击\"点击刷新\"的回调",
        "name": "onRefresh",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "160"
        },
        "description": "二维码的大小",
        "name": "size",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ qr?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "扫描后的文本",
        "name": "value",
        "required": true,
        "type": {
          "name": "string"
        }
      }
    }
  },
  "Highlight": {
    "filePath": "D:/sources/rtdui/packages/spotlight/src/Hightlight/Highlight.tsx",
    "description": "",
    "displayName": "Highlight",
    "props": {
      "children": {
        "defaultValue": null,
        "description": "String parts of which must be highlighted",
        "name": "children",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "raw": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"primary\""
            },
            {
              "value": "\"secondary\""
            },
            {
              "value": "\"accent\""
            },
            {
              "value": "\"info\""
            },
            {
              "value": "\"success\""
            },
            {
              "value": "\"warning\""
            },
            {
              "value": "\"error\""
            },
            {
              "value": "\"neutral\""
            }
          ]
        }
      },
      "highlight": {
        "defaultValue": null,
        "description": "Substring or an array of substrings to highlight in <code>children</code>",
        "name": "highlight",
        "required": true,
        "type": {
          "name": "string | string[]"
        }
      }
    }
  },
  "AlphaSlider": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/AlphaSlider/AlphaSlider.tsx",
    "description": "",
    "displayName": "@rtdui/core/AlphaSlider",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "focusable": {
        "defaultValue": null,
        "description": "",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onScrubEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubEnd",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onScrubStart": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubStart",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thumbColor": {
        "defaultValue": null,
        "description": "",
        "name": "thumbColor",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "ColorSlider": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/ColorSlider/ColorSlider.tsx",
    "description": "",
    "displayName": "@rtdui/core/ColorSlider",
    "props": {
      "focusable": {
        "defaultValue": null,
        "description": "",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "",
        "name": "maxValue",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onScrubEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubEnd",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onScrubStart": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubStart",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "overlays": {
        "defaultValue": null,
        "description": "",
        "name": "overlays",
        "required": true,
        "type": {
          "name": "CSSProperties[]"
        }
      },
      "round": {
        "defaultValue": null,
        "description": "",
        "name": "round",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thumbColor": {
        "defaultValue": null,
        "description": "",
        "name": "thumbColor",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "HueSlider": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/HueSlider/HueSlider.tsx",
    "description": "",
    "displayName": "@rtdui/core/HueSlider",
    "props": {
      "focusable": {
        "defaultValue": null,
        "description": "",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onScrubEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubEnd",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onScrubStart": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubStart",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thumbColor": {
        "defaultValue": null,
        "description": "",
        "name": "thumbColor",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "Saturation": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/Saturation/Saturation.tsx",
    "description": "",
    "displayName": "@rtdui/core/Saturation",
    "props": {
      "color": {
        "defaultValue": null,
        "description": "",
        "name": "color",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "focusable": {
        "defaultValue": null,
        "description": "",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "",
        "name": "onChange",
        "required": true,
        "type": {
          "name": "(color: Partial<HsvaColor>) => void"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onChangeEnd",
        "required": true,
        "type": {
          "name": "(color: Partial<HsvaColor>) => void"
        }
      },
      "onScrubEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubEnd",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onScrubStart": {
        "defaultValue": null,
        "description": "",
        "name": "onScrubStart",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "saturationLabel": {
        "defaultValue": null,
        "description": "",
        "name": "saturationLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "HsvaColor"
        }
      }
    }
  },
  "Swatches": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/Swatches/Swatches.tsx",
    "description": "",
    "displayName": "@rtdui/core/Swatches",
    "props": {
      "data": {
        "defaultValue": null,
        "description": "",
        "name": "data",
        "required": true,
        "type": {
          "name": "string[]"
        }
      },
      "focusable": {
        "defaultValue": null,
        "description": "",
        "name": "focusable",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((color: string) => void) | undefined"
        }
      },
      "setValue": {
        "defaultValue": null,
        "description": "",
        "name": "setValue",
        "required": true,
        "type": {
          "name": "(value: string) => void"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "swatchesPerRow": {
        "defaultValue": null,
        "description": "",
        "name": "swatchesPerRow",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "ColorPickerThumb": {
    "filePath": "D:/sources/rtdui/packages/core/src/ColorPicker/Thumb/Thumb.tsx",
    "description": "",
    "displayName": "@rtdui/core/ColorPickerThumb",
    "props": {
      "position": {
        "defaultValue": null,
        "description": "",
        "name": "position",
        "required": true,
        "type": {
          "name": "{ x: number; y: number; }"
        }
      },
      "variant": {
        "defaultValue": null,
        "description": "",
        "name": "variant",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      }
    }
  },
  "Col": {
    "filePath": "D:/sources/rtdui/packages/core/src/Grid/Col/Col.tsx",
    "description": "",
    "displayName": "Col",
    "props": {
      "offset": {
        "defaultValue": null,
        "description": "",
        "name": "offset",
        "required": false,
        "type": {
          "name": "ResponsiveProp<number> | undefined"
        }
      },
      "order": {
        "defaultValue": null,
        "description": "",
        "name": "order",
        "required": false,
        "type": {
          "name": "ResponsiveProp<number> | undefined"
        }
      },
      "span": {
        "defaultValue": null,
        "description": "",
        "name": "span",
        "required": false,
        "type": {
          "name": "ResponsiveProp<ColSpan> | undefined"
        }
      }
    }
  },
  "PopoverDropdown": {
    "filePath": "D:/sources/rtdui/packages/core/src/Popover/Dropdown/Dropdown.tsx",
    "description": "",
    "displayName": "PopoverDropdown",
    "props": {
      "showArrow": {
        "defaultValue": null,
        "description": "",
        "name": "showArrow",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ arrow?: string | undefined; } | undefined"
        }
      }
    }
  },
  "PopoverTrigger": {
    "filePath": "D:/sources/rtdui/packages/core/src/Popover/Trigger/Trigger.tsx",
    "description": "",
    "displayName": "PopoverTrigger",
    "props": {}
  },
  "Marks": {
    "filePath": "D:/sources/rtdui/packages/core/src/Slider/Marks/Marks.tsx",
    "description": "",
    "displayName": "Marks",
    "props": {
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "inverted": {
        "defaultValue": null,
        "description": "",
        "name": "inverted",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "marks": {
        "defaultValue": null,
        "description": "",
        "name": "marks",
        "required": true,
        "type": {
          "name": "{ value: number; label?: ReactNode; }[] | undefined"
        }
      },
      "max": {
        "defaultValue": null,
        "description": "",
        "name": "max",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "min": {
        "defaultValue": null,
        "description": "",
        "name": "min",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "offset": {
        "defaultValue": null,
        "description": "",
        "name": "offset",
        "required": true,
        "type": {
          "name": "number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ trackContainer?: string | undefined; track?: string | undefined; bar?: string | undefined; mark?: string | undefined; markLabel?: string | undefined; thumb?: string | undefined; label?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "RangeSlider": {
    "filePath": "D:/sources/rtdui/packages/core/src/Slider/RangeSlider/RangeSlider.tsx",
    "description": "",
    "displayName": "RangeSlider",
    "props": {
      "color": {
        "defaultValue": {
          "value": "'primary'"
        },
        "description": "Key of Preset or any valid CSS color, controls color of track and thumb",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | Color | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "RangeSliderValue | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Disables slider",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "hiddenInputProps": {
        "defaultValue": null,
        "description": "Props passed down to the hidden input",
        "name": "hiddenInputProps",
        "required": false,
        "type": {
          "name": "Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, \"ref\"> | undefined"
        }
      },
      "inverted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether track values representation should be inverted",
        "name": "inverted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "label": {
        "defaultValue": {
          "value": "(v) => v"
        },
        "description": "Function to generate label or any react node to render instead, set to null to disable label",
        "name": "label",
        "required": false,
        "type": {
          "name": "ReactNode | ((value: number) => ReactNode)"
        }
      },
      "labelAlwaysOn": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether the label should be visible when the slider is not being dragged or hovered",
        "name": "labelAlwaysOn",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "labelTransitionProps": {
        "defaultValue": {
          "value": "{transition: 'fade', duration: 150 }"
        },
        "description": "Props passed down to the Transition component,",
        "name": "labelTransitionProps",
        "required": false,
        "type": {
          "name": "Pick<TransitionProps, \"transition\" | \"duration\" | \"timingFunction\"> | undefined"
        }
      },
      "marks": {
        "defaultValue": null,
        "description": "Marks displayed on the track",
        "name": "marks",
        "required": false,
        "type": {
          "name": "{ value: number; label?: ReactNode; }[] | undefined"
        }
      },
      "max": {
        "defaultValue": {
          "value": "100"
        },
        "description": "Maximum possible value",
        "name": "max",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "maxRange": {
        "defaultValue": {
          "value": "Infinity"
        },
        "description": "Maximum range interval",
        "name": "maxRange",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "min": {
        "defaultValue": {
          "value": "0"
        },
        "description": "Minimal possible value",
        "name": "min",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "minRange": {
        "defaultValue": {
          "value": "10"
        },
        "description": "Minimal range interval",
        "name": "minRange",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Hidden input name, use with uncontrolled component",
        "name": "name",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: RangeSliderValue) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "Called when user stops dragging slider or changes value with arrows",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: RangeSliderValue) => void) | undefined"
        }
      },
      "precision": {
        "defaultValue": null,
        "description": "Number of significant digits after the decimal point",
        "name": "precision",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "radius": {
        "defaultValue": {
          "value": "'xl'"
        },
        "description": "Key of Preset or any valid CSS value to set border-radius",
        "name": "radius",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      },
      "scale": {
        "defaultValue": {
          "value": "(v) => v"
        },
        "description": "A transformation function to change the scale of the slider",
        "name": "scale",
        "required": false,
        "type": {
          "name": "((value: number) => number) | undefined"
        }
      },
      "showLabelOnHover": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether thumb label should be displayed when the slider is hovered,",
        "name": "showLabelOnHover",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "'md'"
        },
        "description": "Controls size of the track",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "样式槽,可自定义内部组件的样式",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ root?: string | undefined; trackContainer?: string | undefined; track?: string | undefined; bar?: string | undefined; mark?: string | undefined; markLabel?: string | undefined; thumb?: string | undefined; label?: string | undefined; } | undefined"
        }
      },
      "step": {
        "defaultValue": {
          "value": "1"
        },
        "description": "Number by which value will be incremented/decremented with thumb drag and arrows",
        "name": "step",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "thumbChildren": {
        "defaultValue": null,
        "description": "Content rendered inside thumb",
        "name": "thumbChildren",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "thumbFromLabel": {
        "defaultValue": null,
        "description": "First thumb aria-label",
        "name": "thumbFromLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thumbSize": {
        "defaultValue": {
          "value": "size*2"
        },
        "description": "Thumb width and height",
        "name": "thumbSize",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "thumbToLabel": {
        "defaultValue": null,
        "description": "Second thumb aria-label",
        "name": "thumbToLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled value",
        "name": "value",
        "required": false,
        "type": {
          "name": "RangeSliderValue | undefined"
        }
      }
    }
  },
  "Slider": {
    "filePath": "D:/sources/rtdui/packages/core/src/Slider/Slider/Slider.tsx",
    "description": "",
    "displayName": "Slider",
    "props": {
      "color": {
        "defaultValue": {
          "value": "'primary'"
        },
        "description": "Key of Preset or any valid CSS color, controls color of track and thumb",
        "name": "color",
        "required": false,
        "type": {
          "name": "\"primary\" | \"secondary\" | \"accent\" | \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | Color | undefined"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "Uncontrolled default value",
        "name": "defaultValue",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Disables slider",
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "hiddenInputProps": {
        "defaultValue": null,
        "description": "Props passed down to the hidden input",
        "name": "hiddenInputProps",
        "required": false,
        "type": {
          "name": "Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, \"ref\"> | undefined"
        }
      },
      "inverted": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether track values representation should be inverted",
        "name": "inverted",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "label": {
        "defaultValue": {
          "value": "(v) => v"
        },
        "description": "Function to generate label or any react node to render instead, set to null to disable label",
        "name": "label",
        "required": false,
        "type": {
          "name": "ReactNode | ((value: number) => ReactNode)"
        }
      },
      "labelAlwaysOn": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether the label should be visible when the slider is not being dragged or hovered",
        "name": "labelAlwaysOn",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "labelTransitionProps": {
        "defaultValue": {
          "value": "{transition: 'fade', duration: 150 }"
        },
        "description": "Props passed down to the Transition component,",
        "name": "labelTransitionProps",
        "required": false,
        "type": {
          "name": "Pick<TransitionProps, \"transition\" | \"duration\" | \"timingFunction\"> | undefined"
        }
      },
      "marks": {
        "defaultValue": null,
        "description": "Marks displayed on the track",
        "name": "marks",
        "required": false,
        "type": {
          "name": "{ value: number; label?: ReactNode; }[] | undefined"
        }
      },
      "max": {
        "defaultValue": {
          "value": "100"
        },
        "description": "Maximum possible value",
        "name": "max",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "min": {
        "defaultValue": {
          "value": "0"
        },
        "description": "Minimal possible value",
        "name": "min",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Hidden input name, use with uncontrolled component",
        "name": "name",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when value changes",
        "name": "onChange",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "Called when user stops dragging slider or changes value with arrows",
        "name": "onChangeEnd",
        "required": false,
        "type": {
          "name": "((value: number) => void) | undefined"
        }
      },
      "precision": {
        "defaultValue": null,
        "description": "Number of significant digits after the decimal point",
        "name": "precision",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "radius": {
        "defaultValue": {
          "value": "'xl'"
        },
        "description": "Key of Preset or any valid CSS value to set border-radius",
        "name": "radius",
        "required": false,
        "type": {
          "name": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "raw": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | undefined",
          "value": [
            {
              "value": "undefined"
            },
            {
              "value": "\"xs\""
            },
            {
              "value": "\"sm\""
            },
            {
              "value": "\"md\""
            },
            {
              "value": "\"lg\""
            },
            {
              "value": "\"xl\""
            },
            {
              "value": "\"2xl\""
            }
          ]
        }
      },
      "scale": {
        "defaultValue": {
          "value": "(v) => v"
        },
        "description": "A transformation function to change the scale of the slider",
        "name": "scale",
        "required": false,
        "type": {
          "name": "((value: number) => number) | undefined"
        }
      },
      "showLabelOnHover": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether thumb label should be displayed when the slider is hovered,",
        "name": "showLabelOnHover",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "size": {
        "defaultValue": {
          "value": "'md'"
        },
        "description": "Controls size of the track",
        "name": "size",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "样式槽, 可自定义内部组件的样式",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ root?: string | undefined; trackContainer?: string | undefined; track?: string | undefined; bar?: string | undefined; mark?: string | undefined; markLabel?: string | undefined; thumb?: string | undefined; label?: string | undefined; } | undefined"
        }
      },
      "step": {
        "defaultValue": {
          "value": "1"
        },
        "description": "Number by which value will be incremented/decremented with thumb drag and arrows",
        "name": "step",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "thumbChildren": {
        "defaultValue": null,
        "description": "Content rendered inside thumb",
        "name": "thumbChildren",
        "required": false,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "thumbLabel": {
        "defaultValue": null,
        "description": "Thumb aria-label",
        "name": "thumbLabel",
        "required": false,
        "type": {
          "name": "string | undefined"
        }
      },
      "thumbSize": {
        "defaultValue": {
          "value": "size*2"
        },
        "description": "Thumb width and height",
        "name": "thumbSize",
        "required": false,
        "type": {
          "name": "string | number | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Controlled value",
        "name": "value",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      }
    }
  },
  "Thumb": {
    "filePath": "D:/sources/rtdui/packages/core/src/Slider/Thumb/Thumb.tsx",
    "description": "",
    "displayName": "Thumb",
    "props": {
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "dragging": {
        "defaultValue": null,
        "description": "",
        "name": "dragging",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      "isHovered": {
        "defaultValue": null,
        "description": "",
        "name": "isHovered",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": true,
        "type": {
          "name": "React.ReactNode"
        }
      },
      "labelAlwaysOn": {
        "defaultValue": null,
        "description": "",
        "name": "labelAlwaysOn",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "labelTransitionProps": {
        "defaultValue": null,
        "description": "",
        "name": "labelTransitionProps",
        "required": false,
        "type": {
          "name": "Pick<TransitionProps, \"transition\" | \"duration\" | \"timingFunction\"> | undefined"
        }
      },
      "max": {
        "defaultValue": null,
        "description": "",
        "name": "max",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "min": {
        "defaultValue": null,
        "description": "",
        "name": "min",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "",
        "name": "onBlur",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "",
        "name": "onFocus",
        "required": false,
        "type": {
          "name": "(() => void) | undefined"
        }
      },
      "onKeyDownCapture": {
        "defaultValue": null,
        "description": "",
        "name": "onKeyDownCapture",
        "required": false,
        "type": {
          "name": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined"
        }
      },
      "onMouseDown": {
        "defaultValue": null,
        "description": "",
        "name": "onMouseDown",
        "required": false,
        "type": {
          "name": "((event: TouchEvent<HTMLDivElement> | MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
        }
      },
      "position": {
        "defaultValue": null,
        "description": "",
        "name": "position",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "showLabelOnHover": {
        "defaultValue": null,
        "description": "",
        "name": "showLabelOnHover",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ trackContainer?: string | undefined; track?: string | undefined; bar?: string | undefined; mark?: string | undefined; markLabel?: string | undefined; thumb?: string | undefined; label?: string | undefined; } | undefined"
        }
      },
      "thumbLabel": {
        "defaultValue": null,
        "description": "",
        "name": "thumbLabel",
        "required": true,
        "type": {
          "name": "string | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "Track": {
    "filePath": "D:/sources/rtdui/packages/core/src/Slider/Track/Track.tsx",
    "description": "",
    "displayName": "Track",
    "props": {
      "containerProps": {
        "defaultValue": null,
        "description": "",
        "name": "containerProps",
        "required": false,
        "type": {
          "name": "(Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & { ref?: ((instance: HTMLDivElement | null) => void) | ... 2 more ... | undefined; }) | undefined"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "",
        "name": "disabled",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "filled": {
        "defaultValue": null,
        "description": "",
        "name": "filled",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "inverted": {
        "defaultValue": null,
        "description": "",
        "name": "inverted",
        "required": true,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "marks": {
        "defaultValue": null,
        "description": "",
        "name": "marks",
        "required": true,
        "type": {
          "name": "{ value: number; label?: ReactNode; }[] | undefined"
        }
      },
      "marksOffset": {
        "defaultValue": null,
        "description": "",
        "name": "marksOffset",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "max": {
        "defaultValue": null,
        "description": "",
        "name": "max",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "min": {
        "defaultValue": null,
        "description": "",
        "name": "min",
        "required": true,
        "type": {
          "name": "number"
        }
      },
      "offset": {
        "defaultValue": null,
        "description": "",
        "name": "offset",
        "required": false,
        "type": {
          "name": "number | undefined"
        }
      },
      "slots": {
        "defaultValue": null,
        "description": "",
        "name": "slots",
        "required": false,
        "type": {
          "name": "{ trackContainer?: string | undefined; track?: string | undefined; bar?: string | undefined; mark?: string | undefined; markLabel?: string | undefined; thumb?: string | undefined; label?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "",
        "name": "value",
        "required": true,
        "type": {
          "name": "number"
        }
      }
    }
  },
  "ControlBase": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/ControlBase.tsx",
    "description": "",
    "displayName": "ControlBase",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "TiptapControlsGroup": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/ControlsGroup.tsx",
    "description": "",
    "displayName": "TiptapControlsGroup",
    "props": {}
  },
  "createTiptapControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/createTiptapControl.tsx",
    "description": "",
    "displayName": "createTiptapControl",
    "props": {
      "icon": {
        "defaultValue": null,
        "description": "",
        "name": "icon",
        "required": true,
        "type": {
          "name": "FC<{ size: string | number; }>"
        }
      },
      "isActive": {
        "defaultValue": null,
        "description": "",
        "name": "isActive",
        "required": false,
        "type": {
          "name": "{ name: string; attributes?: string | Record<string, any> | undefined; } | undefined"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "",
        "name": "label",
        "required": true,
        "type": {
          "name": "keyof ControlLabels",
          "raw": "keyof ControlLabels",
          "value": [
            {
              "value": "\"boldControlLabel\""
            },
            {
              "value": "\"hrControlLabel\""
            },
            {
              "value": "\"italicControlLabel\""
            },
            {
              "value": "\"underlineControlLabel\""
            },
            {
              "value": "\"strikeControlLabel\""
            },
            {
              "value": "\"clearFormattingControlLabel\""
            },
            {
              "value": "\"linkControlLabel\""
            },
            {
              "value": "\"unlinkControlLabel\""
            },
            {
              "value": "\"bulletListControlLabel\""
            },
            {
              "value": "\"orderedListControlLabel\""
            },
            {
              "value": "\"h1ControlLabel\""
            },
            {
              "value": "\"h2ControlLabel\""
            },
            {
              "value": "\"h3ControlLabel\""
            },
            {
              "value": "\"h4ControlLabel\""
            },
            {
              "value": "\"h5ControlLabel\""
            },
            {
              "value": "\"h6ControlLabel\""
            },
            {
              "value": "\"blockquoteControlLabel\""
            },
            {
              "value": "\"alignLeftControlLabel\""
            },
            {
              "value": "\"alignCenterControlLabel\""
            },
            {
              "value": "\"alignRightControlLabel\""
            },
            {
              "value": "\"alignJustifyControlLabel\""
            },
            {
              "value": "\"codeControlLabel\""
            },
            {
              "value": "\"codeBlockControlLabel\""
            },
            {
              "value": "\"subscriptControlLabel\""
            },
            {
              "value": "\"superscriptControlLabel\""
            },
            {
              "value": "\"colorPickerControlLabel\""
            },
            {
              "value": "\"unsetColorControlLabel\""
            },
            {
              "value": "\"highlightControlLabel\""
            },
            {
              "value": "\"colorControlLabel\""
            },
            {
              "value": "\"linkEditorInputLabel\""
            },
            {
              "value": "\"linkEditorInputPlaceholder\""
            },
            {
              "value": "\"linkEditorExternalLink\""
            },
            {
              "value": "\"linkEditorInternalLink\""
            },
            {
              "value": "\"linkEditorSave\""
            },
            {
              "value": "\"colorPickerCancel\""
            },
            {
              "value": "\"colorPickerClear\""
            },
            {
              "value": "\"colorPickerColorPicker\""
            },
            {
              "value": "\"colorPickerPalette\""
            },
            {
              "value": "\"colorPickerSave\""
            },
            {
              "value": "\"colorPickerColorLabel\""
            },
            {
              "value": "\"ImageControlLabel\""
            },
            {
              "value": "\"TableControlLabel\""
            },
            {
              "value": "\"HelperControlLabel\""
            }
          ]
        }
      },
      "operation": {
        "defaultValue": null,
        "description": "",
        "name": "operation",
        "required": true,
        "type": {
          "name": "{ name: string; attributes?: string | Record<string, any> | undefined; }"
        }
      }
    }
  },
  "HelperControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/HelperControl.tsx",
    "description": "",
    "displayName": "HelperControl",
    "props": {}
  },
  "BoldControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "BoldControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ItalicControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "ItalicControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "UnderlineControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "UnderlineControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "StrikeThroughControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "StrikeThroughControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ClearFormattingControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "ClearFormattingControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "UnlinkControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "UnlinkControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "BulletListControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "BulletListControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "OrderedListControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "OrderedListControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H1Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H1Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H2Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H2Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H3Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H3Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H4Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H4Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H5Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H5Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "H6Control": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "H6Control",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "BlockquoteControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "BlockquoteControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "AlignLeftControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "AlignLeftControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "AlignRightControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "AlignRightControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "AlignCenterControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "AlignCenterControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "AlignJustifyControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "AlignJustifyControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "SubscriptControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "SubscriptControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "SuperscriptControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "SuperscriptControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "CodeControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "CodeControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "CodeBlockControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "CodeBlockControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "HighlightControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "HighlightControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "HrControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "HrControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "UnsetColorControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "UnsetColorControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ImageControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "ImageControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "TableControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/tiptapControls.tsx",
    "description": "",
    "displayName": "TableControl",
    "props": {
      "active": {
        "defaultValue": null,
        "description": "Determines whether the control should have active state, false by default",
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "Icon component, should support size prop",
        "name": "icon",
        "required": false,
        "type": {
          "name": "FC<{ size: string | number; }> | undefined"
        }
      },
      "interactive": {
        "defaultValue": null,
        "description": "Determines whether the control can be interacted with, set false to make the control to act as a label",
        "name": "interactive",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ToolbarControl": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_controls/ToolbarControl.tsx",
    "description": "",
    "displayName": "ToolbarControl",
    "props": {
      "sticky": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether position: sticky styles should be added to the toolbar",
        "name": "sticky",
        "required": false,
        "type": {
          "name": "boolean | undefined"
        }
      }
    }
  },
  "ImageResizableComponent": {
    "filePath": "D:/sources/rtdui/packages/editor/src/RichTextEditor/tiptap_extensions/extension-image-upload/ImageResizableComponent.tsx",
    "description": "",
    "displayName": "ImageResizableComponent",
    "props": {}
  }
}
