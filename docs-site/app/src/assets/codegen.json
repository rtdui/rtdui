[
	{
		"name": "AccordionArrowIndicatorDemo",
		"code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n\treturn <Accordion items={items} expandIcon=\"arrow\" />;\n}\n\nDemo.displayName = \"AccordionArrowIndicatorDemo\";\n"
	},
	{
		"name": "AccordionInitExpandDemo",
		"code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n\treturn <Accordion items={items} initExpandIndex={4} />;\n}\nDemo.displayName = \"AccordionInitExpandDemo\";\n"
	},
	{
		"name": "AccordionNoIndicatorDemo",
		"code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n\treturn <Accordion items={items} />;\n}\nDemo.displayName = \"AccordionNoIndicatorDemo\";\n"
	},
	{
		"name": "AccordionPlusIndicatorDemo",
		"code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n\t{ title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n\treturn <Accordion items={items} expandIcon=\"plus\" />;\n}\nDemo.displayName = \"AccordionPlusIndicatorDemo\";\n"
	},
	{
		"name": "AffixBasicDemo",
		"code": "import { useWindowScroll } from \"@rtdui/hooks\";\nimport { IconArrowUp } from \"@tabler/icons-react\";\nimport { Affix, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [scroll, scrollTo] = useWindowScroll();\n\treturn (\n\t\t<div style={{ height: 1000 }}>\n\t\t\tAffix is located at the bottom of the screen, scroll to see it\n\t\t\t<Affix>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tstartIcon={<IconArrowUp />}\n\t\t\t\t\tonClick={() => scrollTo({ y: 0 })}\n\t\t\t\t>\n\t\t\t\t\tScroll to top\n\t\t\t\t</Button>\n\t\t\t</Affix>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"AffixBasicDemo\";\n"
	},
	{
		"name": "AspectRatioEmbedVideoDemo",
		"code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<AspectRatio ratio=\"16/9\">\n\t\t\t<video controls>\n\t\t\t\t<source\n\t\t\t\t\tsrc=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\"\n\t\t\t\t\ttype=\"video/webm\"\n\t\t\t\t/>\n\t\t\t\t<source\n\t\t\t\t\tsrc=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\"\n\t\t\t\t\ttype=\"video/mp4\"\n\t\t\t\t/>\n\t\t\t</video>\n\t\t</AspectRatio>\n\t);\n}\nDemo.displayName = \"AspectRatioEmbedVideoDemo\";\n"
	},
	{
		"name": "AspectRatioImage2Demo",
		"code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<AspectRatio ratio=\"4/3\" className=\"w-56\">\n\t\t\t<img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n\t\t</AspectRatio>\n\t);\n}\nDemo.displayName = \"AspectRatioImage2Demo\";\n"
	},
	{
		"name": "AspectRatioImage3Demo",
		"code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<AspectRatio ratio=\"1\" className=\"w-56\">\n\t\t\t<img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n\t\t</AspectRatio>\n\t);\n}\nDemo.displayName = \"AspectRatioImage3Demo\";\n"
	},
	{
		"name": "AspectRatioImageDemo",
		"code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<AspectRatio ratio=\"16/9\" className=\"w-56\">\n\t\t\t<img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n\t\t</AspectRatio>\n\t);\n}\nDemo.displayName = \"AspectRatioImageDemo\";\n"
	},
	{
		"name": "AutoCompleteBasicDemo",
		"code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dates\",\n\t\"Endive\",\n\t\"Fennel\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Lemons\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Oranges\",\n\t\"Pears\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Watermelon\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn <AutoComplete data={fruits} />;\n}\nDemo.displayName = \"AutoCompleteBasicDemo\";\n"
	},
	{
		"name": "AutoCompleteControlledDemo",
		"code": "import React from \"react\";\nimport { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dates\",\n\t\"Endive\",\n\t\"Fennel\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Lemons\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Oranges\",\n\t\"Pears\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Watermelon\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"\");\n\treturn <AutoComplete data={fruits} value={value} onChange={setValue} />;\n}\nDemo.displayName = \"AutoCompleteControlledDemo\";\n"
	},
	{
		"name": "AutoCompleteDisabledDemo",
		"code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dates\",\n\t\"Endive\",\n\t\"Fennel\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Lemons\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Oranges\",\n\t\"Pears\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Watermelon\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn <AutoComplete data={fruits} disabled />;\n}\nDemo.displayName = \"AutoCompleteDisabledDemo\";\n"
	},
	{
		"name": "AutoCompleteInFormDemo",
		"code": "import { AutoComplete, TextInput, Button } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dates\",\n\t\"Endive\",\n\t\"Fennel\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Lemons\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Oranges\",\n\t\"Pears\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Watermelon\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\tconst [submitData, setSubmitData] = useState<FormData | null>(null);\n\tconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData(e.target as HTMLFormElement);\n\t\tsetSubmitData(formData);\n\t};\n\tlet output = \"\";\n\n\tif (submitData) {\n\t\tfor (const [key, value] of submitData) {\n\t\t\toutput += `${key}: ${value}\\n`;\n\t\t}\n\t}\n\n\treturn (\n\t\t<form className=\"flex flex-col gap-4\" onSubmit={handleSubmit}>\n\t\t\t<TextInput name=\"input1\" placeholder=\"this is text input\" />\n\t\t\t<AutoComplete\n\t\t\t\tname=\"input2\"\n\t\t\t\tdata={fruits}\n\t\t\t\tplaceholder=\"this is autocomplete\"\n\t\t\t/>\n\t\t\t<Button type=\"submit\" color=\"primary\" className=\"self-center\">\n\t\t\t\tsubmit\n\t\t\t</Button>\n\t\t\t<output className=\"bg-base-100 mt-4 p-4\">\n\t\t\t\t提交的数据:\n\t\t\t\t<pre>{output}</pre>\n\t\t\t</output>\n\t\t</form>\n\t);\n}\nDemo.displayName = \"AutoCompleteInFormDemo\";\n"
	},
	{
		"name": "AutoCompleteLongListDemo",
		"code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa Sprouts xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<AutoComplete\n\t\t\tname=\"input2\"\n\t\t\tdata={fruits}\n\t\t\tplaceholder=\"this is autocomplete\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"AutoCompleteLongListDemo\";\n"
	},
	{
		"name": "AutoCompleteReadonlyDemo",
		"code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dates\",\n\t\"Endive\",\n\t\"Fennel\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Lemons\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Oranges\",\n\t\"Pears\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Watermelon\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn <AutoComplete data={fruits} readOnly />;\n}\nDemo.displayName = \"AutoCompleteReadonlyDemo\";\n"
	},
	{
		"name": "AvatarBasicDemo",
		"code": "import { useState } from \"react\";\nimport { Avatar, Divider, FloatingSelect, Slider, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\n\nconst sizes = [\"xs\", \"sm\", \"md\", \"lg\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tsize: \"md\",\n\t\tvariant: \"circle\",\n\t\tshowOnlineIndicator: false,\n\t\tonline: false,\n\t});\n\n\tconst code = `\n  <Avatar${state.size && state.size !== \"md\" ? ` size=\"${state.size}\"` : \"\"}${state.variant && state.variant !== \"circle\" ? ` variant=\"${state.variant}\"` : \"\"}${state.showOnlineIndicator ? (state.online ? \" online\" : \" online={false}\") : \"\"} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n`;\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tonline={state.showOnlineIndicator ? state.online : undefined}\n\t\t\t\t\t\tsrc=\"/photo-1534528741775-53994a69daeb.jpg\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 w-56 p-4\">\n\t\t\t\t\tVariant:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tdata={[\"circle\", \"square\"]}\n\t\t\t\t\t\tvalue={state.variant}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, variant: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\tSize:\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\t\tlabel={(v) => sizes[v]}\n\t\t\t\t\t\tvalue={sizes.indexOf(state.size)}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: sizes[val] }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"Show online indicator\"\n\t\t\t\t\t\tchecked={state.showOnlineIndicator}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, showOnlineIndicator: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\tOnline:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tdata={[\"true\", \"false\"]}\n\t\t\t\t\t\tvalue={state.online ? \"true\" : \"false\"}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\tonline: val === \"true\",\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight language=\"tsx\" code={code} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"AvatarSizeDemo\";\n"
	},
	{
		"name": "AvatarGroupDemo",
		"code": "import { Avatar, AvatarGroup } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<AvatarGroup size=\"lg\">\n\t\t\t\t{Array.from({ length: 20 }).map((d, index) => (\n\t\t\t\t\t<Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t\t\t))}\n\t\t\t</AvatarGroup>\n\t\t\t<AvatarGroup size=\"md\">\n\t\t\t\t{Array.from({ length: 20 }).map((d, index) => (\n\t\t\t\t\t<Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t\t\t))}\n\t\t\t</AvatarGroup>\n\t\t\t<AvatarGroup size=\"sm\">\n\t\t\t\t{Array.from({ length: 20 }).map((d, index) => (\n\t\t\t\t\t<Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t\t\t))}\n\t\t\t</AvatarGroup>\n\t\t\t<AvatarGroup size=\"xs\">\n\t\t\t\t{Array.from({ length: 20 }).map((d, index) => (\n\t\t\t\t\t<Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t\t\t))}\n\t\t\t</AvatarGroup>\n\t\t</>\n\t);\n}\nDemo.displayName = \"AvatarGroupDemo\";\n"
	},
	{
		"name": "AvatarMaskDemo",
		"code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center justify-center\">\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"squircle\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"heart\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"star\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"triangle\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"diamond\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"pentagon\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"hexagon\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"hexagon2\" />\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" mask=\"decagon\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"AvatarMaskDemo\";\n"
	},
	{
		"name": "AvatarPlaceholderDemo",
		"code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex gap-4 items-center justify-center\">\n\t\t\t\t<Avatar size=\"lg\" placeholder=\"A\" />\n\t\t\t\t<Avatar size=\"md\" placeholder=\"A\" />\n\t\t\t\t<Avatar size=\"sm\" placeholder=\"A\" />\n\t\t\t\t<Avatar size=\"xs\" placeholder=\"A\" />\n\t\t\t</div>\n\n\t\t\t<div className=\"mt-8 flex flex-col gap-4\">\n\t\t\t\t占位字符也支持online指示器:\n\t\t\t\t<div className=\"flex gap-4 items-center justify-center\">\n\t\t\t\t\t<Avatar online placeholder=\"A\" />\n\t\t\t\t\t<Avatar online={false} placeholder=\"A\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"AvatarPlaceholderDemo\";\n"
	},
	{
		"name": "AvatarVariantDemo",
		"code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center justify-center\">\n\t\t\t<Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t\t<Avatar variant=\"square\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"AvatarVariantDemo\";\n"
	},
	{
		"name": "BadgeColorDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Badge>New</Badge>\n\t\t\t<Badge color=\"primary\">New</Badge>\n\t\t\t<Badge color=\"secondary\">New</Badge>\n\t\t\t<Badge color=\"accent\">New</Badge>\n\t\t\t<Badge color=\"info\">New</Badge>\n\t\t\t<Badge color=\"warning\">New</Badge>\n\t\t\t<Badge color=\"success\">New</Badge>\n\t\t\t<Badge color=\"error\">New</Badge>\n\t\t\t<Badge color=\"neutral\">New</Badge>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeColorDemo\";\n"
	},
	{
		"name": "BadgeEmptyDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Badge size=\"lg\" color=\"info\" />\n\t\t\t<Badge size=\"md\" color=\"success\" />\n\t\t\t<Badge size=\"sm\" color=\"warning\" />\n\t\t\t<Badge size=\"xs\" color=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeEmptyDemo\";\n"
	},
	{
		"name": "BadgeIconsDemo",
		"code": "import { IconBell, IconCamera, IconEye } from \"@tabler/icons-react\";\nimport { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Badge icon={<IconEye />} color=\"info\">\n\t\t\t\tNew\n\t\t\t</Badge>\n\t\t\t<Badge icon={<IconBell />} color=\"success\">\n\t\t\t\tNew\n\t\t\t</Badge>\n\t\t\t<Badge icon={<IconCamera />} color=\"warning\">\n\t\t\t\tNew\n\t\t\t</Badge>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeIconsDemo\";\n"
	},
	{
		"name": "BadgeInButtonDemo",
		"code": "import { Badge, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Button>\n\t\t\t\tInbox\n\t\t\t\t<Badge>+99</Badge>\n\t\t\t</Button>\n\t\t\t<Button>\n\t\t\t\tInbox\n\t\t\t\t<Badge color=\"secondary\">+99</Badge>\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeInButtonDemo\";\n"
	},
	{
		"name": "BadgeInTextDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<h2>\n\t\t\t\tHeading{\" \"}\n\t\t\t\t<Badge size=\"lg\" color=\"info\">\n\t\t\t\t\tNew\n\t\t\t\t</Badge>\n\t\t\t</h2>\n\t\t\t<h3>\n\t\t\t\tHeading <Badge color=\"info\">New</Badge>\n\t\t\t</h3>\n\t\t\t<h4>\n\t\t\t\tHeading{\" \"}\n\t\t\t\t<Badge size=\"sm\" color=\"info\">\n\t\t\t\t\tNew\n\t\t\t\t</Badge>\n\t\t\t</h4>\n\t\t\t<h5>\n\t\t\t\tHeading{\" \"}\n\t\t\t\t<Badge size=\"xs\" color=\"info\">\n\t\t\t\t\tNew\n\t\t\t\t</Badge>\n\t\t\t</h5>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeInTextDemo\";\n"
	},
	{
		"name": "BadgePolymorphicDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Badge as=\"span\">+99</Badge>\n\t\t\t<Badge as=\"div\">+99</Badge>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgePolymorphicDemo\";\n"
	},
	{
		"name": "BadgeSizeDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Badge size=\"lg\">New</Badge>\n\t\t\t<Badge size=\"md\">New</Badge>\n\t\t\t<Badge size=\"sm\">New</Badge>\n\t\t\t<Badge size=\"xs\">New</Badge>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeSizeDemo\";\n"
	},
	{
		"name": "BadgeVariantDemo",
		"code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Badge>default</Badge>\n\t\t\t<Badge variant=\"outline\">outline</Badge>\n\t\t\t<Badge variant=\"ghost\">ghost</Badge>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"BadgeVariantDemo\";\n"
	},
	{
		"name": "ButtonBasicDemo",
		"code": "import { useState } from \"react\";\nimport { Button, Divider, FloatingSelect, Slider, Switch } from \"@rtdui/core\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nconst sizes = [\"xs\", \"sm\", \"md\", \"lg\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tcolor: \"default\",\n\t\tsize: \"md\",\n\t\tghost: false,\n\t\toutline: false,\n\t\tsharp: \"\",\n\t\tlink: false,\n\t\tfullWidth: false,\n\t\tnoAnimation: false,\n\t\tloading: false,\n\t\tloadingPositon: \"left\",\n\t\tdisabled: false,\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<Button\n\t\t\t\t\tcolor={state.color as any}\n\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\tfullWidth={state.fullWidth}\n\t\t\t\t\tghost={state.ghost}\n\t\t\t\t\toutline={state.outline}\n\t\t\t\t\tlink={state.link}\n\t\t\t\t\tnoAnimation={state.noAnimation}\n\t\t\t\t\tloading={state.loading}\n\t\t\t\t\tloadingPosition={state.loadingPositon as any}\n\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t>\n\t\t\t\t\tButton\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 w-56 p-4\">\n\t\t\t\tColor:\n\t\t\t\t<ColorControl\n\t\t\t\t\textraColors={[\"neutral\", \"default\"]}\n\t\t\t\t\twithPicker={false}\n\t\t\t\t\tvalue={state.color}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t/>\n\t\t\t\tSize:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={3}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tlabel={(v) => sizes[v]}\n\t\t\t\t\tvalue={sizes.indexOf(state.size)}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: sizes[val] }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Full width\"\n\t\t\t\t\tchecked={state.fullWidth}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, fullWidth: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Outline style\"\n\t\t\t\t\tchecked={state.outline}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, outline: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Ghost style\"\n\t\t\t\t\tchecked={state.ghost}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, ghost: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Link style\"\n\t\t\t\t\tchecked={state.link}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, link: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"With loading\"\n\t\t\t\t\tchecked={state.loading}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, loading: val }))}\n\t\t\t\t/>\n\t\t\t\tLoading positon:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdisabled={!state.loading}\n\t\t\t\t\tdata={[\"left\", \"right\"]}\n\t\t\t\t\tvalue={state.loadingPositon}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, loadingPositon: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonBasicDemo\";\n"
	},
	{
		"name": "ButtonGlassDemo",
		"code": "import { Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"flex justify-center items-center w-56 h-56\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: \"url(/photo-1609621838510-5ad474b7d25d.jpg)\",\n\t\t\t}}\n\t\t>\n\t\t\t<Button glass>Button</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonGlassDemo\";\n"
	},
	{
		"name": "ButtonIconDemo",
		"code": "import { Button } from \"@rtdui/core\";\nimport { IconBell, IconEye } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex justify-center items-center gap-6\">\n\t\t\t<Button startIcon={<IconEye />}>Button</Button>\n\t\t\t<Button endIcon={<IconBell />}>Button</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonIconDemo\";\n"
	},
	{
		"name": "ButtonNoAnimationDemo",
		"code": "import { Button, Divider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button noAnimation>button</Button>\n\t\t\t\t<Button color=\"primary\" noAnimation>\n\t\t\t\t\tbutton\n\t\t\t\t</Button>\n\t\t\t\t<Button outline color=\"primary\" noAnimation>\n\t\t\t\t\tbutton\n\t\t\t\t</Button>\n\t\t\t\t<Button ghost color=\"primary\" noAnimation>\n\t\t\t\t\tbutton\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button sharp=\"circle\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" sharp=\"circle\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" outline sharp=\"circle\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" ghost sharp=\"circle\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button sharp=\"square\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" sharp=\"square\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" outline sharp=\"square\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" ghost sharp=\"square\" noAnimation>\n\t\t\t\t\tA\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonNoAnimationDemo\";\n"
	},
	{
		"name": "ButtonSharpDemo",
		"code": "import { Button } from \"@rtdui/core\";\nimport { IconBell } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"flex flex-wrap items-center gap-4\">\n\t\t\t\t<Button color=\"primary\" sharp=\"square\">\n\t\t\t\t\tX\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" outline sharp=\"square\">\n\t\t\t\t\tX\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" sharp=\"circle\">\n\t\t\t\t\tX\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" outline sharp=\"circle\">\n\t\t\t\t\tX\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" sharp=\"square\">\n\t\t\t\t\t<IconBell />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" outline sharp=\"square\">\n\t\t\t\t\t<IconBell />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"info\" sharp=\"circle\">\n\t\t\t\t\t<IconBell />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"info\" outline sharp=\"circle\">\n\t\t\t\t\t<IconBell />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button color=\"secondary\" sharp=\"square\" size=\"lg\">\n\t\t\t\t\t<IconBell size={32} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" sharp=\"square\" size=\"md\">\n\t\t\t\t\t<IconBell size={24} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" sharp=\"square\" size=\"sm\">\n\t\t\t\t\t<IconBell size={20} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" sharp=\"square\" size=\"xs\">\n\t\t\t\t\t<IconBell size={16} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button color=\"accent\" sharp=\"circle\" size=\"lg\">\n\t\t\t\t\t<IconBell size={32} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" sharp=\"circle\" size=\"md\">\n\t\t\t\t\t<IconBell size={24} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" sharp=\"circle\" size=\"sm\">\n\t\t\t\t\t<IconBell size={20} />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"accent\" sharp=\"circle\" size=\"xs\">\n\t\t\t\t\t<IconBell size={16} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button sharp=\"square\" ghost size=\"lg\">\n\t\t\t\t\t<IconBell size={32} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"square\" ghost size=\"md\">\n\t\t\t\t\t<IconBell size={24} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"square\" ghost size=\"sm\">\n\t\t\t\t\t<IconBell size={20} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"square\" ghost size=\"xs\">\n\t\t\t\t\t<IconBell size={16} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t<Button sharp=\"circle\" ghost size=\"lg\">\n\t\t\t\t\t<IconBell size={32} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"circle\" ghost size=\"md\">\n\t\t\t\t\t<IconBell size={24} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"circle\" ghost size=\"sm\">\n\t\t\t\t\t<IconBell size={20} />\n\t\t\t\t</Button>\n\t\t\t\t<Button sharp=\"circle\" ghost size=\"xs\">\n\t\t\t\t\t<IconBell size={16} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonSharpDemo\";\n"
	},
	{
		"name": "CardBasicDemo",
		"code": "import { useState } from \"react\";\nimport { Button, Card, Divider, FloatingSelect, Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tshowImage: true,\n\t\timagePositon: \"top\",\n\t\tshadow: \"none\",\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tshadow={(state.shadow === \"none\" ? undefined : state.shadow) as any}\n\t\t\t\t\t\timageSrc={state.showImage ? \"/shoe.jpg\" : undefined}\n\t\t\t\t\t\timagePositon={state.imagePositon as any}\n\t\t\t\t\t\ttitle=\"Shoes!\"\n\t\t\t\t\t\tcontent=\"If a dog chews shoes whose shoes does he choose?\"\n\t\t\t\t\t\taction={<Button color=\"primary\">Buy Now</Button>}\n\t\t\t\t\t\tclassName=\"bg-base-100\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\tstate.imagePositon !== \"left\" && state.imagePositon !== \"right\"\n\t\t\t\t\t\t\t\t\t? 300\n\t\t\t\t\t\t\t\t\t: 600,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tslots={{\n\t\t\t\t\t\t\tfigure:\n\t\t\t\t\t\t\t\tstate.imagePositon !== \"left\" && state.imagePositon !== \"right\"\n\t\t\t\t\t\t\t\t\t? \"w-full h-48\"\n\t\t\t\t\t\t\t\t\t: \"flex-shrink-0 w-2/5\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 w-96 p-4\">\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Show image\"\n\t\t\t\t\tchecked={state.showImage}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, showImage: val }))}\n\t\t\t\t/>\n\t\t\t\tImage positon:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdisabled={!state.showImage}\n\t\t\t\t\tdata={[\"top\", \"right\", \"bottom\", \"left\", \"overlay\"]}\n\t\t\t\t\tvalue={state.imagePositon}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, imagePositon: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tCard shadow:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"none\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]}\n\t\t\t\t\tvalue={state.shadow}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, shadow: val }))}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CardBasicDemo\";\n"
	},
	{
		"name": "CardCustomStyleDemo",
		"code": "import { Button, Card } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<Card\n\t\t\t\tclassName=\"w-96 bg-base-200\"\n\t\t\t\timageSrc=\"/shoe.jpg\"\n\t\t\t\ttitle=\"Shoes!\"\n\t\t\t\tcontent=\"If a dog chews shoes whose shoes does he choose?\"\n\t\t\t\taction={<Button color=\"primary\">Buy Now</Button>}\n\t\t\t\tslots={{\n\t\t\t\t\tfigure: \"p-8\",\n\t\t\t\t\tbody: \"items-center\",\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Card\n\t\t\t\tclassName=\"w-96 bg-success\"\n\t\t\t\ttitle=\"Shoes!\"\n\t\t\t\tcontent=\"If a dog chews shoes whose shoes does he choose?\"\n\t\t\t\taction={<Button color=\"primary\">Buy Now</Button>}\n\t\t\t\tslots={{\n\t\t\t\t\tbody: \"items-center text-white\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CardCustomStyleDemo\";\n"
	},
	{
		"name": "CardGlassDemo",
		"code": "import { Button, Card } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"flex justify-center p-8\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: \"url(/bg.jpg)\",\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t}}\n\t\t>\n\t\t\t<Card\n\t\t\t\tglass\n\t\t\t\tclassName=\"w-96\"\n\t\t\t\timageSrc=\"/shoe.jpg\"\n\t\t\t\ttitle=\"Shoes!\"\n\t\t\t\tcontent=\"If a dog chews shoes whose shoes does he choose?\"\n\t\t\t\taction={<Button color=\"primary\">Buy Now</Button>}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CardGlassDemo\";\n"
	},
	{
		"name": "CardSlotsDemo",
		"code": "import { Button, Card } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst outline = \"!outline !outline-2 !outline-offset-1 !outline-red-500\";\n\nexport default function Demo() {\n\tconst [slots, setSlots] = useState({});\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"flex flex-wrap gap-2 bg-base-100 rounded-box p-4\">\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tfigure: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tfigure\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tbody: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tbody\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\ttitle: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\ttitle\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tcontent: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tcontent\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tactions: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tactions\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Card\n\t\t\t\tclassName=\"w-96\"\n\t\t\t\timageSrc=\"/shoe.jpg\"\n\t\t\t\ttitle=\"Shoes!\"\n\t\t\t\tcontent=\"If a dog chews shoes whose shoes does he choose?\"\n\t\t\t\taction={<Button color=\"primary\">Buy Now</Button>}\n\t\t\t\tslots={slots}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CardSlotsDemo\";\n"
	},
	{
		"name": "CarouselArrowDemo",
		"code": "import { Carousel } from \"@rtdui/core\";\n\nconst items = [\n\t{ imageSrc: \"/photo-1625726411847-8cbb60cc71e6.jpg\" },\n\t{ imageSrc: \"/photo-1609621838510-5ad474b7d25d.jpg\" },\n\t{ imageSrc: \"/photo-1414694762283-acccc27bca85.jpg\" },\n\t{ imageSrc: \"/photo-1665553365602-b2fb8e5d1707.jpg\" },\n];\nexport default function Demo() {\n\treturn <Carousel items={items} />;\n}\nDemo.displayName = \"CarouselArrowDemo\";\n"
	},
	{
		"name": "CarouselNumberDemo",
		"code": "import { Carousel } from \"@rtdui/core\";\n\nconst items = [\n\t{ imageSrc: \"/photo-1625726411847-8cbb60cc71e6.jpg\" },\n\t{ imageSrc: \"/photo-1609621838510-5ad474b7d25d.jpg\" },\n\t{ imageSrc: \"/photo-1414694762283-acccc27bca85.jpg\" },\n\t{ imageSrc: \"/photo-1665553365602-b2fb8e5d1707.jpg\" },\n];\nexport default function Demo() {\n\treturn <Carousel items={items} indicator=\"number\" />;\n}\nDemo.displayName = \"CarouselNumberDemo\";\n"
	},
	{
		"name": "ButtonCheckboxDemo",
		"code": "import { ButtonCheckbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <ButtonCheckbox required label=\"label\" />;\n}\nDemo.displayName = \"ButtonCheckboxDemo\";\n"
	},
	{
		"name": "ButtonCheckboxGroupDemo",
		"code": "import { ButtonCheckbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"join\">\n\t\t\t<ButtonCheckbox required label=\"label1\" className=\"join-item\" />\n\t\t\t<ButtonCheckbox required label=\"label2\" className=\"join-item\" />\n\t\t\t<ButtonCheckbox required label=\"label3\" className=\"join-item\" />\n\t\t\t<ButtonCheckbox required label=\"label4\" className=\"join-item\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ButtonCheckboxGroupDemo\";\n"
	},
	{
		"name": "CheckboxColorDemo",
		"code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<Checkbox defaultChecked label=\"default\" />\n\t\t\t<Checkbox defaultChecked color=\"primary\" label=\"primary\" />\n\t\t\t<Checkbox defaultChecked color=\"secondary\" label=\"secondary\" />\n\t\t\t<Checkbox defaultChecked color=\"accent\" label=\"accent\" />\n\t\t\t<Checkbox defaultChecked color=\"info\" label=\"info\" />\n\t\t\t<Checkbox defaultChecked color=\"success\" label=\"success\" />\n\t\t\t<Checkbox defaultChecked color=\"warning\" label=\"warning\" />\n\t\t\t<Checkbox defaultChecked color=\"error\" label=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CheckboxColorDemo\";\n"
	},
	{
		"name": "CheckboxLabelDemo",
		"code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Checkbox required label=\"label\" helperText=\"(helperText)\" />;\n}\nDemo.displayName = \"CheckboxLabelDemo\";\n"
	},
	{
		"name": "CheckboxSizeDemo",
		"code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<Checkbox size=\"xs\" label=\"xs\" />\n\t\t\t<Checkbox size=\"sm\" label=\"sm\" />\n\t\t\t<Checkbox size=\"md\" label=\"md(default)\" />\n\t\t\t<Checkbox size=\"lg\" label=\"lg\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CheckboxSizeDemo\";\n"
	},
	{
		"name": "ChipActionDemo",
		"code": "import React from \"react\";\nimport { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [output, setOutput] = React.useState(\"\");\n\treturn (\n\t\t<div>\n\t\t\t<Chip\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tlabel=\"normal\"\n\t\t\t\tonClick={() => setOutput(\"onClick\")}\n\t\t\t\tonDelete={() => setOutput(\"onDelete\")}\n\t\t\t/>\n\t\t\t<div className=\"mt-4\">console: {output}</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ChipActionDemo\";\n"
	},
	{
		"name": "ChipColorDemo",
		"code": "import { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Chip label=\"default\" />\n\t\t\t<Chip color=\"primary\" label=\"primary\" />\n\t\t\t<Chip color=\"secondary\" label=\"secondary\" />\n\t\t\t<Chip color=\"accent\" label=\"accent\" />\n\t\t\t<Chip color=\"info\" label=\"info\" />\n\t\t\t<Chip color=\"success\" label=\"success\" />\n\t\t\t<Chip color=\"warning\" label=\"warning\" />\n\t\t\t<Chip color=\"error\" label=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ChipColorDemo\";\n"
	},
	{
		"name": "ChipSizeDemo",
		"code": "import { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center lg:justify-center\">\n\t\t\t<Chip label=\"normal\" onDelete={() => {}} />\n\t\t\t<Chip label=\"small\" onDelete={() => {}} size=\"small\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ChipSizeDemo\";\n"
	},
	{
		"name": "CodeHighlightAllDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n- return <div className={className}>hello world!</div>\n+ return <span className={className}>hello world!</span>\n}\n`;\n\treturn (\n\t\t<CodeHighlight\n\t\t\tcode={code}\n\t\t\tlanguage=\"jsx\"\n\t\t\thighlingtLines=\"{1,4-5}\"\n\t\t\tdiff\n\t\t\tshowLineNumbers\n\t\t/>\n\t);\n}\nDemo.displayName = \"CodeHighlightAllDemo\";\n"
	},
	{
		"name": "CodeHighlightBadDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" bad />;\n}\nDemo.displayName = \"CodeHighlightBadDemo\";\n"
	},
	{
		"name": "CodeHighlightBasicDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" />;\n}\nDemo.displayName = \"CodeHighlightBasicDemo\";\n"
	},
	{
		"name": "CodeHighlightCopyBtnLabelDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn (\n\t\t<CodeHighlight\n\t\t\tcode={code}\n\t\t\tlanguage=\"jsx\"\n\t\t\tcopyLabel=\"拷贝代码\"\n\t\t\tcopiedLabel=\"已拷贝到剪贴板\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"CodeHighlightCopyBtnLabelDemo\";\n"
	},
	{
		"name": "CodeHighlightDiffDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n- return <div className={className}>hello world!</div>\n+ return <span className={className}>hello world!</span>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" diff />;\n}\nDemo.displayName = \"CodeHighlightDiffDemo\";\n"
	},
	{
		"name": "CodeHighlightHiddenCopyBtnDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" withCopyButton={false} />;\n}\nDemo.displayName = \"CodeHighlightHiddenCopyBtnDemo\";\n"
	},
	{
		"name": "CodeHighlightLinesHighlightDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" highlingtLines=\"{1,4-5}\" />;\n}\nDemo.displayName = \"CodeHighlightLinesHighlightDemo\";\n"
	},
	{
		"name": "CodeHighlightShowLineNumbersDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n\tconst code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n\treturn <CodeHighlight code={code} language=\"jsx\" showLineNumbers />;\n}\nDemo.displayName = \"CodeHighlightShowLineNumbersDemo\";\n"
	},
	{
		"name": "ColorInputBasicDemo",
		"code": "import React from \"react\";\nimport { ColorInput, Divider, Select, Slider, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\n\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst swatches = [\n\t\"#2e2e2e\",\n\t\"#868e96\",\n\t\"#fa5252\",\n\t\"#e64980\",\n\t\"#be4bdb\",\n\t\"#7950f2\",\n\t\"#4c6ef5\",\n\t\"#228be6\",\n\t\"#15aabf\",\n\t\"#12b886\",\n\t\"#40c057\",\n\t\"#82c91e\",\n\t\"#fab005\",\n\t\"#fd7e14\",\n];\nexport default function Demo() {\n\tconst [state, setState] = React.useState({\n\t\tvalue: \"#fff\",\n\t\tsize: \"md\",\n\t\tdisallowInput: false,\n\t\treadOnly: false,\n\t\tdisabled: false,\n\t\tformat: \"hex\",\n\t\twithPicker: true,\n\t\twithSwatches: false,\n\t\tcloseOnColorSwatchClick: false,\n\t});\n\n\tconst code = `\nimport { ColorInput } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <ColorInput${state.format !== \"hex\" ? ` format=\"${state.format}\"` : \"\"}${state.withSwatches ? ` swatches={${JSON.stringify(swatches)}}` : \"\"}${state.size !== \"md\" ? ` size=\"${state.size}\"` : \"\"}${state.disallowInput ? \" disallowInput\" : \"\"}${state.readOnly ? \" readOnly\" : \"\"}${state.readOnly ? \" disabled\" : \"\"}${state.withPicker === false ? \" withPicker={false}\" : \"\"} />\n  );\n}\n`;\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<ColorInput\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tvalue={state.value}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, value: val }))}\n\t\t\t\t\t\treadOnly={state.readOnly}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tdisallowInput={state.disallowInput}\n\t\t\t\t\t\tformat={state.format as any}\n\t\t\t\t\t\twithPicker={state.withPicker}\n\t\t\t\t\t\tswatches={state.withSwatches ? swatches : undefined}\n\t\t\t\t\t\tcloseOnColorSwatchClick={state.closeOnColorSwatchClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 w-72 bg-base-100 p-4\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\t\tvalue={state.format}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\tformat: val as string,\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ value: \"hex\", label: \"hex\" },\n\t\t\t\t\t\t\t{ value: \"rgb\", label: \"rgb\" },\n\t\t\t\t\t\t\t{ value: \"hsl\", label: \"hsl\" },\n\t\t\t\t\t\t\t{ value: \"hwb\", label: \"hwb\" },\n\t\t\t\t\t\t\t{ value: \"lch\", label: \"lch\" },\n\t\t\t\t\t\t\t{ value: \"oklch\", label: \"oklch\" },\n\t\t\t\t\t\t\t{ value: \"lab\", label: \"lab\" },\n\t\t\t\t\t\t\t{ value: \"oklab\", label: \"oklab\" },\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"with swatches\"\n\t\t\t\t\t\tchecked={state.withSwatches}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, withSwatches: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"closeOnColorSwatchClick\"\n\t\t\t\t\t\tdisabled={!state.withSwatches}\n\t\t\t\t\t\tchecked={state.closeOnColorSwatchClick}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, closeOnColorSwatchClick: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"withPicker\"\n\t\t\t\t\t\tchecked={state.withPicker}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\twithPicker: val,\n\t\t\t\t\t\t\t\twithSwatches: val === false ? true : prev.withSwatches,\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\tSize\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={4}\n\t\t\t\t\t\t\tvalue={size.indexOf(state.size) + 1}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: size[val - 1] }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={(v) => size[v - 1]}\n\t\t\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"disallowInput\"\n\t\t\t\t\t\tchecked={state.disallowInput}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, disallowInput: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"readOnly\"\n\t\t\t\t\t\tchecked={state.readOnly}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, readOnly: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"disabled\"\n\t\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight code={code} language=\"jsx\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ColorInputBasicDemo\";\n"
	},
	{
		"name": "ColorInputFixOnBlurDemo",
		"code": "import { ColorInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<ColorInput fixOnBlur={false} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ColorInputFixOnBlurDemo\";\n"
	},
	{
		"name": "ColorPickerBasicDemo",
		"code": "import React from \"react\";\nimport { ColorPicker, Divider, Select, Slider, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\n\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst swatches = [\n\t\"primary\",\n\t\"secondary\",\n\t\"accent\",\n\t\"info\",\n\t\"warning\",\n\t\"error\",\n\t\"success\",\n\t\"neutral\",\n\t\"#2e2e2e\",\n\t\"#868e96\",\n\t\"#fa5252\",\n\t\"#e64980\",\n\t\"#be4bdb\",\n\t\"#7950f2\",\n\t\"#4c6ef5\",\n\t\"#228be6\",\n\t\"#15aabf\",\n\t\"#12b886\",\n\t\"#40c057\",\n\t\"#82c91e\",\n\t\"#fab005\",\n\t\"#fd7e14\",\n];\nexport default function Demo() {\n\tconst [state, setState] = React.useState({\n\t\tformat: \"hex\",\n\t\tcolor: \"#fff\",\n\t\tsize: \"md\",\n\t\tfullWidth: false,\n\t\twithSwatches: false,\n\t});\n\n\tconst code = `\nimport { ColorPicker } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <ColorPicker${state.format !== \"hex\" ? ` format=\"${state.format}\"` : \"\"}${state.withSwatches ? ` swatches={${JSON.stringify(swatches)}}` : \"\"}${state.size !== \"md\" && !state.fullWidth ? ` size=\"${state.size}\"` : \"\"} ${state.fullWidth ? \"fullWidth\" : \"\"}/>\n  );\n}\n`;\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t\t\tformat={state.format as any}\n\t\t\t\t\t\tsize={state.size}\n\t\t\t\t\t\tfullWidth={state.fullWidth}\n\t\t\t\t\t\tswatches={state.withSwatches ? swatches : undefined}\n\t\t\t\t\t\tclassName=\"bg-base-100\"\n\t\t\t\t\t/>\n\t\t\t\t\t<p className=\"ml-1 mt-4 bg-base-100\">{state.color}</p>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 w-64 bg-base-100 p-4\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\t\tvalue={state.format}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\tformat: val as string,\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t{ value: \"hex\", label: \"hex\" },\n\t\t\t\t\t\t\t{ value: \"rgb\", label: \"rgb\" },\n\t\t\t\t\t\t\t{ value: \"hsl\", label: \"hsl\" },\n\t\t\t\t\t\t\t{ value: \"hwb\", label: \"hwb\" },\n\t\t\t\t\t\t\t{ value: \"lch\", label: \"lch\" },\n\t\t\t\t\t\t\t{ value: \"oklch\", label: \"oklch\" },\n\t\t\t\t\t\t\t{ value: \"lab\", label: \"lab\" },\n\t\t\t\t\t\t\t{ value: \"oklab\", label: \"oklab\" },\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"With swatches\"\n\t\t\t\t\t\tchecked={state.withSwatches}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, withSwatches: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\tSize\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\t\tvalue={size.indexOf(state.size) + 1}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: size[val - 1] }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={(v) => size[v - 1]}\n\t\t\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"Full width\"\n\t\t\t\t\t\tchecked={state.fullWidth}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, fullWidth: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight code={code} language=\"jsx\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ColorPickerBasicDemo\";\n"
	},
	{
		"name": "ComboboxBasicDemo",
		"code": "import { useState } from \"react\";\nimport { Combobox, TextInput, useCombobox } from \"@rtdui/core\";\nimport { IconCheck } from \"@tabler/icons-react\";\n\nconst data = [\n\t\"🍎 Apples\",\n\t\"🍌 Bananas\",\n\t\"🥦 Broccoli\",\n\t\"🥕 Carrots\",\n\t\"🍫 Chocolate\",\n];\nexport default function Demo() {\n\tconst combobox = useCombobox({\n\t\tonDropdownClose: () => combobox.resetSelectedOption(),\n\t});\n\tconst [value, setValue] = useState(\"\");\n\tconst shouldFilterOptions = !data.some((item) => item === value);\n\tconst filteredOptions = shouldFilterOptions\n\t\t? data.filter((item) =>\n\t\t\t\titem.toLowerCase().includes(value.toLowerCase().trim()),\n\t\t\t)\n\t\t: data;\n\n\tconst options = filteredOptions.map((item) => (\n\t\t<Combobox.Option\n\t\t\tkey={item}\n\t\t\tvalue={item}\n\t\t\tactive={item === value}\n\t\t\tdisabled={item === \"🥦 Broccoli\"}\n\t\t\tclassName=\"flex items-center\"\n\t\t>\n\t\t\t<span className=\"flex-1\">{item}</span>\n\t\t\t{item === value ? <IconCheck size={20} /> : null}\n\t\t</Combobox.Option>\n\t));\n\treturn (\n\t\t<Combobox\n\t\t\tstore={combobox}\n\t\t\tonOptionSubmit={(val) => {\n\t\t\t\tsetValue(val);\n\t\t\t\tcombobox.closeDropdown();\n\t\t\t}}\n\t\t>\n\t\t\t<Combobox.Target>\n\t\t\t\t<TextInput\n\t\t\t\t\trightSection={<Combobox.Chevron />}\n\t\t\t\t\tslots={{\n\t\t\t\t\t\tright: \"pointer-events-none\",\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetValue(event.currentTarget.value);\n\t\t\t\t\t\tcombobox.openDropdown();\n\t\t\t\t\t\tcombobox.updateSelectedOptionIndex();\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => combobox.openDropdown()}\n\t\t\t\t\tonFocus={() => combobox.openDropdown()}\n\t\t\t\t\tonBlur={() => combobox.closeDropdown()}\n\t\t\t\t/>\n\t\t\t</Combobox.Target>\n\n\t\t\t<Combobox.Dropdown>\n\t\t\t\t<Combobox.Options>\n\t\t\t\t\t{options.length === 0 ? (\n\t\t\t\t\t\t<Combobox.Empty>无匹配</Combobox.Empty>\n\t\t\t\t\t) : (\n\t\t\t\t\t\toptions\n\t\t\t\t\t)}\n\t\t\t\t</Combobox.Options>\n\t\t\t</Combobox.Dropdown>\n\t\t</Combobox>\n\t);\n}\n\nDemo.displayName = \"ComboboxBasicDemo\";\n"
	},
	{
		"name": "ComboboxSelectDemo",
		"code": "import { useState } from \"react\";\nimport { Combobox, useCombobox, InputBase } from \"@rtdui/core\";\nimport { IconCheck } from \"@tabler/icons-react\";\nconst data = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Feijoa\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Leeks\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Okra\",\n\t\"Papayas\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\nexport default function Demo() {\n\tconst combobox = useCombobox({\n\t\tonDropdownClose: () => combobox.resetSelectedOption(),\n\t});\n\n\tconst [search, setSearch] = useState(\"\");\n\tconst [value, setValue] = useState(\"\");\n\n\tconst shouldFilterOptions = !data.some((item) => item === value);\n\tconst filteredOptions = shouldFilterOptions\n\t\t? data.filter((item) =>\n\t\t\t\titem.toLowerCase().includes(search.toLowerCase().trim()),\n\t\t\t)\n\t\t: data;\n\n\tconst options = filteredOptions.map((item) => (\n\t\t<Combobox.Option\n\t\t\tkey={item}\n\t\t\tvalue={item}\n\t\t\tactive={item === value}\n\t\t\tdisabled={item === \"🥦 Broccoli\"}\n\t\t\tclassName=\"flex items-center\"\n\t\t>\n\t\t\t<span className=\"flex-1\">{item}</span>\n\t\t\t{item === value ? <IconCheck size={20} /> : null}\n\t\t</Combobox.Option>\n\t));\n\treturn (\n\t\t<Combobox\n\t\t\tstore={combobox}\n\t\t\tonOptionSubmit={(val) => {\n\t\t\t\tsetValue(val);\n\t\t\t\tcombobox.closeDropdown();\n\t\t\t}}\n\t\t>\n\t\t\t<Combobox.Target>\n\t\t\t\t<InputBase\n\t\t\t\t\trightSection={\n\t\t\t\t\t\tvalue ? (\n\t\t\t\t\t\t\t<Combobox.ClearButton\n\t\t\t\t\t\t\t\ttitle=\"Combobox.ClearButton\"\n\t\t\t\t\t\t\t\tonClear={() => {\n\t\t\t\t\t\t\t\t\tsetValue(\"\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Combobox.Chevron size={18} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\trightSectionPointerEvents={value ? \"auto\" : undefined}\n\t\t\t\t\tslots={{\n\t\t\t\t\t\tright: \"pointer-events-none\",\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetValue(event.currentTarget.value);\n\t\t\t\t\t\tcombobox.openDropdown();\n\t\t\t\t\t\tcombobox.updateSelectedOptionIndex();\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => combobox.openDropdown()}\n\t\t\t\t\tonFocus={() => combobox.openDropdown()}\n\t\t\t\t\tonBlur={() => combobox.closeDropdown()}\n\t\t\t\t/>\n\t\t\t</Combobox.Target>\n\n\t\t\t<Combobox.Dropdown>\n\t\t\t\t<Combobox.Search\n\t\t\t\t\tvalue={search}\n\t\t\t\t\tonChange={(event) => setSearch(event.currentTarget.value)}\n\t\t\t\t\tplaceholder=\"Combobox.Search\"\n\t\t\t\t/>\n\t\t\t\t<Combobox.Header className=\"bg-base-200 p-1 text-xs\">\n\t\t\t\t\tCombobox.Header\n\t\t\t\t</Combobox.Header>\n\t\t\t\t<Combobox.Options className=\"max-h-52 overflow-auto\">\n\t\t\t\t\t{options.length === 0 ? (\n\t\t\t\t\t\t<Combobox.Empty>无匹配</Combobox.Empty>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Combobox.Group label=\"Combobox.Group\">{options}</Combobox.Group>\n\t\t\t\t\t)}\n\t\t\t\t</Combobox.Options>\n\t\t\t\t<Combobox.Footer className=\"bg-base-200 p-1 text-xs\">\n\t\t\t\t\tCombobox.Footer\n\t\t\t\t</Combobox.Footer>\n\t\t\t</Combobox.Dropdown>\n\t\t</Combobox>\n\t);\n}\n\nDemo.displayName = \"ComboboxSelectDemo\";\n"
	},
	{
		"name": "CountdownBasicDemo",
		"code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst now = new Date();\n\tconst end = now.setHours(now.getHours() + 10); // 10小时倒计时\n\tconst endDate = new Date(end);\n\treturn <Countdown endDate={endDate} />;\n}\nDemo.displayName = \"CountdownBasicDemo\";\n"
	},
	{
		"name": "CountdownBoxDemo",
		"code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst now = new Date();\n\tconst end = now.setHours(now.getHours() + 10); // 10小时倒计时\n\tconst endDate = new Date(end);\n\treturn <Countdown endDate={endDate} variant=\"box\" />;\n}\nDemo.displayName = \"CountdownBoxDemo\";\n"
	},
	{
		"name": "CountdownLabelInlineDemo",
		"code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst now = new Date();\n\tconst end = now.setHours(now.getHours() + 10); // 10小时倒计时\n\tconst endDate = new Date(end);\n\treturn <Countdown endDate={endDate} variant=\"labelInline\" />;\n}\nDemo.displayName = \"CountdownLabelInlineDemo\";\n"
	},
	{
		"name": "CountdownLocaleDemo",
		"code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst now = new Date();\n\tconst end = now.setFullYear(now.getFullYear() + 2); // 2年倒计时\n\tconst endDate = new Date(end);\n\treturn (\n\t\t<div className=\"flex flex-col items-start gap-4\">\n\t\t\t<Countdown\n\t\t\t\tendDate={endDate}\n\t\t\t\tlabels={{\n\t\t\t\t\tyears: \"年\",\n\t\t\t\t\tmonths: \"月\",\n\t\t\t\t\tdays: \"日\",\n\t\t\t\t\thours: \"时\",\n\t\t\t\t\tminutes: \"分\",\n\t\t\t\t\tseconds: \"秒\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Countdown\n\t\t\t\tendDate={endDate}\n\t\t\t\tvariant=\"labelInline\"\n\t\t\t\tlabels={{\n\t\t\t\t\tyears: \"年\",\n\t\t\t\t\tmonths: \"月\",\n\t\t\t\t\tdays: \"日\",\n\t\t\t\t\thours: \"时\",\n\t\t\t\t\tminutes: \"分\",\n\t\t\t\t\tseconds: \"秒\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Countdown\n\t\t\t\tendDate={endDate}\n\t\t\t\tvariant=\"box\"\n\t\t\t\tlabels={{\n\t\t\t\t\tyears: \"年\",\n\t\t\t\t\tmonths: \"月\",\n\t\t\t\t\tdays: \"日\",\n\t\t\t\t\thours: \"时\",\n\t\t\t\t\tminutes: \"分\",\n\t\t\t\t\tseconds: \"秒\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"CountdownLocaleDemo\";\n"
	},
	{
		"name": "DatatableSelectBasicDemo",
		"code": "import React from \"react\";\nimport { DataTableSelect, type ColumnDef } from \"@rtdui/datatable\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst dataTableColumns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tsize: 260,\n\t\tminSize: 260,\n\t\tmeta: {\n\t\t\texpandable: true,\n\t\t},\n\t},\n];\n\nconst getRowId = (row: any) => row.id;\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(20, 3));\n\t}, []);\n\n\treturn (\n\t\t<DataTableSelect\n\t\t\tdefaultValue=\"1\"\n\t\t\tplaceholder=\"--请选择--\"\n\t\t\tdisplayField=\"fullName\"\n\t\t\tleftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n\t\t\ttableProps={{\n\t\t\t\tcolumns: dataTableColumns,\n\t\t\t\tdata: data,\n\t\t\t\tgetRowId,\n\t\t\t\tgetSubRows: (row: any) => row.subRows,\n\t\t\t}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"DatatableSelectBasicDemo\";\n"
	},
	{
		"name": "DatatableSelectMultipleDemo",
		"code": "import React from \"react\";\nimport { DataTableSelect, type ColumnDef } from \"@rtdui/datatable\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst dataTableColumns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tsize: 260,\n\t\tminSize: 260,\n\t\tmeta: {\n\t\t\texpandable: true,\n\t\t},\n\t},\n];\n\nconst getRowId = (row: any) => row.id;\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(20, 3));\n\t}, []);\n\n\treturn (\n\t\t<DataTableSelect\n\t\t\tdefaultValue=\"1,4,7\"\n\t\t\tplaceholder=\"--请选择--\"\n\t\t\tdisplayField=\"fullName\"\n\t\t\tleftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n\t\t\ttableProps={{\n\t\t\t\tcolumns: dataTableColumns,\n\t\t\t\tdata,\n\t\t\t\tgetRowId,\n\t\t\t\tgetSubRows: (row: any) => row.subRows,\n\t\t\t\tenableMultiRowSelection: true,\n\t\t\t}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"DatatableSelectMultipleDemo\";\n"
	},
	{
		"name": "DatatableSelectWithFilterDemo",
		"code": "import React from \"react\";\nimport { DataTableSelect, type ColumnDef } from \"@rtdui/datatable\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst dataTableColumns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tsize: 260,\n\t\tminSize: 260,\n\t\tmeta: {\n\t\t\texpandable: true,\n\t\t},\n\t},\n];\n\nconst getRowId = (row: any) => row.id;\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(20, 3));\n\t}, []);\n\n\treturn (\n\t\t<DataTableSelect\n\t\t\tdefaultValue=\"1\"\n\t\t\tplaceholder=\"--请选择--\"\n\t\t\tdisplayField=\"fullName\"\n\t\t\tleftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n\t\t\ttableProps={{\n\t\t\t\tcolumns: dataTableColumns,\n\t\t\t\tdata: data,\n\t\t\t\tgetRowId,\n\t\t\t\tgetSubRows: (row: any) => row.subRows,\n\t\t\t\tenableFilters: true,\n\t\t\t\tfilterFromLeafRows: true,\n\t\t\t}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"DatatableSelectWithFilterDemo\";\n"
	},
	{
		"name": "DataTableBasicDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"性别\",\n\t\theader: \"性别\",\n\t\taccessorFn: (row) => (row.gender === \"male\" ? \"男\" : \"女\"),\n\t\tmeta: {\n\t\t\talign: \"center\",\n\t\t},\n\t\tsize: 80,\n\t\tminSize: 80,\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t\tsize: 80,\n\t\tminSize: 80,\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableBasicDemo\";\n"
	},
	{
		"name": "DataTableDefDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype CellContext,\n\ttype ColumnDef,\n\ttype HeaderContext,\n} from \"@rtdui/datatable\";\nimport { makeDatumData, type Datum } from \"../../demoData/makeData\";\n\nconst integerFormatter = new Intl.NumberFormat(\"zh-Hans-CN\");\nconst decimalFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n\tminimumFractionDigits: 2,\n});\nconst percentFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n\tstyle: \"percent\",\n\tminimumFractionDigits: 2,\n\tmaximumFractionDigits: 2,\n});\n\nconst formatNumber = (\n\tval: number,\n\tstyle: \"integer\" | \"decimal\" | \"percent\",\n) => {\n\tswitch (style) {\n\t\tcase \"integer\":\n\t\t\treturn integerFormatter.format(val);\n\t\tcase \"percent\":\n\t\t\treturn percentFormatter.format(val);\n\t\tcase \"decimal\":\n\t\tdefault:\n\t\t\treturn decimalFormatter.format(val);\n\t}\n};\n\nconst dateFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n\thour12: false,\n\tyear: \"numeric\",\n\tmonth: \"2-digit\",\n\tday: \"2-digit\",\n});\nconst timeFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n\thour12: false,\n\thour: \"2-digit\",\n\tminute: \"2-digit\",\n\tsecond: \"2-digit\",\n});\nconst datetimeFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n\thour12: false,\n\tyear: \"numeric\",\n\tmonth: \"2-digit\",\n\tday: \"2-digit\",\n\thour: \"2-digit\",\n\tminute: \"2-digit\",\n\tsecond: \"2-digit\",\n});\nconst formatDate = (date: Date, style: \"date\" | \"time\" | \"datetime\") => {\n\tswitch (style) {\n\t\tcase \"date\":\n\t\t\treturn dateFormatter.format(date).replace(/\\//g, \"-\");\n\t\tcase \"datetime\":\n\t\t\treturn datetimeFormatter.format(date).replace(/\\//g, \"-\");\n\t\tcase \"time\":\n\t\t\treturn timeFormatter.format(date);\n\t\tdefault:\n\t\t\treturn datetimeFormatter.format(date).replace(/\\//g, \"-\");\n\t}\n};\n\nconst DefaultFooterSumCell = (props: HeaderContext<Datum, any>) => (\n\t<div className=\"flex justify-between\">\n\t\t<span>总计:</span>\n\t\t<span>\n\t\t\t{decimalFormatter.format(\n\t\t\t\tprops.table\n\t\t\t\t\t.getRowModel()\n\t\t\t\t\t.rows.reduce(\n\t\t\t\t\t\t(pre, cur) => pre + (cur.getValue(props.column.id) as number),\n\t\t\t\t\t\t0,\n\t\t\t\t\t),\n\t\t\t)}\n\t\t</span>\n\t</div>\n);\n\nconst DefaultAggregatedCell = (props: CellContext<Datum, any>) => (\n\t<div className=\"flex justify-between\">\n\t\t<span>小计:</span>\n\t\t{decimalFormatter.format(props.getValue())}\n\t</div>\n);\n\nconst columns: ColumnDef<Datum>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\theader: \"数据类型\",\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tid: \"枚举\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">枚举</span>,\n\t\t\t\taccessorKey: \"enum\",\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tsize: 100,\n\t\t\t\tminSize: 100,\n\t\t\t\tfilterFn: \"equalsString\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"枚举映射\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">枚举映射</span>,\n\t\t\t\taccessorFn: (row) => (row.enum === \"m\" ? \"男\" : \"女\"),\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tsize: 100,\n\t\t\t\tminSize: 100,\n\t\t\t\tfilterFn: \"equalsString\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"布尔\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">布尔</span>,\n\t\t\t\tsize: 100,\n\t\t\t\tminSize: 100,\n\t\t\t\taccessorKey: \"boolean\",\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tfilterFn: \"equalsString\",\n\t\t\t\t// cell: (cx) => cx.column.columnDef.meta?.mapping?.[cx.getValue()],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"布尔映射\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">布尔映射</span>,\n\t\t\t\tsize: 100,\n\t\t\t\tminSize: 100,\n\t\t\t\taccessorFn: (row) => (row.boolean ? \"是\" : \"否\"),\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tfilterFn: \"equalsString\",\n\t\t\t\t// cell: (cx) => cx.column.columnDef.meta?.mapping?.[cx.getValue()],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"整数\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">整数</span>,\n\t\t\t\tmeta: { align: \"right\" },\n\t\t\t\tsize: 250,\n\t\t\t\taccessorKey: \"int\",\n\t\t\t\tcell: (cx) => formatNumber(cx.getValue(), \"integer\"),\n\t\t\t\taggregatedCell: DefaultAggregatedCell,\n\t\t\t\tfooter: DefaultFooterSumCell,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"数字百分比\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">数字百分比</span>,\n\t\t\t\taccessorKey: \"percent\",\n\t\t\t\tmeta: { align: \"right\" },\n\t\t\t\tcell: (cx) => formatNumber(cx.getValue(), \"percent\"),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"数字\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">数字</span>,\n\t\t\t\taccessorKey: \"float\",\n\t\t\t\tmeta: { align: \"right\" },\n\t\t\t\tcell: (cx) => formatNumber(cx.getValue(), \"decimal\"),\n\t\t\t\taggregatedCell: DefaultAggregatedCell,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"字符串数字\",\n\t\t\t\theader: (cx) => <span className=\"text-secondary\">字符串数字</span>,\n\t\t\t\taccessorKey: \"stringNumber\",\n\t\t\t\tmeta: { align: \"right\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"Date映射为字符串日期\",\n\t\t\t\theader: (cx) => (\n\t\t\t\t\t<span className=\"text-secondary\">Date映射为字符串日期</span>\n\t\t\t\t),\n\t\t\t\taccessorFn: (row) => dateFormatter.format(row.date).replace(/\\//g, \"-\"),\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"Date映射为字符串日期时间\",\n\t\t\t\theader: (cx) => (\n\t\t\t\t\t<span className=\"text-secondary\">Date映射为字符串日期时间</span>\n\t\t\t\t),\n\t\t\t\taccessorFn: (row) =>\n\t\t\t\t\tdatetimeFormatter.format(row.date).replace(/\\//g, \"-\"),\n\t\t\t\tmeta: {\n\t\t\t\t\talign: \"center\",\n\t\t\t\t},\n\t\t\t\tsize: 200,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"Date未映射\",\n\t\t\t\theader: (cx) => (\n\t\t\t\t\t<span className=\"text-secondary\">\n\t\t\t\t\t\tDate未映射但通过单元格格式化显示\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t\taccessorKey: \"date\",\n\t\t\t\tsize: 250,\n\t\t\t\tcell: (cx) => (\n\t\t\t\t\t<div className=\"text-center\">{formatDate(cx.getValue(), \"time\")}</div>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Datum[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makeDatumData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} getRowId={(row) => row.id} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableDefDemo\";\n"
	},
	{
		"name": "DataTableEditableDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef, type CellContext } from \"@rtdui/datatable\";\nimport { CloseButton, NumberInput, TextInput } from \"@rtdui/core\";\nimport clsx from \"clsx\";\nimport {\n\tmakePersonData,\n\tnewEmptyPerson,\n\ttype Person,\n} from \"../../demoData/makeData\";\n\nconst getRowId = (row: Person) => row.id!;\n\nfunction FullNameEditableInputCell(props: CellContext<any, any>) {\n\tconst { table, getValue } = props;\n\tconst initialValue = getValue();\n\t// We need to keep and update the state of the cell normally\n\tconst [value, setValue] = React.useState(initialValue);\n\n\t// If the initialValue is changed external, sync it up with our state\n\tReact.useEffect(() => {\n\t\tsetValue(initialValue);\n\t}, [initialValue]);\n\n\tconst onBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst newValue = e.currentTarget.value;\n\t\ttable.options.meta?.changeRow?.({\n\t\t\t...props,\n\t\t\tvalue: newValue,\n\t\t});\n\t};\n\n\treturn (\n\t\t<TextInput\n\t\t\tvariant=\"ghost\"\n\t\t\tvalue={value}\n\t\t\tonChange={(e) => setValue(e.currentTarget.value)}\n\t\t\tonClick={(ev) => ev.stopPropagation()}\n\t\t\tonBlur={onBlur}\n\t\t/>\n\t);\n}\n\nfunction AgeEditableInputWithValidateCell(props: CellContext<any, any>) {\n\tconst { table, getValue } = props;\n\tconst initialValue = getValue();\n\t// We need to keep and update the state of the cell normally\n\tconst [value, setValue] = React.useState(initialValue);\n\n\t// When the input is blurred, we'll call our table meta's updateData function\n\tconst onBlur = (ev: React.FocusEvent<HTMLInputElement>) => {\n\t\tconst newValue = ev.target.value;\n\t\t// 如果验证通过则加入变更集,否则加入错误集\n\t\ttable.options.meta?.changeRow?.({\n\t\t\t...props,\n\t\t\tvalue: newValue,\n\t\t});\n\t};\n\n\t// If the initialValue is changed external, sync it up with our state\n\tReact.useEffect(() => {\n\t\tsetValue(initialValue);\n\t}, [initialValue]);\n\n\treturn (\n\t\t<NumberInput\n\t\t\tvariant=\"ghost\"\n\t\t\tallowNegative={false}\n\t\t\tallowDecimal={false}\n\t\t\tvalue={value}\n\t\t\tonChange={setValue}\n\t\t\tonBlur={onBlur}\n\t\t\tonClick={(ev) => ev.stopPropagation()}\n\t\t/>\n\t);\n}\n\nfunction GenderEditableSelectCell(props: CellContext<any, any>) {\n\tconst { table, getValue } = props;\n\tconst initialValue = getValue();\n\t// We need to keep and update the state of the cell normally\n\tconst [value, setValue] = React.useState(initialValue);\n\n\tconst onChange = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst newValue = ev.target.value;\n\t\tsetValue(newValue);\n\t\ttable.options.meta?.changeRow?.({\n\t\t\t...props,\n\t\t\tvalue: newValue === \"男\" ? \"male\" : \"female\",\n\t\t});\n\t};\n\n\t// If the initialValue is changed external, sync it up with our state\n\tReact.useEffect(() => {\n\t\tsetValue(initialValue);\n\t}, [initialValue]);\n\n\treturn (\n\t\t<select\n\t\t\tclassName=\"select select-ghost select-xs w-full\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tonClick={(ev) => ev.stopPropagation()}\n\t\t>\n\t\t\t<option value={\"男\"}>男</option>\n\t\t\t<option value={\"女\"}>女</option>\n\t\t</select>\n\t);\n}\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t\tenableColumnFilter: false,\n\t\tminSize: 80,\n\t\tsize: 80,\n\t},\n\t{\n\t\theader: \"个人信息\",\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tid: \"姓名\",\n\t\t\t\theader: \"姓名\",\n\t\t\t\taccessorKey: \"fullName\",\n\t\t\t\tcell: FullNameEditableInputCell,\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"年龄\",\n\t\t\t\theader: \"年龄\",\n\t\t\t\tsize: 230,\n\t\t\t\taccessorKey: \"age\",\n\t\t\t\tcell: AgeEditableInputWithValidateCell,\n\t\t\t\taggregationFn: \"mean\",\n\t\t\t\taggregatedCell: ({ getValue }) => (\n\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t<span>平均:</span>\n\t\t\t\t\t\t<span>{Math.round(getValue() * 100) / 100}</span>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"性别\",\n\t\t\t\theader: \"性别\",\n\t\t\t\tsize: 120,\n\t\t\t\tminSize: 120,\n\t\t\t\taccessorKey: \"gender\",\n\t\t\t\taccessorFn: (row) =>\n\t\t\t\t\trow.gender === \"male\"\n\t\t\t\t\t\t? \"男\"\n\t\t\t\t\t\t: row.gender === \"female\"\n\t\t\t\t\t\t\t? \"女\"\n\t\t\t\t\t\t\t: row.gender,\n\t\t\t\tmeta: {\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tfilterFn: \"equalsString\",\n\t\t\t\tcell: GenderEditableSelectCell,\n\t\t\t\taggregatedCell: \"\",\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst defaultProps = {\n\tgetRowId,\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: true,\n\tenableMultiRowSelection: true,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: false,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\n\nlet newId = 0;\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\t// setData(makeData(50, 2));\n\t\tsetData(makePersonData(10));\n\t}, []);\n\n\tconst ref = React.useRef<any>(null!);\n\tconst handleNewRowClick = () => {\n\t\tref.current.addRow(newEmptyPerson(--newId));\n\t};\n\tconst handleDeleteRowClick = () => {\n\t\tref.current.deleteRow();\n\t};\n\tconst handleSaveClick = () => {\n\t\ttry {\n\t\t\tconst changes = ref.current.getChanges();\n\t\t\toutputRef.current!.innerHTML = JSON.stringify(changes, undefined, 2);\n\t\t} catch (ex: any) {\n\t\t\tsetError(ex.message);\n\t\t}\n\t};\n\n\tconst [error, setError] = React.useState(\"\");\n\n\tconst outputRef = React.useRef<HTMLPreElement>(null);\n\n\treturn (\n\t\t<div className=\"flex-1 overflow-hidden flex flex-col\">\n\t\t\t<div className=\"flex items-center gap-2 mb-4\">\n\t\t\t\t<button className=\"btn btn-primary btn-sm\" onClick={handleNewRowClick}>\n\t\t\t\t\t新增\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-warning btn-sm\"\n\t\t\t\t\tonClick={handleDeleteRowClick}\n\t\t\t\t>\n\t\t\t\t\t删除\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn btn-info btn-sm\" onClick={handleSaveClick}>\n\t\t\t\t\t保存\n\t\t\t\t</button>\n\t\t\t\t保存的数据结构查看底部的输出\n\t\t\t</div>\n\t\t\t<ul className=\"text-xs\">\n\t\t\t\t<li>名字,年龄和性别列允许编辑: </li>\n\t\t\t\t<li>名字列使用TextInput作为编辑器;</li>\n\t\t\t\t<li>\n\t\t\t\t\t年龄列使用NumberInput作为编辑器,同时启用了自定义输入验证: 不能大于200;\n\t\t\t\t</li>\n\t\t\t\t<li>性别列使用下拉选择作为编辑器。</li>\n\t\t\t</ul>\n\n\t\t\t<DataTable\n\t\t\t\tref={ref}\n\t\t\t\tdata={data}\n\t\t\t\tcolumns={columns}\n\t\t\t\t{...defaultProps}\n\t\t\t\tvalidate={{\n\t\t\t\t\tfullName: (val, row, data) => {\n\t\t\t\t\t\tif (val === \"\") {\n\t\t\t\t\t\t\treturn \"姓名必须\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tage: (val, row, data) => {\n\t\t\t\t\t\t// 验证\n\t\t\t\t\t\tif (val === \"\") {\n\t\t\t\t\t\t\treturn \"年龄必须\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Number(val) > 200) {\n\t\t\t\t\t\t\treturn \"值不能大于200\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<output className=\"mt-4 flex flex-col gap-4\">\n\t\t\t\toutput:\n\t\t\t\t<pre ref={outputRef} className=\"bg-base-100\" />\n\t\t\t</output>\n\n\t\t\t<div className={clsx(\"toast z-10\", { hidden: !error })}>\n\t\t\t\t<div className=\"alert alert-error\">\n\t\t\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t\t\t<span>{error}</span>\n\t\t\t\t\t\t<CloseButton onClick={() => setError(\"\")} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DataTableEditableDemo\";\n"
	},
	{
		"name": "DataTableFilterListDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t\tenableColumnFilter: false,\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tmeta: {\n\t\t\tshowFilterList: true,\n\t\t},\n\t},\n\t{\n\t\tid: \"性别\",\n\t\theader: \"性别\",\n\t\taccessorFn: (row) => (row.gender === \"male\" ? \"男\" : \"女\"),\n\t\tmeta: {\n\t\t\talign: \"center\",\n\t\t\tshowFilterList: true,\n\t\t},\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t\tenableColumnFilter: false,\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} enableFilters />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableFilterListDemo\";\n"
	},
	{
		"name": "DataTableFormatDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst integerFormatter = new Intl.NumberFormat(\"zh-Hans-CN\");\nconst decimalFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n\tminimumFractionDigits: 2,\n\tmaximumFractionDigits: 2,\n});\nconst percentFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n\tstyle: \"percent\",\n\tminimumFractionDigits: 2,\n\tmaximumFractionDigits: 2,\n});\n\nconst formatNumber = (\n\tval: number,\n\tstyle: \"integer\" | \"decimal\" | \"percent\",\n) => {\n\tswitch (style) {\n\t\tcase \"integer\":\n\t\t\treturn integerFormatter.format(val);\n\t\tcase \"percent\":\n\t\t\treturn percentFormatter.format(val);\n\t\tcase \"decimal\":\n\t\tdefault:\n\t\t\treturn decimalFormatter.format(val);\n\t}\n};\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t\tsize: 80,\n\t},\n\t{\n\t\theader: \"个人信息\",\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tid: \"姓名\",\n\t\t\t\theader: \"姓名\",\n\t\t\t\taccessorKey: \"fullName\",\n\t\t\t\tmeta: {\n\t\t\t\t\tshowFilterList: true,\n\t\t\t\t},\n\t\t\t\tfooter: (cx) => (\n\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t<span>总人数:</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatNumber(cx.table.getRowModel().rows.length, \"integer\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"性别\",\n\t\t\t\theader: () => \"性别\",\n\t\t\t\taccessorKey: \"gender\",\n\t\t\t\tcell: (cx) => (\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t{cx.getValue() === \"male\" ? \"男 👨\" : \"女 👩\"}\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tfooter: (cx) => (\n\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t<span>男女比例:</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatNumber(\n\t\t\t\t\t\t\t\tcx.table\n\t\t\t\t\t\t\t\t\t.getRowModel()\n\t\t\t\t\t\t\t\t\t.rows.filter((d) => d.original.gender === \"male\").length /\n\t\t\t\t\t\t\t\t\tcx.table\n\t\t\t\t\t\t\t\t\t\t.getRowModel()\n\t\t\t\t\t\t\t\t\t\t.rows.filter((d) => d.original.gender === \"female\").length,\n\t\t\t\t\t\t\t\t\"decimal\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"年龄\",\n\t\t\t\theader: () => \"年龄\",\n\t\t\t\taccessorKey: \"age\",\n\t\t\t\tcell: (cx) => {\n\t\t\t\t\tconst value = cx.getValue();\n\t\t\t\t\treturn value > 30 ? (\n\t\t\t\t\t\t<span className=\"text-red-500\">{value} ↑</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"text-green-500\">{value} ↓</span>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfooter: (cx) => (\n\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t<span>平均年龄: </span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatNumber(\n\t\t\t\t\t\t\t\tcx.table\n\t\t\t\t\t\t\t\t\t.getRowModel()\n\t\t\t\t\t\t\t\t\t.rows.reduce(\n\t\t\t\t\t\t\t\t\t\t(pre, cur) => pre + (cur.getValue(cx.column.id) as number),\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t) / cx.table.getRowModel().rows.length,\n\t\t\t\t\t\t\t\t\"decimal\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"存款\",\n\t\t\t\theader: (cx) => <span className=\"text-pink-500\">存款</span>,\n\t\t\t\tsize: 200,\n\t\t\t\taccessorKey: \"deposit\",\n\t\t\t\tcell: (cx) => (\n\t\t\t\t\t<span className=\"bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500\">\n\t\t\t\t\t\t{formatNumber(cx.getValue(), \"decimal\")}\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t\tfooter: (cx) => (\n\t\t\t\t\t<div className=\"flex justify-between text-pink-500\">\n\t\t\t\t\t\t<span>总计:</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatNumber(\n\t\t\t\t\t\t\t\tcx.table\n\t\t\t\t\t\t\t\t\t.getRowModel()\n\t\t\t\t\t\t\t\t\t.rows.reduce(\n\t\t\t\t\t\t\t\t\t\t(pre, cur) => pre + (cur.getValue(cx.column.id) as number),\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"decimal\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} getRowId={(row) => row.id} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableFormatDemo\";\n"
	},
	{
		"name": "DataTableGroupingDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef, type CellContext } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst DepositAggregatedCell = (props: CellContext<Person, any>) => (\n\t<div className=\"flex justify-between\">\n\t\t<span>范围:</span>[{props.getValue()[0]}, {props.getValue()[1]}]\n\t</div>\n);\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"信息\",\n\t\theader: \"信息\",\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tid: \"姓名\",\n\t\t\t\theader: \"姓名\",\n\t\t\t\taccessorKey: \"fullName\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"年龄\",\n\t\t\t\theader: \"年龄\",\n\t\t\t\taccessorKey: \"age\",\n\t\t\t},\n\t\t],\n\t},\n\n\t{\n\t\tid: \"存款\",\n\t\theader: \"存款\",\n\t\tsize: 280,\n\t\taccessorKey: \"deposit\",\n\t\taggregatedCell: DepositAggregatedCell,\n\t\taggregationFn: \"extent\",\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable\n\t\t\t\tdata={data}\n\t\t\t\tcolumns={columns}\n\t\t\t\tenableGrouping\n\t\t\t\tinitialState={{ expanded: true }}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableGroupingDemo\";\n"
	},
	{
		"name": "DataTablePaginationDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: true,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: false,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: false,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-[600px]\">\n\t\t\t<DataTable data={data} columns={columns} {...tableProps} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTablePaginationDemo\";\n"
	},
	{
		"name": "DataTableTreePaginationDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tsize: 220,\n\t\tmeta: {\n\t\t\texpandable: true,\n\t\t},\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: true,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: false,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: false,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n\tgetSubRows: (row) => row.subRows,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50, 3, 2));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-[600px]\">\n\t\t\t<DataTable data={data} columns={columns} {...tableProps} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableTreePaginationDemo\";\n"
	},
	{
		"name": "DataTableActivedRowDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype RowActiveState,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: false,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: true,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tconst [activedRowId, setActivedRowId] = React.useState<RowActiveState>(null);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\tconst ref = React.useRef<any>();\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"h-96\">\n\t\t\t\t<DataTable\n\t\t\t\t\tref={ref}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t{...tableProps}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\trowActive: activedRowId,\n\t\t\t\t\t}}\n\t\t\t\t\tonRowActiveChange={setActivedRowId}\n\t\t\t\t\tclassName=\"[&&_tr.actived_td]:bg-info [&&_tr.actived_td]:text-info-content\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<output>当前激活的行id: {activedRowId}</output>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableClickRowSelectionDemo\";\n"
	},
	{
		"name": "DataTableClickRowSelectionDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: true,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: true,\n\tselectAllForAllPages: true,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tconst [rowSelection, setRowSelection] = React.useState({});\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\tconst ref = React.useRef<any>();\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"h-96\">\n\t\t\t\t<DataTable\n\t\t\t\t\tref={ref}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t{...tableProps}\n\t\t\t\t\tonRowSelectionChange={setRowSelection}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableClickRowSelectionDemo\";\n"
	},
	{
		"name": "DataTableConditioinSelectionDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: (row) => Number(row.id) % 2 === 0,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: true,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\tconst [rowSelection, setRowSelection] = React.useState({});\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"h-96\">\n\t\t\t\t<DataTable\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t{...tableProps}\n\t\t\t\t\tonRowSelectionChange={setRowSelection}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DataTableConditioinSelectionDemo\";\n"
	},
	{
		"name": "DataTableMultiSelectionDemo",
		"code": "import { useEffect, useRef, useState } from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: true,\n\tenableMultiRowSelection: true,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: true,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = useState<Person[]>([]);\n\n\tuseEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\tconst ref = useRef<any>();\n\n\tconst [rowSelection, setRowSelection] = useState({});\n\tconst [activedRowId, setActivedRowId] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"h-96\">\n\t\t\t\t<DataTable\n\t\t\t\t\tref={ref}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t{...tableProps}\n\t\t\t\t\tonRowSelectionChange={setRowSelection}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t}}\n\t\t\t\t\tonRowClick={(e, row) => {\n\t\t\t\t\t\tsetActivedRowId(row.id);\n\t\t\t\t\t}}\n\t\t\t\t\tonRowDoubleClick={(e, row) => {\n\t\t\t\t\t\tconsole.log(\"双击事件触发\", row.id);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"[&&_tr.actived_td]:bg-info [&&_tr.actived_td]:text-info-content\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<output>当前选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n\t\t\t<output>当前激活行: {activedRowId}</output>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableMultiSelectionDemo\";\n"
	},
	{
		"name": "DataTableSelectionDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: true,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: true,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50));\n\t}, []);\n\n\tconst ref = React.useRef<any>();\n\n\tconst [rowSelection, setRowSelection] = React.useState({});\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div className=\"h-96\">\n\t\t\t\t<DataTable\n\t\t\t\t\tref={ref}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t{...tableProps}\n\t\t\t\t\tonRowSelectionChange={setRowSelection}\n\t\t\t\t\tstate={{\n\t\t\t\t\t\trowSelection,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableSelectionDemo\";\n"
	},
	{
		"name": "DataTableTreeDemo",
		"code": "import React from \"react\";\nimport {\n\tDataTable,\n\ttype DataTableProps,\n\ttype ColumnDef,\n} from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t\tsize: 180,\n\t\tmeta: {\n\t\t\texpandable: true,\n\t\t},\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\nconst tableProps: Partial<DataTableProps> = {\n\tenableVirtualized: false,\n\tenablePagination: false,\n\tenableColumnReorder: true,\n\tenableColumnResizing: true,\n\tenableSorting: true,\n\tgetSubRows: (row: any) => row.subRows,\n\tenableGrouping: false,\n\tenableFilters: true,\n\tfilterFromLeafRows: false,\n\tenableHiding: true,\n\tenableRowSelection: false,\n\tenableMultiRowSelection: false,\n\tenableSubRowSelection: false,\n\tenableClickRowSelection: false,\n\tselectAllForAllPages: false,\n\tenableStickyHeader: true,\n\tenableAutoRowNumber: false,\n\tenableExport: true,\n};\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(50, 3, 2));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} {...tableProps} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableTreeDemo\";\n"
	},
	{
		"name": "DataTableVirtualizedDemo",
		"code": "import React from \"react\";\nimport { DataTable, type ColumnDef } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n\t{\n\t\tid: \"ID\",\n\t\theader: \"ID\",\n\t\taccessorKey: \"id\",\n\t},\n\t{\n\t\tid: \"姓名\",\n\t\theader: \"姓名\",\n\t\taccessorKey: \"fullName\",\n\t},\n\t{\n\t\tid: \"年龄\",\n\t\theader: \"年龄\",\n\t\taccessorKey: \"age\",\n\t},\n];\n\nexport default function Demo() {\n\tconst [data, setData] = React.useState<Person[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetData(makePersonData(10000));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"h-96\">\n\t\t\t<DataTable data={data} columns={columns} enableVirtualized />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DataTableVirtualizedDemo\";\n"
	},
	{
		"name": "PickerInputClearableDemo",
		"code": "import { Divider, Switch, TextInput } from \"@rtdui/core\";\nimport {\n\tDatesProvider,\n\tDatePickerInput,\n\tDateInput,\n\tYearPickerInput,\n\tMonthPickerInput,\n\tDateTimePickerInput,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [clearable, setClearable] = useState(true);\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<YearPickerInput\n\t\t\t\t\t\tclearable={clearable}\n\t\t\t\t\t\tlabel=\"YearPickerInput\"\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t\t<MonthPickerInput\n\t\t\t\t\t\tclearable={clearable}\n\t\t\t\t\t\tlabel=\"MonthPickerInput\"\n\t\t\t\t\t\tplaceholder=\"Pick month\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DatePickerInput\n\t\t\t\t\t\tclearable={clearable}\n\t\t\t\t\t\tlabel=\"DatePickerInput\"\n\t\t\t\t\t\tplaceholder=\"Pick date\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DateTimePickerInput\n\t\t\t\t\t\tclearable={clearable}\n\t\t\t\t\t\tlabel=\"DateTimePickerInput\"\n\t\t\t\t\t\tplaceholder=\"Pick date and time\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DateInput\n\t\t\t\t\t\tclearable={clearable}\n\t\t\t\t\t\tlabel=\"DateInput\"\n\t\t\t\t\t\tplaceholder=\"Pick or input date\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Clearable\"\n\t\t\t\t\tchecked={clearable}\n\t\t\t\t\tonChange={setClearable}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"PickerInputClearableDemo\";\n"
	},
	{
		"name": "DatesBasicDemo",
		"code": "import {\n\tDivider,\n\tFloatingSelect,\n\tSlider,\n\tSwitch,\n\tTextInput,\n} from \"@rtdui/core\";\nimport {\n\tDatesProvider,\n\tDatePickerInput,\n\tYearPickerInput,\n\tMonthPickerInput,\n\tDateTimePickerInput,\n\tDateInput,\n\tTimeInput,\n\tTimePicker,\n\tTimePickerInput,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nconst variants = [\"outline\", \"default\", \"ghost\"];\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"circle\"];\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tcolor: \"default\",\n\t\tvariant: \"outline\",\n\t\tsize: \"sm\",\n\t\tradius: \"md\",\n\t\tdisabled: false,\n\t\tlabel: \"Label\",\n\t\twithAsterisk: false,\n\t\tdescription: \"Description\",\n\t\terror: \"\",\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1 flex flex-col gap-4\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Divider label=\"只能选取的输入组件\" />\n\t\t\t\t\t<i>YearPickerInput:</i>\n\t\t\t\t\t<YearPickerInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i>MonthPickerInput:</i>\n\t\t\t\t\t<MonthPickerInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"Pick month\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i>DatePickerInput:</i>\n\t\t\t\t\t<DatePickerInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"Pick date\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i>DateTimePicker:</i>\n\t\t\t\t\t<DateTimePickerInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"Pick date and time\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i>TimePickerInput:</i>\n\t\t\t\t\t<TimePickerInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"pick time\"\n\t\t\t\t\t\tonChange={(val) => console.log(val)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider label=\"允许自由输入的组件\" />\n\t\t\t\t\t<i>DateInput:</i>\n\t\t\t\t\t<DateInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"input or pick date\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i>TimeInput:</i>\n\t\t\t\t\t<TimeInput\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\t\tlabel={state.label}\n\t\t\t\t\t\twithAsterisk={state.withAsterisk}\n\t\t\t\t\t\tdescription={state.description}\n\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\tplaceholder=\"input time\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 p-4\">\n\t\t\t\tBorder color:\n\t\t\t\t<ColorControl\n\t\t\t\t\textraColors={[\"default\"]}\n\t\t\t\t\twithPicker={false}\n\t\t\t\t\tvalue={state.color}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t/>\n\t\t\t\tVariant:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={variants}\n\t\t\t\t\tvalue={state.variant}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, variant: val }))}\n\t\t\t\t/>\n\t\t\t\tSize:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabel={(val) => size[val]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tvalue={size.indexOf(state.size)}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, size: size[val] }))}\n\t\t\t\t/>\n\t\t\t\tRadius:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={5}\n\t\t\t\t\tlabel={(val) => radius[val]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tvalue={radius.indexOf(state.radius)}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, radius: radius[val] }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Label\"\n\t\t\t\t\tradius=\"xs\"\n\t\t\t\t\tvalue={state.label}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, label: e.currentTarget.value }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"With asterisk\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tchecked={state.withAsterisk}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, withAsterisk: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tradius=\"xs\"\n\t\t\t\t\tvalue={state.description}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\tdescription: e.currentTarget.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Error\"\n\t\t\t\t\tradius=\"xs\"\n\t\t\t\t\tvalue={state.error}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\terror: e.currentTarget.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DatesBasicDemo\";\n"
	},
	{
		"name": "DatePickerBasicDemo",
		"code": "import {\n\tDatesProvider,\n\tDatePicker,\n\ttype DatePickerProps,\n\tisSame,\n\tset,\n} from \"@rtdui/dates\";\nimport { zhCN, es } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nconst renderDay: DatePickerProps[\"renderDay\"] = (date) => {\n\tif (isSame(date, new Date(), \"day\")) {\n\t\tconst day = date.getDate();\n\t\treturn (\n\t\t\t<div className=\"relative after:absolute after:bottom-[-6px] after:left-1/2 after:-translate-x-1/2 after:w-1 after:h-1 after:bg-info after:rounded-full\">\n\t\t\t\t{day}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default function Demo() {\n\tconst [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<DatesProvider\n\t\t\t\tsettings={{\n\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\tfirstDayOfWeek: 1,\n\t\t\t\t\tweekendDays: [0, 6],\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tlocale: es\n\t\t\t\t<DatePicker\n\t\t\t\t\tlocale={es}\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\tdefaultLevel: year\n\t\t\t\t<DatePicker\n\t\t\t\t\tdefaultLevel=\"year\"\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\tmaxLevel: year\n\t\t\t\t<DatePicker\n\t\t\t\t\tmaxLevel=\"year\"\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\tfirstDayOfWeek: 0\n\t\t\t\t<DatePicker firstDayOfWeek={0} />\n\t\t\t\thideWeekdays: true\n\t\t\t\t<DatePicker hideWeekdays />\n\t\t\t\tweekendDays: [1,2]\n\t\t\t\t<DatePicker weekendDays={[1, 2]} />\n\t\t\t\tnumberOfColumns: 2\n\t\t\t\t<DatePicker\n\t\t\t\t\tnumberOfColumns={2}\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\tmonthLabelFormat: yyyy MMMM\n\t\t\t\t<br />\n\t\t\t\tmonthsListFormat: MMMM\n\t\t\t\t<DatePicker\n\t\t\t\t\tmonthLabelFormat=\"yyyy MMMM\"\n\t\t\t\t\tmonthsListFormat=\"MMMM\"\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\t自定义今日组件\n\t\t\t\t<DatePicker\n\t\t\t\t\trenderDay={renderDay}\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t\tminDate 和 maxDate 被限制到本月的2-15日\n\t\t\t\t<DatePicker\n\t\t\t\t\tminDate={set(new Date(), { date: 1 })}\n\t\t\t\t\tmaxDate={set(new Date(), { date: 15 })}\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t/>\n\t\t\t</DatesProvider>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DatePickerBasicDemo\";\n"
	},
	{
		"name": "PickersInlineDemo",
		"code": "import { Divider, FloatingSelect, Switch } from \"@rtdui/core\";\nimport {\n\tDatesProvider,\n\tYearPicker,\n\tMonthPicker,\n\tDatePicker,\n\tformat,\n\tDatePickerType,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [allowDeselect, setAllowDeselect] = useState(false);\n\tconst [selectedYear, setSelectedYear] = useState<Date | null>(null);\n\tconst [selectedMonth, setSelectedMonth] = useState<Date | null>(null);\n\tconst [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1 flex flex-col gap-4\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\tfirstDayOfWeek: 1,\n\t\t\t\t\t\tweekendDays: [0, 6],\n\t\t\t\t\t\ttimezone: \"UTC\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Divider label=\"YearPicker\" />\n\t\t\t\t\t<YearPicker\n\t\t\t\t\t\tallowDeselect={allowDeselect}\n\t\t\t\t\t\tvalue={selectedYear}\n\t\t\t\t\t\tonChange={setSelectedYear}\n\t\t\t\t\t/>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t选择的年份: {selectedYear ? format(selectedYear, \"yyyy\") : \"none\"}\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</pre>\n\t\t\t\t\t<Divider label=\"MonthPicker\" />\n\t\t\t\t\t<MonthPicker\n\t\t\t\t\t\tallowDeselect={allowDeselect}\n\t\t\t\t\t\tvalue={selectedMonth}\n\t\t\t\t\t\tonChange={setSelectedMonth}\n\t\t\t\t\t/>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t选择的月份:{\" \"}\n\t\t\t\t\t\t\t{selectedMonth\n\t\t\t\t\t\t\t\t? format(selectedMonth, \"MMMM yyyy\", { locale: zhCN })\n\t\t\t\t\t\t\t\t: \"none\"}\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</pre>\n\t\t\t\t\t<Divider label=\"DatePicker\" />\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tallowDeselect={allowDeselect}\n\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\tonChange={setSelectedDate}\n\t\t\t\t\t/>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t选择的日期:{\" \"}\n\t\t\t\t\t\t\t{selectedDate ? format(selectedDate, \"yyyy-MM-dd\") : \"none\"}\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</pre>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Allow deselect\"\n\t\t\t\t\tchecked={allowDeselect}\n\t\t\t\t\tonChange={setAllowDeselect}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"PickersInlineDemo\";\n"
	},
	{
		"name": "DatesMultipleDemo",
		"code": "import {\n\tDatesProvider,\n\tDatePickerInput,\n\tYearPickerInput,\n\tMonthPickerInput,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<DatesProvider\n\t\t\t\tsettings={{\n\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<YearPickerInput\n\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\tlabel=\"YearPickerInput\"\n\t\t\t\t\tplaceholder=\"Pick year multiple\"\n\t\t\t\t/>\n\t\t\t\t<MonthPickerInput\n\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\tlabel=\"MonthPickerInput\"\n\t\t\t\t\tplaceholder=\"Pick month multiple\"\n\t\t\t\t/>\n\n\t\t\t\t<DatePickerInput\n\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\tlabel=\"DatePickerInput\"\n\t\t\t\t\tplaceholder=\"Pick date multiple\"\n\t\t\t\t/>\n\t\t\t</DatesProvider>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DatesMultipleDemo\";\n"
	},
	{
		"name": "DatesRangeDemo",
		"code": "import {\n\tDatesProvider,\n\tDatePickerInput,\n\tYearPickerInput,\n\tMonthPickerInput,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<DatesProvider\n\t\t\t\tsettings={{\n\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<YearPickerInput\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tlabel=\"YearPickerInput\"\n\t\t\t\t\tplaceholder=\"Pick year range\"\n\t\t\t\t/>\n\t\t\t\t<MonthPickerInput\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tlabel=\"MonthPickerInput\"\n\t\t\t\t\tplaceholder=\"Pick month range\"\n\t\t\t\t/>\n\t\t\t\t<DatePickerInput\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tlabel=\"DatePickerInput\"\n\t\t\t\t\tplaceholder=\"Pick date range\"\n\t\t\t\t/>\n\t\t\t</DatesProvider>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DatesRangeDemo\";\n"
	},
	{
		"name": "DatePickerInputValueFormatDemo",
		"code": "import { Divider, TextInput } from \"@rtdui/core\";\nimport { DatesProvider, DatePickerInput, DateInput } from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [dateFormat, setDateFormat] = useState(\"yyyy年M月d日\");\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DatePickerInput\n\t\t\t\t\t\tvalueFormat={dateFormat}\n\t\t\t\t\t\tlabel=\"DatePickerInput defalut\"\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DatePickerInput\n\t\t\t\t\t\tvalueFormat={dateFormat}\n\t\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\t\tlabel=\"DatePickerInput multiple\"\n\t\t\t\t\t\tplaceholder=\"Pick year multiple\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DatePickerInput\n\t\t\t\t\t\tvalueFormat={dateFormat}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tlabel=\"DatePickerInput range\"\n\t\t\t\t\t\tplaceholder=\"Pick year range\"\n\t\t\t\t\t/>\n\t\t\t\t\t<DateInput\n\t\t\t\t\t\tvalueFormat={dateFormat}\n\t\t\t\t\t\tlabel=\"DateInput\"\n\t\t\t\t\t\tplaceholder=\"Pick year range\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\tdescription=\"date-fns format supported format string\"\n\t\t\t\t\tvalue={dateFormat}\n\t\t\t\t\tonChange={(e) => setDateFormat(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DatePickerInputValueFormatDemo\";\n"
	},
	{
		"name": "DateTimePickerInputValueFormatDemo",
		"code": "import { Divider, TextInput } from \"@rtdui/core\";\nimport { DatesProvider, DateTimePickerInput } from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [dateTimeFormat, setDateTimeFormat] = useState(\"yyyy-MM-dd HH:mm\");\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DateTimePickerInput\n\t\t\t\t\t\tvalueFormat={dateTimeFormat}\n\t\t\t\t\t\tlabel=\"DateTimePickerInput defalut\"\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\tdescription=\"date-fns format supported format string\"\n\t\t\t\t\tvalue={dateTimeFormat}\n\t\t\t\t\tonChange={(e) => setDateTimeFormat(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"DateTimePickerInputValueFormatDemo\";\n"
	},
	{
		"name": "MonthPickerInputValueFormatDemo",
		"code": "import { Divider, TextInput } from \"@rtdui/core\";\nimport { DatesProvider, MonthPickerInput } from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [monthFormat, setMonthFormat] = useState(\"yyyy MMM\");\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<MonthPickerInput\n\t\t\t\t\t\tvalueFormat={monthFormat}\n\t\t\t\t\t\tlabel=\"MonthPickerInput defalut\"\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t\t<MonthPickerInput\n\t\t\t\t\t\tvalueFormat={monthFormat}\n\t\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\t\tlabel=\"MonthPickerInput multiple\"\n\t\t\t\t\t\tplaceholder=\"Pick year multiple\"\n\t\t\t\t\t/>\n\t\t\t\t\t<MonthPickerInput\n\t\t\t\t\t\tvalueFormat={monthFormat}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tlabel=\"MonthPickerInput range\"\n\t\t\t\t\t\tplaceholder=\"Pick year range\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\tdescription=\"date-fns format supported format string\"\n\t\t\t\t\tvalue={monthFormat}\n\t\t\t\t\tonChange={(e) => setMonthFormat(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"YearPickerInputValueFormatDemo\";\n"
	},
	{
		"name": "YearPickerInputValueFormatDemo",
		"code": "import { Divider, TextInput } from \"@rtdui/core\";\nimport { DatesProvider, YearPickerInput } from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [yearFormat, setYearFormat] = useState(\"yyyy\");\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<DatesProvider\n\t\t\t\t\tsettings={{\n\t\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<YearPickerInput\n\t\t\t\t\t\tvalueFormat={yearFormat}\n\t\t\t\t\t\tlabel=\"YearPickerInput defalut\"\n\t\t\t\t\t\tplaceholder=\"Pick year\"\n\t\t\t\t\t/>\n\t\t\t\t\t<YearPickerInput\n\t\t\t\t\t\tvalueFormat={yearFormat}\n\t\t\t\t\t\ttype=\"multiple\"\n\t\t\t\t\t\tlabel=\"YearPickerInput multiple\"\n\t\t\t\t\t\tplaceholder=\"Pick year multiple\"\n\t\t\t\t\t/>\n\t\t\t\t\t<YearPickerInput\n\t\t\t\t\t\tvalueFormat={yearFormat}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tlabel=\"YearPickerInput range\"\n\t\t\t\t\t\tplaceholder=\"Pick year range\"\n\t\t\t\t\t/>\n\t\t\t\t</DatesProvider>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 w-64 p-4 bg-base-100\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\tdescription=\"date-fns format supported format string\"\n\t\t\t\t\tvalue={yearFormat}\n\t\t\t\t\tonChange={(e) => setYearFormat(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"YearPickerInputValueFormatDemo\";\n"
	},
	{
		"name": "TimeWithSecondsDemo",
		"code": "import { Divider } from \"@rtdui/core\";\nimport {\n\tDatesProvider,\n\tDateTimePickerInput,\n\tTimeInput,\n\tTimePickerInput,\n} from \"@rtdui/dates\";\nimport { zhCN } from \"date-fns/locale\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<DatesProvider\n\t\t\t\tsettings={{\n\t\t\t\t\tlocale: zhCN,\n\t\t\t\t\ttimezone: \"Asia/Shanghai\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Divider label=\"default\" />\n\t\t\t\t<DateTimePickerInput\n\t\t\t\t\tlabel=\"DateTimePickerInput\"\n\t\t\t\t\tplaceholder=\"Pick date\"\n\t\t\t\t/>\n\t\t\t\t<TimePickerInput label=\"TimePickerInput\" placeholder=\"pick time\" />\n\t\t\t\t<TimeInput label=\"TimeInput\" placeholder=\"Pick time\" />\n\t\t\t\t<Divider label=\"with seconds\" />\n\t\t\t\t<DateTimePickerInput\n\t\t\t\t\twithSeconds\n\t\t\t\t\tlabel=\"DateTimePickerInput\"\n\t\t\t\t\tplaceholder=\"Pick date\"\n\t\t\t\t/>\n\t\t\t\t<TimePickerInput\n\t\t\t\t\twithSeconds\n\t\t\t\t\tlabel=\"TimePickerInput\"\n\t\t\t\t\tplaceholder=\"pick time\"\n\t\t\t\t/>\n\t\t\t\t<TimeInput withSeconds label=\"TimeInput\" placeholder=\"Pick time\" />\n\t\t\t</DatesProvider>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"TimeWithSecondsDemo\";\n"
	},
	{
		"name": "DialogBasicDemo",
		"code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { dialogs } from \"@rtdui/dialogs\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是提示框标题\",\n\t\t\t\t\t\tcontent: \"这是对话框消息体\",\n\t\t\t\t\t\tmode: \"alert\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开alert框\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是确认框标题\",\n\t\t\t\t\t\tcontent: \"这是对话框消息体\",\n\t\t\t\t\t\tmode: \"confirm\",\n\t\t\t\t\t\tonClose: (result) => result && alert(JSON.stringify(result)),\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开Confirm框\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是输入框标题\",\n\t\t\t\t\t\tcontent: \"请输入姓名\",\n\t\t\t\t\t\tmode: \"prompt\",\n\t\t\t\t\t\tonClose: (result) => result && alert(JSON.stringify(result)),\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开Prompt框\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是对话框标题\",\n\t\t\t\t\t\tcontent: <div>这是对话框消息体</div>,\n\t\t\t\t\t\tfullScreen: true,\n\t\t\t\t\t\tslots: { dialogContent: \"h-[2000px]\", dialogTitle: \"sticky top-0\" },\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开全屏对话框\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DialogBasicDemo\";\n"
	},
	{
		"name": "DialogDirtyCheckDemo",
		"code": "import { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@rtdui/core\";\nimport { dialogs } from \"@rtdui/dialogs\";\n\ninterface DialogViewProps {\n\tdialogId?: string;\n\tonClose?: () => void;\n}\nfunction DialogView(props: DialogViewProps) {\n\tconst { dialogId } = props;\n\tlet initialValues = { myInput1: \"abc\", myInput2: \"xyz\" };\n\tconst [values, setValues] = useState(initialValues);\n\n\tuseEffect(() => {\n\t\tif (JSON.stringify(initialValues) !== JSON.stringify(values)) {\n\t\t\tdialogs.update({\n\t\t\t\tdialogId,\n\t\t\t\tisDirty: true,\n\t\t\t});\n\t\t} else {\n\t\t\tdialogs.update({\n\t\t\t\tdialogId,\n\t\t\t\tisDirty: false,\n\t\t\t});\n\t\t}\n\t}, [values]);\n\n\treturn (\n\t\t<form className=\"flex flex-col gap-4\" onSubmit={(e) => e.preventDefault()}>\n\t\t\t<div className=\"navbar\">\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tdialogs.update({\n\t\t\t\t\t\t\tdialogId,\n\t\t\t\t\t\t\tisDirty: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinitialValues = values;\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t保 存\n\t\t\t\t</Button>\n\t\t\t\t(点击保存后会清除脏状态)\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"修改输入框中的内容,点击关闭时会进行脏数据提醒\"\n\t\t\t\t\tvalue={values.myInput1}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetValues((prev) => ({ ...prev, myInput1: e.target.value }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"修改输入框中的内容,点击关闭时会进行脏数据提醒\"\n\t\t\t\t\tvalue={values.myInput2}\n\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\tsetValues((prev) => ({ ...prev, myInput2: e.target.value }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\tdialogId: \"dirty-check\",\n\t\t\t\t\t\ttitle: \"脏数据检查例子\",\n\t\t\t\t\t\tcontent: <DialogView />,\n\t\t\t\t\t\tfullScreen: true,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开带有脏数据检查功能的对话框\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DialogDirtyCheckDemo\";\n"
	},
	{
		"name": "DialogLocalizationDemo",
		"code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { dialogs } from \"@rtdui/dialogs\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是提示框标题\",\n\t\t\t\t\t\tcontent: \"这是对话框消息体\",\n\t\t\t\t\t\tmode: \"alert\",\n\t\t\t\t\t\tcloseLabel: \"关闭\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开alert框\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是确认框标题\",\n\t\t\t\t\t\tcontent: \"这是对话框消息体\",\n\t\t\t\t\t\tmode: \"confirm\",\n\t\t\t\t\t\tonClose: (result) => result && alert(JSON.stringify(result)),\n\t\t\t\t\t\tcancelLabel: \"取消\",\n\t\t\t\t\t\tconfirmLabel: \"确定\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开Confirm框\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdialogs.show({\n\t\t\t\t\t\ttitle: \"这是输入框标题\",\n\t\t\t\t\t\tcontent: \"请输入姓名\",\n\t\t\t\t\t\tmode: \"prompt\",\n\t\t\t\t\t\tonClose: (result) => result && alert(JSON.stringify(result)),\n\t\t\t\t\t\tcancelLabel: \"取消\",\n\t\t\t\t\t\tconfirmLabel: \"确定\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t打开Prompt框\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DialogLocalizationDemo\";\n"
	},
	{
		"name": "DividerBasicDemo",
		"code": "import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Divider, FloatingSelect, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nconst sizes = [\"xs\", \"sm\", \"md\", \"lg\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tshowLabel: true,\n\t\tlabelPostion: \"center\",\n\t\tdirection: \"vertical\",\n\t\tcolor: \"default\",\n\t});\n\n\tconst code = `\n  <Divider${state.direction && state.direction !== \"vertical\" ? ` direction=\"${state.direction}\"` : \"\"}${state.color !== \"default\" ? ` color=\"${state.color}\"` : \"\"}${state.showLabel ? ' label=\"Label\"' : \"\"}${state.showLabel && state.labelPostion !== \"center\" ? ` labelPostion=\"${state.labelPostion}\"` : \"\"} />\n`;\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(\"flex-1 h-96\", {\n\t\t\t\t\t\tflex: state.direction === \"horizontal\",\n\t\t\t\t\t\t\"flex flex-col\": state.direction === \"vertical\",\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex-1 bg-base-200\" />\n\t\t\t\t\t<Divider\n\t\t\t\t\t\tdirection={state.direction as any}\n\t\t\t\t\t\tlabel={state.showLabel ? \"Label\" : undefined}\n\t\t\t\t\t\tlabelPostion={state.labelPostion as any}\n\t\t\t\t\t\tcolor={(state.color !== \"default\" ? state.color : undefined) as any}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex-1 bg-base-200\" />\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 w-56 p-4\">\n\t\t\t\t\tColor:\n\t\t\t\t\t<ColorControl\n\t\t\t\t\t\twithPicker={false}\n\t\t\t\t\t\textraColors={[\"default\"]}\n\t\t\t\t\t\tvalue={state.color}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\tDirection:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tdata={[\"vertical\", \"horizontal\"]}\n\t\t\t\t\t\tvalue={state.direction}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, direction: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tlabel=\"Show label\"\n\t\t\t\t\t\tchecked={state.showLabel}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, showLabel: val }))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\tLabel position:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tdisabled={!state.showLabel}\n\t\t\t\t\t\tdata={[\"start\", \"center\", \"end\"]}\n\t\t\t\t\t\tvalue={state.labelPostion}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\tlabelPostion: val,\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight language=\"tsx\" code={code} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DividerBasicDemo\";\n"
	},
	{
		"name": "DrawerBasicDemo",
		"code": "import React from \"react\";\nimport { Button, Drawer } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [leftDrawerOpen, setLeftDrawerOpen] = React.useState(false);\n\tconst [rightDrawerOpen, setRightDrawerOpen] = React.useState(false);\n\n\treturn (\n\t\t<div className=\"flex gap-4\">\n\t\t\t<Button onClick={() => setLeftDrawerOpen(!leftDrawerOpen)}>\n\t\t\t\t打开左抽屉\n\t\t\t</Button>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={leftDrawerOpen}\n\t\t\t\tonChange={(open) => setLeftDrawerOpen(open)}\n\t\t\t>\n\t\t\t\t<div className=\"w-80 h-full p-4 bg-base-200\">左抽屉</div>\n\t\t\t</Drawer>\n\n\t\t\t<Button onClick={() => setRightDrawerOpen(!rightDrawerOpen)}>\n\t\t\t\t打开右抽屉\n\t\t\t</Button>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"right\"\n\t\t\t\topen={rightDrawerOpen}\n\t\t\t\tonChange={(open) => setRightDrawerOpen(open)}\n\t\t\t>\n\t\t\t\t<div className=\"w-80 h-full p-4 bg-base-200\">右抽屉</div>\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DrawerBasicDemo\";\n"
	},
	{
		"name": "DrawerDisabledClickOutsideCloseDemo",
		"code": "import React from \"react\";\nimport { Button, CloseButton, Drawer } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [drawerOpen, setDrawerOpen] = React.useState(false);\n\n\treturn (\n\t\t<div id=\"my-drawer\" className=\"flex gap-4 relative h-56 overflow-hidden\">\n\t\t\t<Button onClick={() => setDrawerOpen(true)}>打开抽屉</Button>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"right\"\n\t\t\t\tclickOutsideClose={false}\n\t\t\t\topen={drawerOpen}\n\t\t\t\tonChange={(open) => setDrawerOpen(open)}\n\t\t\t>\n\t\t\t\t<div className=\"w-64 h-full flex flex-col gap-4 p-4 bg-base-200\">\n\t\t\t\t\t<div className=\"flex justify-end\">\n\t\t\t\t\t\t<CloseButton size=\"xs\" onClick={() => setDrawerOpen(false)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex-1\">点击幕布不会关闭抽屉</div>\n\t\t\t\t\t<div className=\"flex justify-end\">\n\t\t\t\t\t\t<Button onClick={() => setDrawerOpen(false)}>关闭</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DrawerDisabledClickOutsideCloseDemo\";\n"
	},
	{
		"name": "DrawerTargetDemo",
		"code": "import React from \"react\";\nimport { Button, Drawer } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [leftDrawerOpen, setLeftDrawerOpen] = React.useState(false);\n\tconst [rightDrawerOpen, setRightDrawerOpen] = React.useState(false);\n\n\treturn (\n\t\t<div id=\"my-drawer\" className=\"flex gap-4 relative h-56 overflow-hidden\">\n\t\t\t<Button onClick={() => setLeftDrawerOpen(!leftDrawerOpen)}>\n\t\t\t\t打开左抽屉\n\t\t\t</Button>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"left\"\n\t\t\t\ttarget=\"#my-drawer\"\n\t\t\t\topen={leftDrawerOpen}\n\t\t\t\tonChange={(open) => setLeftDrawerOpen(open)}\n\t\t\t>\n\t\t\t\t<div className=\"w-56 h-full p-4 bg-base-200\">左抽屉</div>\n\t\t\t</Drawer>\n\t\t\t<Button onClick={() => setRightDrawerOpen(!rightDrawerOpen)}>\n\t\t\t\t打开右抽屉\n\t\t\t</Button>\n\t\t\t<Drawer\n\t\t\t\tanchor=\"right\"\n\t\t\t\ttarget=\"#my-drawer\"\n\t\t\t\topen={rightDrawerOpen}\n\t\t\t\tonChange={(open) => setRightDrawerOpen(open)}\n\t\t\t>\n\t\t\t\t<div className=\"w-56 h-full p-4 bg-base-200\">右抽屉</div>\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"DrawerTargetDemo\";\n"
	},
	{
		"name": "EditorBasicDemo",
		"code": "import { RichTextEditor } from \"@rtdui/editor\";\nimport { Button } from \"@rtdui/core\";\nimport React from \"react\";\n\nexport default function Demo() {\n\tconst ref = React.useRef<any>(null!);\n\tconst refTarget = React.useRef<any>(null!);\n\n\tconst handleBtnClick = () =>\n\t\trefTarget.current.setContent(ref.current.getJSON());\n\n\treturn (\n\t\t<div>\n\t\t\t<RichTextEditor\n\t\t\t\tref={ref}\n\t\t\t\tuploadImageUrl=\"/kv/upload\"\n\t\t\t\tclassName=\"border border-base-200 rounded-box bg-base-100 overflow-hidden\"\n\t\t\t\tslots={{ toolbar: \"border-b\" }}\n\t\t\t/>\n\t\t\t<div className=\"my-4 flex items-center gap-2\">\n\t\t\t\t<Button color=\"primary\" onClick={handleBtnClick}>\n\t\t\t\t\t保存JSON\n\t\t\t\t</Button>\n\t\t\t\t<div className=\"bg-base-200 px-4\">\n\t\t\t\t\t点击保存按钮会将上面编辑器的内容保存为JSON,并且被加载到下面的只读编辑器中.\n\t\t\t\t\t<br />\n\t\t\t\t\t这模拟了编辑、保存、阅览的过程\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<RichTextEditor\n\t\t\t\tref={refTarget}\n\t\t\t\teditable={false}\n\t\t\t\tclassName=\"border border-base-200 rounded-box bg-base-100 overflow-hidden\"\n\t\t\t\tslots={{ toolbar: \"border-b\" }}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"EditorBasicDemo\";\n"
	},
	{
		"name": "FloatingSelectBasicDemo",
		"code": "import { Divider, FloatingSelect, Slider, Switch } from \"@rtdui/core\";\nimport { useState } from \"react\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\"];\n\nexport default function Demo() {\n\tconst data = [\"React\", \"Vue\", \"Angular\"];\n\tconst [state, setState] = useState({\n\t\tcolor: \"\",\n\t\torientation: \"horizontal\",\n\t\tfullWidth: false,\n\t\twithItemsSeparator: true,\n\t\tsize: \"sm\",\n\t\tradius: \"sm\",\n\t\tdisabled: false,\n\t\treadOnly: false,\n\t\ttransitionDuration: 200,\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={data}\n\t\t\t\t\tcolor={state.color !== \"\" ? state.color : undefined}\n\t\t\t\t\torientation={state.orientation as any}\n\t\t\t\t\tfullWidth={state.fullWidth}\n\t\t\t\t\twithItemsSeparator={state.withItemsSeparator}\n\t\t\t\t\tsize={state.size as any}\n\t\t\t\t\tradius={state.radius as any}\n\t\t\t\t\tdisabled={state.disabled}\n\t\t\t\t\treadOnly={state.readOnly}\n\t\t\t\t\ttransitionDuration={state.transitionDuration}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 p-4 w-72\">\n\t\t\t\tColor:\n\t\t\t\t<ColorControl\n\t\t\t\t\tvalue={state.color}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t/>\n\t\t\t\tOrientation:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"horizontal\", \"vertical\"]}\n\t\t\t\t\tvalue={state.orientation}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, orientation: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tTransition duration:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={9}\n\t\t\t\t\tvalue={state.transitionDuration / 100}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, transitionDuration: val * 100 }))\n\t\t\t\t\t}\n\t\t\t\t\tlabel={(v) => `${state.transitionDuration} ms`}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Full width:\"\n\t\t\t\t\tchecked={state.fullWidth}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, fullWidth: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Width items separator:\"\n\t\t\t\t\tchecked={state.withItemsSeparator}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, withItemsSeparator: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tSize:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={5}\n\t\t\t\t\tvalue={size.indexOf(state.size) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: size[val - 1] }))\n\t\t\t\t\t}\n\t\t\t\t\tlabel={(v) => size[v - 1]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t/>\n\t\t\t\tRadius:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tvalue={radius.indexOf(state.radius) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, radius: radius[val - 1] }))\n\t\t\t\t\t}\n\t\t\t\t\tlabel={(v) => radius[v - 1]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"ReadOnly\"\n\t\t\t\t\tchecked={state.readOnly}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, readOnly: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"FloatingSelectBasicDemo\";\n"
	},
	{
		"name": "FloatingSelectLabelDemo",
		"code": "import { FloatingSelect } from \"@rtdui/core\";\nimport { IconCode, IconExternalLink, IconEye } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\tconst data = [\n\t\t{\n\t\t\tvalue: \"preview\",\n\t\t\tlabel: (\n\t\t\t\t<div className=\"inline-flex items-center gap-0.5\">\n\t\t\t\t\t<IconEye size={16} />\n\t\t\t\t\t<span>Preview</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tvalue: \"code\",\n\t\t\tlabel: (\n\t\t\t\t<div className=\"inline-flex items-center gap-0.5\">\n\t\t\t\t\t<IconCode size={16} />\n\t\t\t\t\t<span>Code</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tvalue: \"export\",\n\t\t\tlabel: (\n\t\t\t\t<div className=\"inline-flex items-center gap-0.5\">\n\t\t\t\t\t<IconExternalLink size={16} />\n\t\t\t\t\t<span>Export</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t];\n\treturn (\n\t\t<div className=\"flex justify-center\">\n\t\t\t<FloatingSelect data={data} defaultValue=\"preview\" />\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"FloatingSelectLabelDemo\";\n"
	},
	{
		"name": "GridAutoDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Col span={2}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span=\"auto\">\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={6}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridAutoDemo\";\n"
	},
	{
		"name": "GridBasicDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Col span={2}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={6}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridBasicDemo\";\n"
	},
	{
		"name": "GridGrowDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid grow>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">5</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridGrowDemo\";\n"
	},
	{
		"name": "GridOffsetDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Col span={3}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={3}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={3} offset={3}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridOffsetDemo\";\n"
	},
	{
		"name": "GridResponsiveGutterDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid gutter={{ base: \"4px\", md: \"16px\", lg: \"48px\" }}>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridResponsiveGutterDemo\";\n"
	},
	{
		"name": "GridResponsiveSpanDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridResponsiveSpanDemo\";\n"
	},
	{
		"name": "GridWrapDemo",
		"code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n\t\t\t</Grid.Col>\n\t\t\t<Grid.Col span={4}>\n\t\t\t\t<div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n\t\t\t</Grid.Col>\n\t\t</Grid>\n\t);\n}\nDemo.displayName = \"GridWrapDemo\";\n"
	},
	{
		"name": "IndicatorAnimationDemo",
		"code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Indicator animation>\n\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\tContent\n\t\t\t</div>\n\t\t</Indicator>\n\t);\n}\nDemo.displayName = \"IndicatorAnimationDemo\";\n"
	},
	{
		"name": "IndicatorColorDemo",
		"code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Indicator badgeColor=\"primary\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"secondary\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"accent\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"info\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"success\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"warning\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"error\">\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"IndicatorColorDemo\";\n"
	},
	{
		"name": "IndicatorColorWithAnimationDemo",
		"code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Indicator badgeColor=\"primary\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"secondary\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"accent\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"info\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"success\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"warning\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t\t<Indicator badgeColor=\"error\" animation>\n\t\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\t\tContent\n\t\t\t\t</div>\n\t\t\t</Indicator>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"IndicatorColorWithAnimationDemo\";\n"
	},
	{
		"name": "IndicatorDotDemo",
		"code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Indicator>\n\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\tContent\n\t\t\t</div>\n\t\t</Indicator>\n\t);\n}\nDemo.displayName = \"IndicatorDotDemo\";\n"
	},
	{
		"name": "IndicatorTextDemo",
		"code": "import React from \"react\";\nimport { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Indicator badgeText=\"New\">\n\t\t\t<div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n\t\t\t\tContent\n\t\t\t</div>\n\t\t</Indicator>\n\t);\n}\nDemo.displayName = \"IndicatorTextDemo\";\n"
	},
	{
		"name": "InputAsDemo",
		"code": "import { Input } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\tas 为 button\n\t\t\t<Input as=\"button\" className=\"w-56\" />\n\t\t\tas 为 select\n\t\t\t<Input as=\"select\" pointer className=\"w-56\">\n\t\t\t\t<option value=\"1\">1</option>\n\t\t\t\t<option value=\"2\">2</option>\n\t\t\t</Input>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputAsDemo\";\n"
	},
	{
		"name": "InputBaseBasicDemo",
		"code": "import { InputBase } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<InputBase\n\t\t\t\tplaceholder=\"['label', 'description', 'input', 'error']\"\n\t\t\t\tlabel=\"默认顺序\"\n\t\t\t\tdescription=\"description\"\n\t\t\t\terror=\"error\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<InputBase\n\t\t\t\tinputWrapperOrder={[\"label\", \"input\", \"description\", \"error\"]}\n\t\t\t\tplaceholder=\"['label', 'input', 'description', 'error']\"\n\t\t\t\tlabel=\"自定义顺序\"\n\t\t\t\tdescription=\"description\"\n\t\t\t\terror=\"error\"\n\t\t\t\trequired\n\t\t\t/>\n\n\t\t\t<InputBase\n\t\t\t\tinputWrapperOrder={[\"label\", \"input\", \"error\"]}\n\t\t\t\tplaceholder=\"['label', 'input', 'error']\"\n\t\t\t\tlabel=\"只指定的部分\"\n\t\t\t\tdescription=\"description\"\n\t\t\t\terror=\"error\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputBaseBasicDemo\";\n"
	},
	{
		"name": "InputBasicDemo",
		"code": "import { Divider, FloatingSelect, Input, Slider, Switch } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst variant = [\"outline\", \"default\", \"ghost\"];\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"circle\"];\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tvariant: \"outline\",\n\t\tsize: \"sm\",\n\t\tradius: \"md\",\n\t\tdisabled: false,\n\t\tpointer: false,\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<Input\n\t\t\t\tclassName=\"flex-1\"\n\t\t\t\tplaceholder=\"input\"\n\t\t\t\tvariant={state.variant as any}\n\t\t\t\tsize={state.size as any}\n\t\t\t\tradius={state.radius}\n\t\t\t\tpointer={state.pointer}\n\t\t\t\tdisabled={state.disabled}\n\t\t\t/>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-6 w-56\">\n\t\t\t\tVariant:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={variant}\n\t\t\t\t\tvalue={state.variant}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, variant: val }))}\n\t\t\t\t/>\n\t\t\t\tSize:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={5}\n\t\t\t\t\tlabel={(val) => size[val - 1]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tvalue={size.indexOf(state.size) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, size: size[val - 1] }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tRadius:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={6}\n\t\t\t\t\tlabel={(val) => radius[val - 1]}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tvalue={radius.indexOf(state.radius) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, radius: radius[val - 1] }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Show pointer\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tchecked={state.pointer}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, pointer: val }))}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputBasicDemo\";\n"
	},
	{
		"name": "InputCustomDemo",
		"code": "import { Input } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"bg-base-100 p-4\">\n\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t<Input.Label required>label</Input.Label>\n\t\t\t\t<Input as=\"button\" className=\"w-64\" slots={{ input: \"text-left\" }}>\n\t\t\t\t\t<Input.Placeholder>Placeholder</Input.Placeholder>\n\t\t\t\t</Input>\n\t\t\t</div>\n\t\t\t<Input.Description>description</Input.Description>\n\t\t\t<Input.Error>error</Input.Error>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputCustomDemo\";\n"
	},
	{
		"name": "InputErrorDemo",
		"code": "import { Input } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Input className=\"w-56\" placeholder=\"error为true布尔值\" error />\n\t\t\t<Input className=\"w-56\" placeholder=\"error为字符串\" error=\"error\" />\n\t\t\t<Input\n\t\t\t\tclassName=\"w-56\"\n\t\t\t\tplaceholder=\"error为React元素\"\n\t\t\t\terror={<span className=\"text-red-700\">Error</span>}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputErrorDemo\";\n"
	},
	{
		"name": "InputSectionsDemo",
		"code": "import { CloseButton, Input } from \"@rtdui/core\";\nimport { IconAt } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Input leftSection={<IconAt className=\"stroke-gray-400\" size={18} />} />\n\t\t\t<Input\n\t\t\t\trightSection={<CloseButton size=\"xs\" />}\n\t\t\t\trightSectionPointerEvents=\"auto\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"InputSectionsDemo\";\n"
	},
	{
		"name": "JoinGroupButtonsDemo",
		"code": "import { JoinGroup, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<JoinGroup>\n\t\t\t<Button className=\"join-item\">a</Button>\n\t\t\t<Button className=\"join-item\">b</Button>\n\t\t\t<Button className=\"join-item\">c</Button>\n\t\t</JoinGroup>\n\t);\n}\nDemo.displayName = \"JoinGroupButtonsDemo\";\n"
	},
	{
		"name": "JoinGroupInputsDemo",
		"code": "import React from \"react\";\nimport { JoinGroup, Button, TextInput, Select, Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<JoinGroup>\n\t\t\t<TextInput\n\t\t\t\tslots={{\n\t\t\t\t\tinput:\n\t\t\t\t\t\t\"join-item focus:outline-offset-[-1px] focus:outline-1 focus:outline-info\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<TextInput\n\t\t\t\tslots={{\n\t\t\t\t\tinput:\n\t\t\t\t\t\t\"join-item focus:outline-offset-[-1px] focus:outline-1 focus:outline-info [&]:w-56\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Indicator badgeText=\"new\">\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\toutline\n\t\t\t\t\tclassName=\"join-item [--tw-border-opacity:.2] border-base-content bg-base-100\"\n\t\t\t\t>\n\t\t\t\t\tsearch\n\t\t\t\t</Button>\n\t\t\t</Indicator>\n\t\t</JoinGroup>\n\t);\n}\nDemo.displayName = \"JoinGroupInputsDemo\";\n"
	},
	{
		"name": "JsonInputBasicDemo",
		"code": "import React from \"react\";\nimport { JsonInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <JsonInput placeholder=\"输入JSON字符串\" />;\n}\nDemo.displayName = \"JsonInputBasicDemo\";\n"
	},
	{
		"name": "KbdCharacterDemo",
		"code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center\">\n\t\t\t<Kbd>A</Kbd>\n\t\t\t<Kbd>B</Kbd>\n\t\t\t<Kbd>C</Kbd>\n\t\t\t<Kbd>D</Kbd>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"KbdCharacterDemo\";\n"
	},
	{
		"name": "KbdCompositeDemo",
		"code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<div>\n\t\t\t\t<Kbd>ctrl</Kbd>+<Kbd>shift</Kbd>+<Kbd>del</Kbd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Kbd size=\"xs\">ctrl</Kbd>+<Kbd size=\"xs\">shift</Kbd>+\n\t\t\t\t<Kbd size=\"xs\">del</Kbd>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"KbdCompositeDemo\";\n"
	},
	{
		"name": "KbdSizeDemo",
		"code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center\">\n\t\t\t<Kbd size=\"lg\">Shift</Kbd>\n\t\t\t<Kbd size=\"md\">Shift</Kbd>\n\t\t\t<Kbd size=\"sm\">Shift</Kbd>\n\t\t\t<Kbd size=\"xs\">Shift</Kbd>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"KbdSizeDemo\";\n"
	},
	{
		"name": "KbdSymbolDemo",
		"code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center\">\n\t\t\t<Kbd>⌘</Kbd>\n\t\t\t<Kbd>⌥</Kbd>\n\t\t\t<Kbd>⇧</Kbd>\n\t\t\t<Kbd>⌃</Kbd>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"KbdSymbolDemo\";\n"
	},
	{
		"name": "LinkBasicDemo",
		"code": "import React from \"react\";\nimport { Link } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center\">\n\t\t\t<Link href=\"/\">go</Link>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"LinkBasicDemo\";\n"
	},
	{
		"name": "LinkPolymorphicDemo",
		"code": "import { Link as RouterLink, NavLink } from \"react-router\";\nimport { Link } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-4 items-center\">\n\t\t\t<Link as=\"a\" href=\"/\">\n\t\t\t\tnative anchor\n\t\t\t</Link>\n\t\t\t<Link as={RouterLink} to=\"/\">\n\t\t\t\treact-router Link\n\t\t\t</Link>\n\t\t\t<Link as={NavLink} to=\"/components/link\">\n\t\t\t\treact-router NavLink\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"LinkPolymorphicDemo\";\n"
	},
	{
		"name": "LoadingBallDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" />\n\t\t\t\t<Loading size=\"md\" variant=\"ball\" />\n\t\t\t\t<Loading size=\"sm\" variant=\"ball\" />\n\t\t\t\t<Loading size=\"xs\" variant=\"ball\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ball\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingBallDemo\";\n"
	},
	{
		"name": "LoadingBarsDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" />\n\t\t\t\t<Loading size=\"md\" variant=\"bars\" />\n\t\t\t\t<Loading size=\"sm\" variant=\"bars\" />\n\t\t\t\t<Loading size=\"xs\" variant=\"bars\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"bars\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingBarsDemo\";\n"
	},
	{
		"name": "LoadingDotsDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" />\n\t\t\t\t<Loading size=\"md\" variant=\"dots\" />\n\t\t\t\t<Loading size=\"sm\" variant=\"dots\" />\n\t\t\t\t<Loading size=\"xs\" variant=\"dots\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"dots\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingDotsDemo\";\n"
	},
	{
		"name": "LoadingInfinityDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" />\n\t\t\t\t<Loading size=\"md\" variant=\"infinity\" />\n\t\t\t\t<Loading size=\"sm\" variant=\"infinity\" />\n\t\t\t\t<Loading size=\"xs\" variant=\"infinity\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"infinity\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingInfinityDemo\";\n"
	},
	{
		"name": "LoadingRingDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" />\n\t\t\t\t<Loading size=\"md\" variant=\"ring\" />\n\t\t\t\t<Loading size=\"sm\" variant=\"ring\" />\n\t\t\t\t<Loading size=\"xs\" variant=\"ring\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" variant=\"ring\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingRingDemo\";\n"
	},
	{
		"name": "LoadingSpinnerDemo",
		"code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" />\n\t\t\t\t<Loading size=\"md\" />\n\t\t\t\t<Loading size=\"sm\" />\n\t\t\t\t<Loading size=\"xs\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Loading size=\"lg\" color=\"primary\" />\n\t\t\t\t<Loading size=\"lg\" color=\"secondary\" />\n\t\t\t\t<Loading size=\"lg\" color=\"accent\" />\n\t\t\t\t<Loading size=\"lg\" color=\"info\" />\n\t\t\t\t<Loading size=\"lg\" color=\"success\" />\n\t\t\t\t<Loading size=\"lg\" color=\"warning\" />\n\t\t\t\t<Loading size=\"lg\" color=\"error\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"LoadingSpinnerDemo\";\n"
	},
	{
		"name": "ModalBasicDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\treturn (\n\t\t<>\n\t\t\t<Modal opened={opened} onClose={close} title=\"Title\">\n\t\t\t\tModal, press escape or click on overlay or click close button to close\n\t\t\t</Modal>\n\n\t\t\t<Button color=\"primary\" onClick={open}>\n\t\t\t\tOpen modal\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalBasicDemo\";\n"
	},
	{
		"name": "ModalCenteredDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\treturn (\n\t\t<>\n\t\t\t<Modal opened={opened} onClose={close} title=\"Title\" centered>\n\t\t\t\tModal, press escape or click on overlay or click close button to close\n\t\t\t</Modal>\n\n\t\t\t<Button color=\"primary\" onClick={open}>\n\t\t\t\tOpen modal\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalCenterDemo\";\n"
	},
	{
		"name": "ModalContentScrollDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\n\tconst content = Array(100)\n\t\t.fill(0)\n\t\t.map((_, index) => <p key={index}>Modal with scroll</p>);\n\n\treturn (\n\t\t<>\n\t\t\t<Modal opened={opened} onClose={close} title=\"Title\">\n\t\t\t\t{content}\n\t\t\t</Modal>\n\n\t\t\t<Button color=\"primary\" onClick={open}>\n\t\t\t\tOpen modal\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalContentScrollDemo\";\n"
	},
	{
		"name": "ModalFormDemo",
		"code": "import { Button, Checkbox, Modal, TextInput } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\tconst [fullScreen, setFullScreen] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\topened={opened}\n\t\t\t\tonClose={close}\n\t\t\t\ttitle=\"Register\"\n\t\t\t\tfullScreen={fullScreen}\n\t\t\t>\n\t\t\t\t<form className=\"flex flex-col gap-4 p-2\">\n\t\t\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\tplaceholder=\"your first name\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\tplaceholder=\"your last name\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TextInput label=\"Email\" placeholder=\"your email\" required />\n\t\t\t\t\t<TextInput label=\"Password\" placeholder=\"password\" required />\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\tplaceholder=\"confirm password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tlabel=\"I agree to sell my privacy to this corporation\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex justify-end\">\n\t\t\t\t\t\t<Button color=\"primary\" defaultChecked>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tsetFullScreen(false);\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tOpen modal\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tsetFullScreen(true);\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tOpen modal in full screen\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalBasicDemo\";\n"
	},
	{
		"name": "ModalFullScreenDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\n\tconst content = Array(100)\n\t\t.fill(0)\n\t\t.map((_, index) => <p key={index}>Modal with scroll</p>);\n\n\treturn (\n\t\t<>\n\t\t\t<Modal opened={opened} onClose={close} fullScreen title=\"Title\">\n\t\t\t\t{content}\n\t\t\t</Modal>\n\n\t\t\t<Button color=\"primary\" onClick={open}>\n\t\t\t\tOpen modal\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalFullScreenDemo\";\n"
	},
	{
		"name": "ModalNoHeaderDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\treturn (\n\t\t<>\n\t\t\t<Modal opened={opened} onClose={close} withCloseButton={false}>\n\t\t\t\tModal without header, press escape or click on overlay to close\n\t\t\t</Modal>\n\n\t\t\t<Button color=\"primary\" onClick={open}>\n\t\t\t\tOpen modal\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalNoHeaderDemo\";\n"
	},
	{
		"name": "ModalSizeDemo",
		"code": "import { Button, Modal } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\nimport { useState } from \"react\";\n\nexport default function Demo() {\n\tconst [opened, { open, close }] = useDisclosure(false);\n\tconst [size, setSize] = useState(\"xs\");\n\treturn (\n\t\t<>\n\t\t\t<Modal size={size} opened={opened} onClose={close} title=\"Title\">\n\t\t\t\tModal, press escape or click on overlay or click close button to close\n\t\t\t</Modal>\n\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"xs\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\txs\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"sm\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tsm\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"md\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tmd\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"lg\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tlg\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"xl\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\txl\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"70%\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t70%\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"100%\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t100%\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSize(\"auto\");\n\t\t\t\t\t\topen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tauto\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nDemo.displayName = \"ModalSizeDemo\";\n"
	},
	{
		"name": "MultiSelectBasicDemo",
		"code": "import { Divider, FloatingSelect, MultiSelect, Slider } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst fruits = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Feijoa\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Leeks\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Okra\",\n\t\"Papayas\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\n\nconst maxSelectdValues = [1, 2, 3, Number.POSITIVE_INFINITY];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tclearable: false,\n\t\tsearchable: false,\n\t\twithCheckIcon: true,\n\t\tcheckIconPosition: \"left\",\n\t\tmaxValues: Number.POSITIVE_INFINITY,\n\t\thidePickedOptions: false,\n\t});\n\treturn (\n\t\t<div className=\"flex gap-4\">\n\t\t\t<MultiSelect\n\t\t\t\tdata={fruits}\n\t\t\t\tonChange={(val: any) => console.log(\"select多选:\", val)}\n\t\t\t\tclassName=\"flex-1\"\n\t\t\t\tclearable={state.clearable}\n\t\t\t\tsearchable={state.searchable}\n\t\t\t\tplaceholder={state.searchable ? \"Search\" : undefined}\n\t\t\t\twithCheckIcon={state.withCheckIcon}\n\t\t\t\tcheckIconPosition={state.checkIconPosition as any}\n\t\t\t\tmaxValues={state.maxValues}\n\t\t\t\thidePickedOptions={state.hidePickedOptions}\n\t\t\t/>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-2 bg-base-100 p-4 w-56\">\n\t\t\t\tClearable:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"true\", \"false\"]}\n\t\t\t\t\tvalue={state.clearable.toString()}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, clearable: val === \"true\" }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tSearchable:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"true\", \"false\"]}\n\t\t\t\t\tvalue={state.searchable.toString()}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, searchable: val === \"true\" }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tWith checked icon:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"true\", \"false\"]}\n\t\t\t\t\tvalue={state.withCheckIcon.toString()}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, withCheckIcon: val === \"true\" }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tChecked icon position:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdisabled={!state.withCheckIcon}\n\t\t\t\t\tdata={[\"left\", \"right\"]}\n\t\t\t\t\tvalue={state.checkIconPosition}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, checkIconPosition: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tHide picked options:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"true\", \"false\"]}\n\t\t\t\t\tvalue={state.hidePickedOptions.toString()}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, hidePickedOptions: val === \"true\" }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tMax selected values:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tlabel={(v) => maxSelectdValues[v - 1]}\n\t\t\t\t\tclassName=\"mt-6\"\n\t\t\t\t\tvalue={maxSelectdValues.indexOf(state.maxValues) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({\n\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\tmaxValues: maxSelectdValues[val - 1],\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"MultiSelectBasicDemo\";\n"
	},
	{
		"name": "NativeSelectChildrenDemo",
		"code": "import { NativeSelect } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<NativeSelect label=\"With children options\">\n\t\t\t<optgroup label=\"Frontend libraries\">\n\t\t\t\t<option value=\"react\">React</option>\n\t\t\t\t<option value=\"angular\">Angular</option>\n\t\t\t\t<option value=\"vue\" disabled>\n\t\t\t\t\tVue\n\t\t\t\t</option>\n\t\t\t</optgroup>\n\n\t\t\t<optgroup label=\"Backend libraries\">\n\t\t\t\t<option value=\"express\">Express</option>\n\t\t\t\t<option value=\"koa\">Koa</option>\n\t\t\t\t<option value=\"django\">Django</option>\n\t\t\t</optgroup>\n\t\t</NativeSelect>\n\t);\n}\n\nDemo.displayName = \"NativeSelectChildrenDemo\";\n"
	},
	{
		"name": "NativeSelectDataDemo",
		"code": "import { NativeSelect } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<NativeSelect\n\t\t\tlabel=\"with data prop\"\n\t\t\tdata={[\n\t\t\t\t{\n\t\t\t\t\tgroup: \"Frontend libraries\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{ label: \"React\", value: \"react\" },\n\t\t\t\t\t\t{ label: \"Angular\", value: \"angular\" },\n\t\t\t\t\t\t{ label: \"Vue\", value: \"vue\", disabled: true },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroup: \"Backend libraries\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{ label: \"Express\", value: \"express\" },\n\t\t\t\t\t\t{ label: \"Koa\", value: \"koa\" },\n\t\t\t\t\t\t{ label: \"Django\", value: \"django\" },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t]}\n\t\t/>\n\t);\n}\nDemo.displayName = \"NativeSelectDataDemo\";\n"
	},
	{
		"name": "NotificationBasicDemo",
		"code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { IconX, IconCheck } from \"@tabler/icons-react\";\nimport { notifications } from \"@rtdui/notifications\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnotifications.show({\n\t\t\t\t\t\ttitle: \"这是通知标题\",\n\t\t\t\t\t\tcontent: \"这是通知消息体\",\n\t\t\t\t\t\tautoClose: false,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t禁用自动关闭\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnotifications.show({\n\t\t\t\t\t\ttitle: \"这是通知标题\",\n\t\t\t\t\t\tcontent: \"这是通知消息体\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t显示通知(无图标)\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnotifications.show({\n\t\t\t\t\t\ttitle: \"这是通知标题\",\n\t\t\t\t\t\tcontent: \"这是通知消息体\",\n\t\t\t\t\t\ticon: <IconX size=\"20\" />,\n\t\t\t\t\t\tcolor: \"error\",\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t显示通知\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnotifications.show({\n\t\t\t\t\t\tid: \"my-test-notifications-id\",\n\t\t\t\t\t\tcontent: \"正在处理中...\",\n\t\t\t\t\t\tloading: true,\n\t\t\t\t\t\tautoClose: false,\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tnotifications.update({\n\t\t\t\t\t\t\tid: \"my-test-notifications-id\",\n\t\t\t\t\t\t\tcontent: \"已处理成功\",\n\t\t\t\t\t\t\tcolor: \"success\",\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\ticon: <IconCheck size=\"20\" />,\n\t\t\t\t\t\t\tautoClose: 4000,\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 3000);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t显示通知(loading+更新)\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"NotificationBasicDemo\";\n"
	},
	{
		"name": "NumberInputBasicDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <NumberInput placeholder=\"可以输入任意数字\" />;\n}\nDemo.displayName = \"NumberInputBasicDemo\";\n"
	},
	{
		"name": "NumberInputCustomDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<NumberInput\n\t\t\tplaceholder=\"请输入支付金额(无法输入负数或0)\"\n\t\t\tisAllowed={(values) => {\n\t\t\t\tif (values.value === \"-\" || values.floatValue! <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"NumberInputCustomDemo\";\n"
	},
	{
		"name": "NumberInputDecimalScaleDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <NumberInput decimalScale={2} placeholder=\"最大2位小数\" />;\n}\nDemo.displayName = \"NumberInputDecimalScaleDemo\";\n"
	},
	{
		"name": "NumberInputDisabledDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\treadOnly:\n\t\t\t<NumberInput readOnly placeholder=\"只读的\" />\n\t\t\tdisabled:\n\t\t\t<NumberInput disabled placeholder=\"禁用的\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"NumberInputDisabledDemo\";\n"
	},
	{
		"name": "NumberInputPositiveDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <NumberInput allowNegative={false} placeholder=\"不允许负数\" />;\n}\nDemo.displayName = \"NumberInputPositiveDemo\";\n"
	},
	{
		"name": "NumberInputPositiveIntegerDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<NumberInput\n\t\t\tallowNegative={false}\n\t\t\tallowDecimal={false}\n\t\t\tplaceholder=\"只能是正整数\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"NumberInputPositiveIntegerDemo\";\n"
	},
	{
		"name": "NumberInputPrefixDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<NumberInput prefix=\"￥\" placeholder=\"自动带￥前缀\" />\n\t\t\t<NumberInput suffix=\"%\" placeholder=\"自动带%后缀\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"NumberInputPrefixDemo\";\n"
	},
	{
		"name": "NumberInputRangeDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\tblur模式(默认模式)\n\t\t\t<NumberInput\n\t\t\t\tmin={10}\n\t\t\t\tmax={20}\n\t\t\t\tstep={1}\n\t\t\t\tplaceholder=\"min为 10, max为 20, step为 1\"\n\t\t\t/>\n\t\t\tstrict模式\n\t\t\t<NumberInput\n\t\t\t\tmin={-10}\n\t\t\t\tmax={20}\n\t\t\t\tstep={1}\n\t\t\t\tclampBehavior=\"strict\"\n\t\t\t\tplaceholder=\"min为 -10, max为 20, step为 1\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"NumberInputRangeDemo\";\n"
	},
	{
		"name": "NumberInputThousandsGroupDemo",
		"code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t<NumberInput\n\t\t\t\tthousandsGroupStyle=\"thousand\"\n\t\t\t\tplaceholder=\"自动千分位显示\"\n\t\t\t/>\n\t\t\t<NumberInput thousandsGroupStyle=\"wan\" placeholder=\"自动万分位显示\" />\n\t\t\t<NumberInput thousandsGroupStyle=\"lakh\" placeholder=\"自动百分位显示\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"NumberInputThousandsGroupDemo\";\n"
	},
	{
		"name": "PaginationBasicDemo",
		"code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Pagination count={10} />;\n}\nDemo.displayName = \"PaginationBasicDemo\";\n"
	},
	{
		"name": "PaginationHiddenButtonsDemo",
		"code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Pagination\n\t\t\tcount={10}\n\t\t\tshowFirstButton={false}\n\t\t\tshowLastButton={false}\n\t\t\tshowPrevButton={false}\n\t\t\tshowNextButton={false}\n\t\t/>\n\t);\n}\nDemo.displayName = \"PaginationHiddenButtonsDemo\";\n"
	},
	{
		"name": "PaginationHiddenFirstLastButtonDemo",
		"code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Pagination count={10} showFirstButton={false} showLastButton={false} />\n\t);\n}\nDemo.displayName = \"PaginationHiddenFirstLastButtonDemo\";\n"
	},
	{
		"name": "PaginationSizeDemo",
		"code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Pagination size=\"xs\" count={10} />\n\t\t\t<Pagination\n\t\t\t\tsize=\"xs\"\n\t\t\t\tcount={10}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\t\t\t<Pagination\n\t\t\t\tsize=\"xs\"\n\t\t\t\tcount={10}\n\t\t\t\tshowFirstButton={false}\n\t\t\t\tshowLastButton={false}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\n\t\t\t<Pagination size=\"sm\" count={10} />\n\t\t\t<Pagination\n\t\t\t\tsize=\"sm\"\n\t\t\t\tcount={10}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\t\t\t<Pagination\n\t\t\t\tsize=\"sm\"\n\t\t\t\tcount={10}\n\t\t\t\tshowFirstButton={false}\n\t\t\t\tshowLastButton={false}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\n\t\t\t<Pagination size=\"lg\" count={10} />\n\t\t\t<Pagination\n\t\t\t\tsize=\"lg\"\n\t\t\t\tcount={10}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\t\t\t<Pagination\n\t\t\t\tsize=\"lg\"\n\t\t\t\tcount={10}\n\t\t\t\tshowFirstButton={false}\n\t\t\t\tshowLastButton={false}\n\t\t\t\tshowPrevButton={false}\n\t\t\t\tshowNextButton={false}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PaginationSizeDemo\";\n"
	},
	{
		"name": "PopoverArrowDemo",
		"code": "import React, { useState } from \"react\";\nimport { Popover, Button, FloatingSelect, Divider, Slider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tarrowSize: 7,\n\t\tarrowRadius: 0,\n\t\tarrowOffset: 10,\n\t\tarrowPosition: \"side\",\n\t});\n\treturn (\n\t\t<div className=\"flex gap-1\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<Popover\n\t\t\t\t\tdefaultOpened={true}\n\t\t\t\t\tcloseOnClickOutside={false}\n\t\t\t\t\tposition=\"bottom-start\"\n\t\t\t\t\twithArrow\n\t\t\t\t\tarrowSize={state.arrowSize}\n\t\t\t\t\tarrowPosition={state.arrowPosition as any}\n\t\t\t\t\tarrowRadius={state.arrowRadius}\n\t\t\t\t\tarrowOffset={state.arrowOffset}\n\t\t\t\t\tdropdownColor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t<Popover.Target>\n\t\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t\t</Popover.Target>\n\t\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t\t<div className=\"w-56 h-30 p-8\">dropdown content</div>\n\t\t\t\t\t</Popover.Dropdown>\n\t\t\t\t</Popover>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-2 p-4 bg-base-100\">\n\t\t\t\tArrow position:\n\t\t\t\t<FloatingSelect\n\t\t\t\t\tdata={[\"side\", \"center\"]}\n\t\t\t\t\tvalue={state.arrowPosition}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, arrowPosition: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tArrow size:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={4}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tvalue={state.arrowSize}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, arrowSize: val }))}\n\t\t\t\t/>\n\t\t\t\tArrow radius:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={12}\n\t\t\t\t\tvalue={state.arrowRadius}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, arrowRadius: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\tArrow offset:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={10}\n\t\t\t\t\tmax={50}\n\t\t\t\t\tvalue={state.arrowOffset}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, arrowOffset: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PopoverArrowDemo\";\n"
	},
	{
		"name": "PopoverBasicDemo",
		"code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\nimport { IconBell } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-8 items-center\">\n\t\t\t<Popover>\n\t\t\t\t<Popover.Target>\n\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t</Popover.Target>\n\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t<div className=\"w-72 h-40 p-8\">dropdown content</div>\n\t\t\t\t</Popover.Dropdown>\n\t\t\t</Popover>\n\n\t\t\t<Popover>\n\t\t\t\t<Popover.Target>\n\t\t\t\t\t<Button ghost sharp=\"circle\">\n\t\t\t\t\t\t<IconBell />\n\t\t\t\t\t</Button>\n\t\t\t\t</Popover.Target>\n\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t<div className=\"w-72 h-40 p-8\">dropdown content</div>\n\t\t\t\t</Popover.Dropdown>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PopoverBasicDemo\";\n"
	},
	{
		"name": "PopoverControlledDemo",
		"code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [opened, setOpened] = React.useState(false);\n\n\treturn (\n\t\t<Popover opened={opened} onChange={setOpened}>\n\t\t\t<Popover.Target>\n\t\t\t\t<Button onClick={(e) => setOpened(true)}>popover</Button>\n\t\t\t</Popover.Target>\n\t\t\t<Popover.Dropdown>\n\t\t\t\t<div className=\"w-80 h-40 p-8\">abcdefg</div>\n\t\t\t</Popover.Dropdown>\n\t\t</Popover>\n\t);\n}\nDemo.displayName = \"PopoverControlledDemo\";\n"
	},
	{
		"name": "PopoverDisabledDemo",
		"code": "import { useState } from \"react\";\nimport { Popover, Button, Divider, Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [disabled, setDisabled] = useState(false);\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<Popover disabled={disabled}>\n\t\t\t\t\t<Popover.Target>\n\t\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t\t</Popover.Target>\n\t\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t\t<div className=\"w-56 h-30 p-8\">dropdown content</div>\n\t\t\t\t\t</Popover.Dropdown>\n\t\t\t\t</Popover>\n\t\t\t</div>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-2 p-4 bg-base-100 w-56\">\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tchecked={disabled}\n\t\t\t\t\tonChange={(val) => setDisabled(val)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PopoverDisabledDemo\";\n"
	},
	{
		"name": "PopoverFocusDemo",
		"code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { close, open }] = useDisclosure(false);\n\treturn (\n\t\t<Popover opened={opened}>\n\t\t\t<Popover.Target onFocus={open} onBlur={close}>\n\t\t\t\t<Button>popover</Button>\n\t\t\t</Popover.Target>\n\t\t\t<Popover.Dropdown>\n\t\t\t\t<div className=\"w-72 h-40 p-8\">dropdown content</div>\n\t\t\t</Popover.Dropdown>\n\t\t</Popover>\n\t);\n}\nDemo.displayName = \"PopoverFocusDemo\";\n"
	},
	{
		"name": "PopoverFocusTrapDemo",
		"code": "import React from \"react\";\nimport { Popover, Button, TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Popover trapFocus dropdownColor=\"base2\">\n\t\t\t<Popover.Target>\n\t\t\t\t<Button>popover</Button>\n\t\t\t</Popover.Target>\n\t\t\t<Popover.Dropdown>\n\t\t\t\t<form className=\"flex flex-col gap-0 w-64 p-5\">\n\t\t\t\t\t<div className=\"flex justify-center items-center text-lg p-2 text-black\">\n\t\t\t\t\t\t登录\n\t\t\t\t\t</div>\n\t\t\t\t\t<TextInput label=\"UserName\" />\n\t\t\t\t\t<TextInput label=\"Password\" />\n\t\t\t\t\t<Button color=\"primary\" className=\"mt-4\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Popover.Dropdown>\n\t\t</Popover>\n\t);\n}\nDemo.displayName = \"PopoverFocusTrapDemo\";\n"
	},
	{
		"name": "PopoverHoverDemo",
		"code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\nimport { useDisclosure } from \"@rtdui/hooks\";\n\nexport default function Demo() {\n\tconst [opened, { close, open }] = useDisclosure(false);\n\n\treturn (\n\t\t<Popover opened={opened}>\n\t\t\t<Popover.Target onMouseEnter={open} onMouseLeave={close}>\n\t\t\t\t<Button>popover</Button>\n\t\t\t</Popover.Target>\n\t\t\t<Popover.Dropdown>\n\t\t\t\t<div className=\"w-72 h-40 p-8\">dropdown content</div>\n\t\t\t</Popover.Dropdown>\n\t\t</Popover>\n\t);\n}\nDemo.displayName = \"PopoverHoverDemo\";\n"
	},
	{
		"name": "PopoverKeepMountedDemo",
		"code": "import { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-8 items-center\">\n\t\t\t<Popover keepMounted>\n\t\t\t\t<Popover.Target>\n\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t</Popover.Target>\n\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t<div className=\"w-72 h-40 p-8\">dropdown content</div>\n\t\t\t\t</Popover.Dropdown>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PopoverKeepMountedDemo\";\n"
	},
	{
		"name": "PopoverTransitionDemo",
		"code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-8 items-center\">\n\t\t\t<Popover\n\t\t\t\twithArrow\n\t\t\t\ttransitionProps={{ transition: \"slide-up\" }}\n\t\t\t\tdropdownColor=\"primary\"\n\t\t\t>\n\t\t\t\t<Popover.Target>\n\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t</Popover.Target>\n\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t<div className=\"w-56 h-30 p-8\">slide-up</div>\n\t\t\t\t</Popover.Dropdown>\n\t\t\t</Popover>\n\n\t\t\t<Popover\n\t\t\t\twithArrow\n\t\t\t\ttransitionProps={{ transition: \"scale\" }}\n\t\t\t\tdropdownColor=\"primary\"\n\t\t\t>\n\t\t\t\t<Popover.Target>\n\t\t\t\t\t<Button>popover</Button>\n\t\t\t\t</Popover.Target>\n\t\t\t\t<Popover.Dropdown>\n\t\t\t\t\t<div className=\"w-56 h-30 p-8\">scale</div>\n\t\t\t\t</Popover.Dropdown>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"PopoverTransitionDemo\";\n"
	},
	{
		"name": "ProgressAnimationDemo",
		"code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Progress color=\"primary\" />\n\t\t\t<Progress color=\"secondary\" />\n\t\t\t<Progress color=\"accent\" />\n\t\t\t<Progress color=\"info\" />\n\t\t\t<Progress color=\"success\" />\n\t\t\t<Progress color=\"warning\" />\n\t\t\t<Progress color=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ProgressAnimationDemo\";\n"
	},
	{
		"name": "ProgressColorDemo",
		"code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Progress value={10} color=\"primary\" />\n\t\t\t<Progress value={30} color=\"secondary\" />\n\t\t\t<Progress value={40} color=\"accent\" />\n\t\t\t<Progress value={70} color=\"info\" />\n\t\t\t<Progress value={80} color=\"success\" />\n\t\t\t<Progress value={90} color=\"warning\" />\n\t\t\t<Progress value={100} color=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ProgressColorDemo\";\n"
	},
	{
		"name": "ProgressSizeDemo",
		"code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Progress value={70} size=\"lg\" />\n\t\t\t<Progress value={70} size=\"md\" />\n\t\t\t<Progress value={70} size=\"sm\" />\n\t\t\t<Progress value={70} size=\"xs\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ProgressSizeDemo\";\n"
	},
	{
		"name": "ProgressValuesDemo",
		"code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Progress value={0} />\n\t\t\t<Progress value={10} />\n\t\t\t<Progress value={40} />\n\t\t\t<Progress value={70} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"ProgressValuesDemo\";\n"
	},
	{
		"name": "QRCodeBasicDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<QRCode value={value} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeBasicDemo\";\n"
	},
	{
		"name": "QRCodeColorDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<QRCode value={value} fgColor=\"green\" />\n\t\t\t\t<QRCode value={value} fgColor=\"blue\" />\n\t\t\t\t<QRCode value={value} fgColor=\"#C71585\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeColorDemo\";\n"
	},
	{
		"name": "QRCodeDownloadDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { Button, TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\tconst id = React.useId();\n\tconst downloadQRCode = () => {\n\t\tconst canvas = document\n\t\t\t.getElementById(id)!\n\t\t\t.querySelector<HTMLCanvasElement>(\"canvas\");\n\t\tif (canvas) {\n\t\t\tconst url = canvas.toDataURL();\n\t\t\tconst a = document.createElement(\"a\");\n\t\t\ta.download = \"QRCode.png\";\n\t\t\ta.href = url;\n\t\t\tdocument.body.appendChild(a);\n\t\t\ta.click();\n\t\t\tdocument.body.removeChild(a);\n\t\t}\n\t};\n\treturn (\n\t\t<div id={id} className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<QRCode value={value} />\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclassName=\"self-start\"\n\t\t\t\tonClick={downloadQRCode}\n\t\t\t>\n\t\t\t\t下载二维码\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeDownloadDemo\";\n"
	},
	{
		"name": "QRCodeIconDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<QRCode value={value} icon=\"/rtdui.svg\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeIconDemo\";\n"
	},
	{
		"name": "QRCodeLevelDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<QRCode value={value} level=\"L\" />\n\t\t\t\t<QRCode value={value} level=\"M\" />\n\t\t\t\t<QRCode value={value} level=\"Q\" />\n\t\t\t\t<QRCode value={value} level=\"H\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeLevelDemo\";\n"
	},
	{
		"name": "QRCodeRefreshDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nfunction randomString(length: number, chars = \"abcdefghijklmnopqrstuvwxyz\") {\n\tlet result = \"\";\n\tfor (let i = length; i > 0; --i)\n\t\tresult += chars[Math.floor(Math.random() * chars.length)];\n\treturn result;\n}\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\tconst noise = randomString(6);\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<QRCode\n\t\t\t\tvalue={value}\n\t\t\t\tonRefresh={() =>\n\t\t\t\t\tsetValue(`https://example.com/?query=1&noise=${noise}`)\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeRefreshDemo\";\n"
	},
	{
		"name": "QRCodeSizeDemo",
		"code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput, Slider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(\"https://example.com/?query=1\");\n\tconst [size, setSize] = React.useState(160);\n\treturn (\n\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t<TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n\t\t\t<Slider\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tmin={60}\n\t\t\t\tmax={320}\n\t\t\t\tstep={10}\n\t\t\t\tvalue={size}\n\t\t\t\tonChange={setSize}\n\t\t\t/>\n\t\t\t<QRCode value={value} size={size} icon=\"/rtdui.svg\" iconSize={size / 4} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"QRCodeSizeDemo\";\n"
	},
	{
		"name": "RadialProgressColorDemo",
		"code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<RadialProgress value={10} color=\"primary\" />\n\t\t\t<RadialProgress value={20} color=\"secondary\" />\n\t\t\t<RadialProgress value={30} color=\"accent\" />\n\t\t\t<RadialProgress value={40} color=\"info\" />\n\t\t\t<RadialProgress value={50} color=\"success\" />\n\t\t\t<RadialProgress value={60} color=\"warning\" />\n\t\t\t<RadialProgress value={70} color=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadialProgressColorDemo\";\n"
	},
	{
		"name": "RadialProgressCustomBackgroundDemo",
		"code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<RadialProgress value={70} className=\"!bg-blue-600 !text-blue-300\" />\n\t\t\t<RadialProgress value={70} className=\"!bg-green-600 !text-green-300\" />\n\t\t\t<RadialProgress value={70} className=\"!bg-yellow-600 !text-yellow-300\" />\n\t\t\t<RadialProgress value={70} className=\"!bg-red-600 !text-red-300\" />\n\t\t\t<RadialProgress value={70} className=\"!bg-pink-600 !text-pink-300\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadialProgressCustomBackgroundDemo\";\n"
	},
	{
		"name": "RadialProgressCustomSizeDemo",
		"code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <RadialProgress value={70} size=\"12rem\" thickness=\"14px\" />;\n}\nDemo.displayName = \"RadialProgressCustomSizeDemo\";\n"
	},
	{
		"name": "RadialProgressValueDemo",
		"code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<RadialProgress value={0} />\n\t\t\t<RadialProgress value={10} />\n\t\t\t<RadialProgress value={40} />\n\t\t\t<RadialProgress value={70} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadialProgressValueDemo\";\n"
	},
	{
		"name": "RadioColorDemo",
		"code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Radio defaultChecked label=\"default\" />\n\t\t\t<Radio defaultChecked color=\"primary\" label=\"primary\" />\n\t\t\t<Radio defaultChecked color=\"secondary\" label=\"secondary\" />\n\t\t\t<Radio defaultChecked color=\"accent\" label=\"accent\" />\n\t\t\t<Radio defaultChecked color=\"info\" label=\"info\" />\n\t\t\t<Radio defaultChecked color=\"success\" label=\"success\" />\n\t\t\t<Radio defaultChecked color=\"warning\" label=\"warning\" />\n\t\t\t<Radio defaultChecked color=\"error\" label=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadioColorDemo\";\n"
	},
	{
		"name": "RadioGroupColorAndSizeDemo",
		"code": "import React from \"react\";\nimport { RadioGroup, Radio, Divider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t<Divider>Size</Divider>\n\t\t\t<RadioGroup\n\t\t\t\tsize=\"xs\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tname=\"radioGroup1\"\n\t\t\t\tlabel=\"xs size\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t\t<RadioGroup\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tname=\"radioGroup2\"\n\t\t\t\tlabel=\"sm size\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t\t<RadioGroup\n\t\t\t\tsize=\"md\"\n\t\t\t\tcolor=\"accent\"\n\t\t\t\tname=\"radioGroup3\"\n\t\t\t\tlabel=\"md size\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t\t<RadioGroup\n\t\t\t\tsize=\"lg\"\n\t\t\t\tcolor=\"info\"\n\t\t\t\tname=\"radioGroup4\"\n\t\t\t\tlabel=\"lg size\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\n\t\t\t<Divider>Color</Divider>\n\t\t\t<RadioGroup\n\t\t\t\tcolor=\"success\"\n\t\t\t\tname=\"radioGroup5\"\n\t\t\t\tlabel=\"这是RadioGroup标签\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t\t<RadioGroup\n\t\t\t\tcolor=\"warning\"\n\t\t\t\tname=\"radioGroup6\"\n\t\t\t\tlabel=\"这是RadioGroup标签\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t\t<RadioGroup\n\t\t\t\tcolor=\"error\"\n\t\t\t\tname=\"radioGroup7\"\n\t\t\t\tlabel=\"这是RadioGroup标签\"\n\t\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t\t>\n\t\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t\t</RadioGroup>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadioGroupColorAndSizeDemo\";\n"
	},
	{
		"name": "RadioGroupDemo",
		"code": "import React from \"react\";\nimport { RadioGroup, Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [radioGroupValue, setRadioGroupValue] = React.useState<string | number>(\n\t\t1,\n\t);\n\treturn (\n\t\t<RadioGroup\n\t\t\tcolor=\"primary\"\n\t\t\tname=\"controlledRadioGroup\"\n\t\t\tvalue={radioGroupValue}\n\t\t\tonChange={setRadioGroupValue}\n\t\t\tlabel=\"这是RadioGroup标签\"\n\t\t\thelperText=\"(这是RadioGroup的帮助文本)\"\n\t\t>\n\t\t\t<Radio value={1} label=\"Radio标签1\" />\n\t\t\t<Radio value={2} label=\"Radio标签2\" />\n\t\t\t<Radio value={3} label=\"Radio标签3\" />\n\t\t\t<Radio value={4} label=\"Radio标签4\" />\n\t\t</RadioGroup>\n\t);\n}\nDemo.displayName = \"RadioGroupDemo\";\n"
	},
	{
		"name": "RadioGroupUnControlledDemo",
		"code": "import { RadioGroup, Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<RadioGroup\n\t\t\tcolor=\"primary\"\n\t\t\tname=\"unControlledRadioGroup\"\n\t\t\tdefaultValue=\"a\"\n\t\t\tlabel=\"这是RadioGroup\"\n\t\t>\n\t\t\t<Radio value=\"a\" label=\"这是标签1\" />\n\t\t\t<Radio value=\"b\" label=\"这是标签2\" />\n\t\t\t<Radio value=\"c\" label=\"这是标签3\" />\n\t\t\t<Radio value=\"d\" label=\"这是标签4\" />\n\t\t</RadioGroup>\n\t);\n}\nDemo.displayName = \"RadioGroupUnControlledDemo\";\n"
	},
	{
		"name": "RadioLabelDemo",
		"code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Radio required label=\"这是标签\" helperText=\"(这是帮助文本)\" />;\n}\nDemo.displayName = \"RadioLabelDemo\";\n"
	},
	{
		"name": "RadioSizeDemo",
		"code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Radio size=\"xs\" label=\"xs\" />\n\t\t\t<Radio size=\"sm\" label=\"sm\" />\n\t\t\t<Radio size=\"md\" label=\"md\" />\n\t\t\t<Radio size=\"lg\" label=\"lg\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RadioSizeDemo\";\n"
	},
	{
		"name": "RatingBasicDemo",
		"code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />;\n}\nDemo.displayName = \"RatingBasicDemo\";\n"
	},
	{
		"name": "RatingControlledDemo",
		"code": "import React from \"react\";\nimport { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(2);\n\treturn (\n\t\t<>\n\t\t\t<Rating half value={value} onChange={setValue} />\n\t\t\t<div>当前星级: {value}</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"RatingControlledDemo\";\n"
	},
	{
		"name": "RatingCustomColorDemo",
		"code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-info\" }} />\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-yellow-400\" }} />\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-purple-500\" }} />\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-pink-500\" }} />\n\t\t\t<Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RatingCustomColorDemo\";\n"
	},
	{
		"name": "RatingHalfDemo",
		"code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Rating defaultValue={2} half />;\n}\nDemo.displayName = \"RatingHalfDemo\";\n"
	},
	{
		"name": "RatingSizeDemo",
		"code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Rating size=\"xs\" defaultValue={2} />\n\t\t\t<Rating size=\"sm\" defaultValue={2} />\n\t\t\t<Rating size=\"md\" defaultValue={2} />\n\t\t\t<Rating size=\"lg\" defaultValue={2} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RatingSizeDemo\";\n"
	},
	{
		"name": "RatingStarDemo",
		"code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Rating defaultValue={2} />\n\t\t\t<Rating defaultValue={2} star=\"star\" />\n\t\t\t<Rating defaultValue={2} star=\"heart\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"RatingStarDemo\";\n"
	},
	{
		"name": "SelectColorDemo",
		"code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Select color=\"primary\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"secondary\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"accent\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"info\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"success\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"warning\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select color=\"error\" data={fruits} className=\"min-w-52\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SelectColorDemo\";\n"
	},
	{
		"name": "SelectDisabledDemo",
		"code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn <Select disabled data={fruits} />;\n}\nDemo.displayName = \"SelectDisabledDemo\";\n"
	},
	{
		"name": "SelectInFormDemo",
		"code": "import React from \"react\";\nimport { Select, Button } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa Sprouts xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\tconst [submitData, setSubmitData] = React.useState<FormData | null>(null);\n\tconst handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData(e.target as HTMLFormElement);\n\t\tsetSubmitData(formData);\n\t};\n\tlet output = \"\";\n\tif (submitData) {\n\t\tfor (const [key, value] of submitData) {\n\t\t\toutput += `${key}: ${value}\\n`;\n\t\t}\n\t}\n\treturn (\n\t\t<form onSubmit={handleFormSubmit} className=\"flex flex-col gap-4\">\n\t\t\t<Select name=\"mySelect\" color=\"primary\" data={fruits} />\n\t\t\t<Button type=\"submit\">提交</Button>\n\t\t\t<output className=\"bg-base-100 mt-4 p-4\">\n\t\t\t\t提交的数据:\n\t\t\t\t<pre>{output}</pre>\n\t\t\t</output>\n\t\t</form>\n\t);\n}\nDemo.displayName = \"SelectInFormDemo\";\n"
	},
	{
		"name": "SelectLabelDemo",
		"code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<Select\n\t\t\trequired\n\t\t\tlabel=\"这是标签\"\n\t\t\t// helperText=\"(这是帮助文本)\"\n\t\t\tdescription=\"(这是帮助文本)\"\n\t\t\tdata={fruits}\n\t\t/>\n\t);\n}\nDemo.displayName = \"SelectLabelDemo\";\n"
	},
	{
		"name": "SelectReadonlyDemo",
		"code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn <Select readOnly data={fruits} />;\n}\nDemo.displayName = \"SelectReadonlyDemo\";\n"
	},
	{
		"name": "SelectSectionDemo",
		"code": "import { Select, Button } from \"@rtdui/core\";\nimport { IconAt, IconSend } from \"@tabler/icons-react\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<Select\n\t\t\trequired\n\t\t\tsize=\"sm\"\n\t\t\tplaceholder=\"--请选择--\"\n\t\t\tlabel=\"这是标签\"\n\t\t\t// helperText=\"(这是帮助文本)\"\n\t\t\tdescription=\"(这是帮助文本)\"\n\t\t\tdata={fruits}\n\t\t\tleftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n\t\t\trightSection={\n\t\t\t\t<Button color=\"primary\" size=\"sm\" sharp=\"square\">\n\t\t\t\t\t<IconSend size=\"1rem\" />\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t);\n}\nDemo.displayName = \"SelectSectionDemo\";\n"
	},
	{
		"name": "SelectSizeDemo",
		"code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n\t\"Alfalfa\",\n\t\"Apple\",\n\t\"Apricot\",\n\t\"Artichoke\",\n\t\"Asian Pear\",\n\t\"Asparagus\",\n\t\"Atemoya\",\n\t\"Avocado\",\n\t\"Bamboo Shoots\",\n\t\"Banana\",\n\t\"Bean Sprouts\",\n\t\"Beans\",\n\t\"Beets\",\n\t\"Belgian Endive\",\n\t\"Bell Peppers\",\n\t\"Bitter Melon\",\n\t\"Blackberries\",\n\t\"Blueberries\",\n\t\"Bok Choy\",\n\t\"Boniato\",\n\t\"Boysenberries\",\n\t\"Broccoflower\",\n\t\"Broccoli\",\n\t\"Brussels Sprouts\",\n\t\"Cabbage\",\n\t\"Cactus Pear\",\n\t\"Cantaloupe\",\n\t\"Carambola\",\n\t\"Carrots\",\n\t\"Casaba Melon\",\n\t\"Cauliflower\",\n\t\"Celery\",\n\t\"Chayote\",\n\t\"Cherimoya\",\n\t\"Cherries\",\n\t\"Coconuts\",\n\t\"Collard Greens\",\n\t\"Corn\",\n\t\"Cranberries\",\n\t\"Cucumber\",\n\t\"Dates\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Endive\",\n\t\"Escarole\",\n\t\"Feijoa\",\n\t\"Fennel\",\n\t\"Figs\",\n\t\"Garlic\",\n\t\"Gooseberries\",\n\t\"Grapefruit\",\n\t\"Grapes\",\n\t\"Green Beans\",\n\t\"Green Onions\",\n\t\"Greens\",\n\t\"Guava\",\n\t\"Hominy\",\n\t\"Honeydew Melon\",\n\t\"Horned Melon\",\n\t\"Iceberg Lettuce\",\n\t\"Jerusalem Artichoke\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Kiwifruit\",\n\t\"Kohlrabi\",\n\t\"Kumquat\",\n\t\"Leeks\",\n\t\"Lemons\",\n\t\"Lettuce\",\n\t\"Lima Beans\",\n\t\"Limes\",\n\t\"Longan\",\n\t\"Loquat\",\n\t\"Lychee\",\n\t\"Madarins\",\n\t\"Malanga\",\n\t\"Mandarin Oranges\",\n\t\"Mangos\",\n\t\"Mulberries\",\n\t\"Mushrooms\",\n\t\"Napa\",\n\t\"Nectarines\",\n\t\"Okra\",\n\t\"Onion\",\n\t\"Oranges\",\n\t\"Papayas\",\n\t\"Parsnip\",\n\t\"Passion Fruit\",\n\t\"Peaches\",\n\t\"Pears\",\n\t\"Peas\",\n\t\"Peppers\",\n\t\"Persimmons\",\n\t\"Pineapple\",\n\t\"Plantains\",\n\t\"Plums\",\n\t\"Pomegranate\",\n\t\"Potatoes\",\n\t\"Prickly Pear\",\n\t\"Prunes\",\n\t\"Pummelo\",\n\t\"Pumpkin\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Radishes\",\n\t\"Raisins\",\n\t\"Raspberries\",\n\t\"Red Cabbage\",\n\t\"Rhubarb\",\n\t\"Romaine Lettuce\",\n\t\"Rutabaga\",\n\t\"Shallots\",\n\t\"Snow Peas\",\n\t\"Spinach\",\n\t\"Sprouts\",\n\t\"Squash\",\n\t\"Strawberries\",\n\t\"String Beans\",\n\t\"Sweet Potato\",\n\t\"Tangelo\",\n\t\"Tangerines\",\n\t\"Tomatillo\",\n\t\"Tomato\",\n\t\"Turnip\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Watercress\",\n\t\"Watermelon\",\n\t\"Waxed Beans\",\n\t\"Yams\",\n\t\"Yellow Squash\",\n\t\"Yuca/Cassava\",\n\t\"Zucchini Squash\",\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<Select size=\"xs\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select size=\"sm\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select size=\"md\" data={fruits} className=\"min-w-52\" />\n\t\t\t<Select size=\"lg\" data={fruits} className=\"min-w-52\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SelectSizeDemo\";\n"
	},
	{
		"name": "SignaturePadBasicDemo",
		"code": "import { Button, Divider, Slider } from \"@rtdui/core\";\nimport { SignaturePad, type SignaturePadHandle } from \"@rtdui/signature-pad\";\nimport { useRef, useState } from \"react\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\twidth: 330,\n\t\theight: 200,\n\t\tpenColor: \"black\",\n\t\tminWidth: 0.5,\n\t\tmaxWidth: 2.5,\n\t});\n\tconst [dataUrl, setDataUrl] = useState(\"\");\n\tconst signPadRef = useRef<SignaturePadHandle>(null!);\n\n\tconst handleConfirm = () => {\n\t\tsetDataUrl(signPadRef.current.toDataURL()); // 默认为image/png格式\n\t\t// setDataUrl(signPadRef.current.toDataURL(\"image/jpeg\")); // image/jpeg格式\n\t\t// setDataUrl(signPadRef.current.toDataURL(\"image/jpeg\", 0.5)); // image/jpeg格式, 带输出图像质量\n\t\t// setDataUrl(signPadRef.current.toDataURL(\"image/svg+xml\")); // image/svg+xml格式\n\t\t// setDataUrl(signPadRef.current.toDataURL(\"image/svg+xml\", {includeBackgroundColor: true,})); // image/svg+xml格式, 带背景输出\n\t};\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 select-none\">\n\t\t\t<div className=\"flex flex-col md:flex-row\">\n\t\t\t\t<div className=\"flex-1 select-none\">\n\t\t\t\t\t<SignaturePad\n\t\t\t\t\t\tref={signPadRef}\n\t\t\t\t\t\twidth={state.width}\n\t\t\t\t\t\theight={state.height}\n\t\t\t\t\t\tonConfirm={handleConfirm}\n\t\t\t\t\t\tclearLabel=\"清除\"\n\t\t\t\t\t\tconfirmLabel=\"确定\"\n\t\t\t\t\t\tpenColor={state.penColor}\n\t\t\t\t\t\tminWidth={state.minWidth}\n\t\t\t\t\t\tmaxWidth={state.maxWidth}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 bg-base-100 md:w-56 p-4\">\n\t\t\t\t\tPen color:\n\t\t\t\t\t<ColorControl\n\t\t\t\t\t\twithThemeColor={false}\n\t\t\t\t\t\tvalue={state.penColor}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, penColor: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\tPen min width:\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={0.5}\n\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\tvalue={state.minWidth}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, minWidth: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\tPen max width:\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={0.5}\n\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\tvalue={state.maxWidth}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, maxWidth: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button size=\"sm\" onClick={() => signPadRef.current.undo()}>\n\t\t\t\t\t\tUndo\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size=\"sm\" onClick={() => signPadRef.current.redo()}>\n\t\t\t\t\t\tRedo\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Divider>预览</Divider>\n\t\t\t<div className=\"bg-base-100 w-fit\">\n\t\t\t\t{dataUrl && (\n\t\t\t\t\t<img src={dataUrl} alt=\"\" width={state.width} height={state.height} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nDemo.displayName = \"SignaturePadBasicDemo\";\n"
	},
	{
		"name": "SignaturePadCustomDemo",
		"code": "import { SignaturePad, type SignaturePadHandle } from \"@rtdui/signature-pad\";\nimport { useRef } from \"react\";\n\nexport default function Demo() {\n\tconst signPadRef = useRef<SignaturePadHandle>(null!);\n\n\treturn (\n\t\t<SignaturePad\n\t\t\tref={signPadRef}\n\t\t\tslots={{\n\t\t\t\tclearBtn:\n\t\t\t\t\t\"w-20 h-8 min-h-0 p-1 bg-red-500 text-white hover:bg-red-700 rounded-full\",\n\t\t\t\tconfirmBtn:\n\t\t\t\t\t\"w-20 h-8 min-h-0 p-1 bg-blue-500 text-white  hover:bg-blue-700 rounded-full\",\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nDemo.displayName = \"SignaturePadCustomDemo\";\n"
	},
	{
		"name": "SkeletonBasicDemo",
		"code": "import React from \"react\";\nimport { Skeleton } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 bg-base-100 p-4\">\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Skeleton circle className=\"w-10 h-10\" />\n\t\t\t\t<div className=\"flex-grow flex flex-col gap-4\">\n\t\t\t\t\t<Skeleton paragraph className=\"h-2\" />\n\t\t\t\t\t<Skeleton paragraph className=\"h-2\" />\n\t\t\t\t\t<Skeleton paragraph className=\"w-9/12 h-2\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t<Skeleton box className=\"w-full h-20\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SkeletonBasicDemo\";\n"
	},
	{
		"name": "SliderBasicDemo",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\t<Slider defaultValue={35} />\n\t\t\t<RangeSlider defaultValue={[35, 65]} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderBasicDemo\";\n"
	},
	{
		"name": "SliderColorDemo",
		"code": "import React from \"react\";\nimport { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [color, setColor] = React.useState(\"#0000ff\");\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\t<input\n\t\t\t\ttype=\"color\"\n\t\t\t\tvalue={color}\n\t\t\t\tonChange={(e) => setColor(e.target.value)}\n\t\t\t/>\n\t\t\t<Slider defaultValue={35} color={color} />\n\t\t\t<RangeSlider defaultValue={[35, 65]} color={color} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderColorDemo\";\n"
	},
	{
		"name": "SliderCustomDemo",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nconst marks = [\n\t{ value: 20, label: \"20%\" },\n\t{ value: 50, label: \"50%\" },\n\t{ value: 80, label: \"80%\" },\n];\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\t<Slider\n\t\t\t\tdefaultValue={35}\n\t\t\t\tlabelAlwaysOn\n\t\t\t\tmarks={marks}\n\t\t\t\tslots={{\n\t\t\t\t\ttrack: \"before:!bg-teal-200\",\n\t\t\t\t\tbar: \"!bg-purple-500\",\n\t\t\t\t\tmark: \"!bg-purple-500\",\n\t\t\t\t\tmarkLabel: \"!text-yellow-500\",\n\t\t\t\t\tthumb: \"!border-red-500\",\n\t\t\t\t\tlabel: \"!bg-green-500\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<RangeSlider\n\t\t\t\tdefaultValue={[35, 65]}\n\t\t\t\tlabelAlwaysOn\n\t\t\t\tmarks={marks}\n\t\t\t\tslots={{\n\t\t\t\t\ttrack: \"before:!bg-teal-200\",\n\t\t\t\t\tbar: \"!bg-purple-500\",\n\t\t\t\t\tmark: \"!bg-purple-500\",\n\t\t\t\t\tmarkLabel: \"!text-yellow-500\",\n\t\t\t\t\tthumb: \"!border-red-500\",\n\t\t\t\t\tlabel: \"!bg-green-500\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderCustomDemo\";\n"
	},
	{
		"name": "SliderDisabledDemo",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-4\">\n\t\t\t<Slider disabled labelAlwaysOn defaultValue={35} />\n\t\t\t<RangeSlider disabled labelAlwaysOn defaultValue={[35, 65]} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderDisabledDemo\";\n"
	},
	{
		"name": "SliderInvertedDemo",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\t<Slider inverted defaultValue={35} />\n\t\t\t<RangeSlider inverted defaultValue={[35, 65]} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderInvertedDemo\";\n"
	},
	{
		"name": "SliderLabelsDeme",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\tno label\n\t\t\t<Slider defaultValue={35} label={null} />\n\t\t\t<RangeSlider defaultValue={[35, 65]} label={null} />\n\t\t\tcustom label\n\t\t\t<Slider defaultValue={35} label={(v) => `${v} °C`} />\n\t\t\t<RangeSlider defaultValue={[35, 65]} label={(v) => `${v} °C`} />\n\t\t\talways visible\n\t\t\t<Slider defaultValue={35} labelAlwaysOn label={(v) => `${v} °C`} />\n\t\t\t<RangeSlider\n\t\t\t\tdefaultValue={[35, 65]}\n\t\t\t\tlabelAlwaysOn\n\t\t\t\tlabel={(v) => `${v} °C`}\n\t\t\t/>\n\t\t\tlabel transition\n\t\t\t<Slider\n\t\t\t\tdefaultValue={35}\n\t\t\t\tlabel={(v) => `${v} °C`}\n\t\t\t\tlabelTransitionProps={{ transition: \"expand\" }}\n\t\t\t/>\n\t\t\t<RangeSlider\n\t\t\t\tdefaultValue={[35, 65]}\n\t\t\t\tlabel={(v) => `${v} °C`}\n\t\t\t\tlabelTransitionProps={{ transition: \"expand\" }}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderLabelsDeme\";\n"
	},
	{
		"name": "SliderMarksDemo",
		"code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nconst marks = [{ value: 20 }, { value: 50 }, { value: 80 }];\n\nconst marksWithLabel = [\n\t{ value: 20, label: \"20%\" },\n\t{ value: 50, label: \"50%\" },\n\t{ value: 80, label: \"80%\" },\n];\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-10 py-8\">\n\t\t\t<Slider defaultValue={35} marks={marks} />\n\t\t\t<Slider defaultValue={45} marks={marksWithLabel} />\n\t\t\t<RangeSlider defaultValue={[35, 65]} marks={marks} />\n\t\t\t<RangeSlider defaultValue={[45, 75]} marks={marksWithLabel} />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderMarksDemo\";\n"
	},
	{
		"name": "SliderOnChangeEndDemo",
		"code": "import React from \"react\";\nimport { Slider } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [value, setValue] = React.useState(35);\n\tconst [endValue, setEndValue] = React.useState(35);\n\treturn (\n\t\t<div className=\"flex flex-col gap-6 py-8\">\n\t\t\t<Slider value={value} onChange={setValue} onChangeEnd={setEndValue} />\n\t\t\t<output>\n\t\t\t\tonChange value: <b>{value}</b>\n\t\t\t</output>\n\t\t\t<output>\n\t\t\t\tonChangeEnd value: <b>{endValue}</b>\n\t\t\t</output>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderOnChangeEndDemo\";\n"
	},
	{
		"name": "SliderSlotsDemo",
		"code": "import React from \"react\";\nimport { Button, RangeSlider } from \"@rtdui/core\";\n\nconst marks = [\n\t{ value: 20, label: \"20%\" },\n\t{ value: 50, label: \"50%\" },\n\t{ value: 80, label: \"80%\" },\n];\n\nconst outline = \"!outline !outline-2 !outline-offset-1 !outline-red-500\";\nexport default function Demo() {\n\tconst [slots, setSlots] = React.useState({});\n\treturn (\n\t\t<div className=\"flex flex-col gap-12 py-4\">\n\t\t\t<div className=\"flex flex-wrap gap-4 bg-base-100 rounded-box p-4\">\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\troot: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\troot\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\ttrackContainer: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\ttrackContainer\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\ttrack: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\ttrack\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tbar: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tbar\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tmark: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tmark\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tmarkLabel: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tmarkLabel\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tthumb: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tthumb\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetSlots({\n\t\t\t\t\t\t\tlabel: outline,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tlabel\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<RangeSlider\n\t\t\t\tid=\"tours\"\n\t\t\t\tdefaultValue={[35, 65]}\n\t\t\t\tlabelAlwaysOn\n\t\t\t\tmarks={marks}\n\t\t\t\tslots={slots}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SliderSlotsDemo\";\n"
	},
	{
		"name": "StatPanelActionDemo",
		"code": "import React from \"react\";\nimport { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst handleActionClick = (val: any) => {\n\t\tref.current.innerText = val;\n\t};\n\tconst items = [\n\t\t{\n\t\t\tfigure: <IconInfoCircle />,\n\t\t\ttitle: \"Total Page Views\",\n\t\t\tvalue: \"89,400\",\n\t\t\tdesc: \"21% more than last month\",\n\t\t\tactions: (\n\t\t\t\t<div className=\"flex items-center gap-4\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={(e) => handleActionClick(\"基础款\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t基础款\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={(e) => handleActionClick(\"专业款\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t专业款\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tfigure: <IconInfoCircle />,\n\t\t\ttitle: \"Total Likes\",\n\t\t\tvalue: \"25.6K\",\n\t\t\tdesc: \"21% more than last month\",\n\t\t},\n\t\t{\n\t\t\tfigure: <IconInfoCircle />,\n\t\t\ttitle: \"Downloads\",\n\t\t\tvalue: \"31K\",\n\t\t\tdesc: \"Jan 1st - Feb 1st\",\n\t\t},\n\t];\n\n\tconst ref = React.useRef<HTMLSpanElement>(null!);\n\n\treturn (\n\t\t<>\n\t\t\t<StatPanel items={items} />\n\t\t\t<div>\n\t\t\t\tconsole: <span ref={ref} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"StatPanelActionDemo\";\n"
	},
	{
		"name": "StatPanelBackgroundDemo",
		"code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Page Views\",\n\t\tvalue: \"89,400\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Likes\",\n\t\tvalue: \"25.6K\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Downloads\",\n\t\tvalue: \"31K\",\n\t\tdesc: \"Jan 1st - Feb 1st\",\n\t},\n];\n\nexport default function Demo() {\n\treturn <StatPanel items={items} className=\"bg-info\" />;\n}\nDemo.displayName = \"StatPanelBackgroundDemo\";\n"
	},
	{
		"name": "StatPanelBasicDemo",
		"code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Page Views\",\n\t\tvalue: \"89,400\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Likes\",\n\t\tvalue: \"25.6K\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Downloads\",\n\t\tvalue: \"31K\",\n\t\tdesc: \"Jan 1st - Feb 1st\",\n\t},\n];\n\nexport default function Demo() {\n\treturn <StatPanel items={items} />;\n}\nDemo.displayName = \"StatPanelBasicDemo\";\n"
	},
	{
		"name": "StatPanelItemsDemo",
		"code": "import { StatPanel, Avatar } from \"@rtdui/core\";\n\nconst items = [\n\t{\n\t\tfigure: <Avatar size=\"lg\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />,\n\t\ttitle: <span className=\"text-xl\">Total Page Views</span>,\n\t\tvalue: <span className=\"text-secondary\">89,400</span>,\n\t\tdesc: <span className=\"text-sm\">21% more than last month</span>,\n\t},\n\t{\n\t\tfigure: (\n\t\t\t<img\n\t\t\t\talt=\"avatar\"\n\t\t\t\tsrc=\"/photo-1534528741775-53994a69daeb.jpg\"\n\t\t\t\twidth={100}\n\t\t\t\theight={100}\n\t\t\t\tclassName=\"rounded-box\"\n\t\t\t/>\n\t\t),\n\t\ttitle: <span className=\"text-xl\">Total Page Views</span>,\n\t\tvalue: <span className=\"text-secondary\">89,400</span>,\n\t\tdesc: <span className=\"text-sm\">21% more than last month</span>,\n\t},\n];\n\nexport default function Demo() {\n\treturn <StatPanel items={items} />;\n}\nDemo.displayName = \"StatPanelItemsDemo\";\n"
	},
	{
		"name": "StatPanelSlotsDemo",
		"code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Page Views\",\n\t\tvalue: \"89,400\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Total Likes\",\n\t\tvalue: \"25.6K\",\n\t\tdesc: \"21% more than last month\",\n\t},\n\t{\n\t\tfigure: <IconInfoCircle />,\n\t\ttitle: \"Downloads\",\n\t\tvalue: \"31K\",\n\t\tdesc: \"Jan 1st - Feb 1st\",\n\t},\n];\n\nexport default function Demo() {\n\treturn (\n\t\t<StatPanel\n\t\t\titems={items}\n\t\t\tslots={{\n\t\t\t\tfigure: \"text-primary\",\n\t\t\t\ttitle: \"text-xl\",\n\t\t\t\tvalue: \"text-secondary\",\n\t\t\t\tdesc: \"text-sm\",\n\t\t\t}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"StatPanelSlotsDemo\";\n"
	},
	{
		"name": "StepsBasicDemo",
		"code": "import { Steps } from \"@rtdui/core\";\n\nconst items = [\"步骤1\", \"步骤2\", \"步骤3\", \"步骤4\", \"步骤5\", \"步骤6\", \"步骤7\"];\n\nexport default function Demo() {\n\treturn <Steps steps={items} />;\n}\nDemo.displayName = \"StepsBasicDemo\";\n"
	},
	{
		"name": "StepsSequentialDemo",
		"code": "import React from \"react\";\nimport { Steps, Button } from \"@rtdui/core\";\n\nconst items = [\"步骤1\", \"步骤2\", \"步骤3\", \"步骤4\", \"步骤5\", \"步骤6\", \"步骤7\"];\n\nexport default function Demo() {\n\tconst ref = React.useRef(null!);\n\treturn (\n\t\t<>\n\t\t\t<Steps ref={ref} steps={items} sequential={true} />\n\t\t\t<Button onClick={(e) => (ref.current as any).next()}>下一步</Button>\n\t\t</>\n\t);\n}\nDemo.displayName = \"StepsSequentialDemo\";\n"
	},
	{
		"name": "SwapFlipDemo",
		"code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Swap transitionEffect=\"flip\" className=\"text-9xl\">\n\t\t\t<div>😈</div>\n\t\t\t<div>😇</div>\n\t\t</Swap>\n\t);\n}\nDemo.displayName = \"SwapFlipDemo\";\n"
	},
	{
		"name": "SwapIconDemo",
		"code": "import { Swap } from \"@rtdui/core\";\nimport { IconVolume3 as IconVolumeMute, IconVolume } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Swap>\n\t\t\t<IconVolumeMute size={36} />\n\t\t\t<IconVolume size={36} />\n\t\t</Swap>\n\t);\n}\nDemo.displayName = \"SwapIconDemo\";\n"
	},
	{
		"name": "SwapIconRotateDemo",
		"code": "import { Swap } from \"@rtdui/core\";\nimport { IconMoon, IconSun, IconMenu2, IconX } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex gap-8\">\n\t\t\t<Swap transitionEffect=\"rotate\">\n\t\t\t\t<IconMoon size={36} />\n\t\t\t\t<IconSun size={36} />\n\t\t\t</Swap>\n\t\t\t<Swap transitionEffect=\"rotate\">\n\t\t\t\t<IconMenu2 size={36} />\n\t\t\t\t<IconX size={36} />\n\t\t\t</Swap>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SwapIconRotateDemo\";\n"
	},
	{
		"name": "SwapIndeterminateDemo",
		"code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Swap transitionEffect=\"flip\" className=\"text-9xl\" indeterminate>\n\t\t\t<div>😈</div>\n\t\t\t<div>😇</div>\n\t\t\t<div>😭</div>\n\t\t</Swap>\n\t);\n}\nDemo.displayName = \"SwapIndeterminateDemo\";\n"
	},
	{
		"name": "SwapInFormDemo",
		"code": "import React from \"react\";\nimport { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n\t// 作为Swap的受控属性\n\tconst [swapChecked, setSwapChecked] = React.useState(false);\n\n\tconst [output, setOutput] = React.useState(\"\");\n\n\tconst handleSwapChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSwapChecked(e.currentTarget.checked);\n\t};\n\n\tconst handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData(e.currentTarget);\n\t\tconst jsonObj = Object.fromEntries(formData.entries());\n\t\tsetOutput(JSON.stringify(jsonObj, undefined, 2));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form method=\"post\" onSubmit={handleFormSubmit}>\n\t\t\t\t<Swap\n\t\t\t\t\tname=\"aa\"\n\t\t\t\t\tchecked={swapChecked}\n\t\t\t\t\tonChange={handleSwapChange}\n\t\t\t\t\tclassName=\"text-6xl\"\n\t\t\t\t>\n\t\t\t\t\t<div>😈</div>\n\t\t\t\t\t<div>😇</div>\n\t\t\t\t</Swap>\n\n\t\t\t\t<Swap name=\"bb\" defaultChecked={true} className=\"text-6xl\">\n\t\t\t\t\t<div>🥶</div>\n\t\t\t\t\t<div>😭</div>\n\t\t\t\t</Swap>\n\n\t\t\t\t<button className=\"btn btn-primary btn-block mt-4\" type=\"submit\">\n\t\t\t\t\t提交\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<output className=\"my-4 flex flex-col gap-4\">\n\t\t\t\toutput:\n\t\t\t\t<pre className=\"bg-base-100\">{output}</pre>\n\t\t\t</output>\n\t\t</>\n\t);\n}\nDemo.displayName = \"SwapInFormDemo\";\n"
	},
	{
		"name": "SwapTextDemo",
		"code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Swap>\n\t\t\t<span>ON</span>\n\t\t\t<span>OFF</span>\n\t\t</Swap>\n\t);\n}\nDemo.displayName = \"SwapTextDemo\";\n"
	},
	{
		"name": "SwitchColorDemo",
		"code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t<Switch defaultChecked />\n\t\t\t<Switch defaultChecked color=\"primary\" />\n\t\t\t<Switch defaultChecked color=\"secondary\" />\n\t\t\t<Switch defaultChecked color=\"accent\" />\n\t\t\t<Switch defaultChecked color=\"info\" />\n\t\t\t<Switch defaultChecked color=\"success\" />\n\t\t\t<Switch defaultChecked color=\"warning\" />\n\t\t\t<Switch defaultChecked color=\"error\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SwitchColorDemo\";\n"
	},
	{
		"name": "SwitchLabelDemo",
		"code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <Switch required label=\"这是标签\" helperText=\"(这是帮助文本)\" />;\n}\nDemo.displayName = \"SwitchLabelDemo\";\n"
	},
	{
		"name": "SwitchLabelPostionDemo",
		"code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Switch\n\t\t\trequired\n\t\t\tlabel=\"这是标签\"\n\t\t\tlabelPosition=\"right\"\n\t\t\thelperText=\"(这是帮助文本)\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"SwitchLabelPostionDemo\";\n"
	},
	{
		"name": "SwitchSizeDemo",
		"code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-start gap-4\">\n\t\t\t<Switch size=\"xs\" label=\"xs\" />\n\t\t\t<Switch size=\"sm\" label=\"sm\" />\n\t\t\t<Switch size=\"md\" label=\"md\" />\n\t\t\t<Switch size=\"lg\" label=\"lg\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"SwitchSizeDemo\";\n"
	},
	{
		"name": "TabsBasicDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\nimport { Slider, Switch, Tabs, Divider, FloatingSelect } from \"@rtdui/core\";\nimport { useState } from \"react\";\nimport ColorControl from \"~/src/components/ColorControl\";\n\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"circle\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tactivedTab: \"tab1\",\n\t\tcolor: \"primary\",\n\t\tvariant: \"default\",\n\t\torientation: \"horizontal\",\n\t\tplacement: \"left\",\n\t\tradius: \"md\",\n\t\tgrow: false,\n\t\tjustify: \"start\",\n\t\ttab2Disabled: false,\n\t});\n\tconst code = `\nimport { Tabs } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <Tabs defaultValue=\"tab1\"${state.variant !== \"default\" ? ` variant=\"${state.variant}\"` : \"\"}${state.orientation !== \"horizontal\" ? ` orientation=\"${state.orientation}\"` : \"\"}${state.placement !== \"left\" && state.orientation !== \"horizontal\" ? ` placement=\"${state.placement}\"` : \"\"}${state.radius !== \"md\" ? ` radius=\"${state.radius}\"` : \"\"}${state.color !== \"primary\" ? ` color=\"${state.color}\"` : \"\"}>\n      <Tabs.List${state.grow ? \" grow\" : \"\"}${state.justify !== \"start\" && !state.grow ? ` justify=\"${state.justify}\"` : \"\"}>\n        <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n        <Tabs.Tab value=\"tab2\"${state.tab2Disabled ? \" disabled\" : \"\"}>tab2</Tabs.Tab>\n        <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n      </Tabs.List>\n      <Tabs.Panel value=\"tab1\">\n        tab1 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab2\">\n        tab2 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab3\">\n        tab3 content\n      </Tabs.Panel>\n    </Tabs>\n  );\n}\n`;\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"flex-1 flex bg-base-100 p-4\">\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={state.activedTab}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, activedTab: val as any }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tradius={state.radius}\n\t\t\t\t\t\tcolor={state.color}\n\t\t\t\t\t\torientation={state.orientation as any}\n\t\t\t\t\t\tplacement={state.placement as any}\n\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tabs.List grow={state.grow} justify={state.justify as any}>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab2\" disabled={state.tab2Disabled}>\n\t\t\t\t\t\t\t\ttab2\n\t\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n\t\t\t\t\t\t</Tabs.List>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab1\" className=\"p-4\">\n\t\t\t\t\t\t\ttab1 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab2\" className=\"p-4\">\n\t\t\t\t\t\t\ttab2 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab3\" className=\"p-4\">\n\t\t\t\t\t\t\ttab3 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t</Tabs>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 w-72 bg-base-100 p-4\">\n\t\t\t\t\tColor\n\t\t\t\t\t<ColorControl\n\t\t\t\t\t\tvalue={state.color}\n\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n\t\t\t\t\t/>\n\t\t\t\t\tVariant:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.variant}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, variant: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"default\", \"outline\", \"pills\"]}\n\t\t\t\t\t/>\n\t\t\t\t\tOrientation:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.orientation}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, orientation: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"horizontal\", \"vertical\"]}\n\t\t\t\t\t/>\n\t\t\t\t\tPlacement:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.placement}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, placement: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"left\", \"right\"]}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\tRadius\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\t\tvalue={radius.indexOf(state.radius) + 1}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, radius: radius[val - 1] }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={(v) => radius[v - 1]}\n\t\t\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tchecked={state.grow}\n\t\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, grow: val }))}\n\t\t\t\t\t\t\tlabel=\"Grow\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\tJustify:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.justify}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, justify: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"start\", \"center\", \"end\"]}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tchecked={state.tab2Disabled}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, tab2Disabled: val }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"disable tab2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight code={code} language=\"jsx\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TabsBasicDemo\";\n"
	},
	{
		"name": "TabsInvertedDemo",
		"code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\nimport { Divider, FloatingSelect, Slider, Switch, Tabs } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"circle\"];\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\tactivedTab: \"tab1\",\n\t\tvariant: \"default\",\n\t\tradius: \"md\",\n\t\tgrow: false,\n\t\tjustify: \"start\",\n\t\ttab2Disabled: false,\n\t});\n\n\tconst code = `\nimport { Tabs } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <Tabs inverted defaultValue=\"tab1\">\n      <Tabs.Panel value=\"tab1\">\n        tab1 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab2\">\n        tab2 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab3\">\n        tab3 content\n      </Tabs.Panel>\n      <Tabs.List>\n        <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n        <Tabs.Tab value=\"tab2\">tab2</Tabs.Tab>\n        <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n      </Tabs.List>\n    </Tabs>\n  );\n}\n`;\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"inverted-demo flex\">\n\t\t\t\t<div className=\"flex-1 flex bg-base-100\">\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={state.activedTab}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, activedTab: val as any }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariant={state.variant as any}\n\t\t\t\t\t\tradius={state.radius}\n\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\tinverted\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab1\" className=\"p-4\">\n\t\t\t\t\t\t\ttab1 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab2\" className=\"p-4\">\n\t\t\t\t\t\t\ttab2 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t\t<Tabs.Panel value=\"tab3\" className=\"p-4\">\n\t\t\t\t\t\t\ttab3 content\n\t\t\t\t\t\t</Tabs.Panel>\n\t\t\t\t\t\t<Tabs.List grow={state.grow} justify={state.justify as any}>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab2\" disabled={state.tab2Disabled}>\n\t\t\t\t\t\t\t\ttab2\n\t\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t\t\t<Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n\t\t\t\t\t\t</Tabs.List>\n\t\t\t\t\t</Tabs>\n\t\t\t\t</div>\n\t\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t\t<div className=\"flex flex-col gap-4 w-72 bg-base-100 p-4\">\n\t\t\t\t\tVariant:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.variant}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, variant: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"default\", \"outline\", \"pills\"]}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\tRadius\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\t\tvalue={radius.indexOf(state.radius) + 1}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, radius: radius[val - 1] }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={(v) => radius[v - 1]}\n\t\t\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tchecked={state.grow}\n\t\t\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, grow: val }))}\n\t\t\t\t\t\t\tlabel=\"Grow\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\tJustify:\n\t\t\t\t\t<FloatingSelect\n\t\t\t\t\t\tvalue={state.justify}\n\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, justify: val as string }))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata={[\"start\", \"center\", \"end\"]}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"flex flex-col gap-8\">\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tchecked={state.tab2Disabled}\n\t\t\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\t\t\tsetState((prev) => ({ ...prev, tab2Disabled: val }))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"disable tab2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CodeHighlight code={code} language=\"jsx\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TabsInvertedDemo\";\n"
	},
	{
		"name": "TagsInputBasicDemo",
		"code": "import { useState } from \"react\";\nimport { Divider, Slider, Switch, TagsInput } from \"@rtdui/core\";\n\nconst maxTagsValues = [1, 2, 3, Number.POSITIVE_INFINITY];\n\nexport default function Demo() {\n\tconst [state, setState] = useState({\n\t\treadOnly: false,\n\t\tdisabled: false,\n\t\tclearable: false,\n\t\tallowDuplicates: false,\n\t\tmaxTags: Number.POSITIVE_INFINITY,\n\t});\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<TagsInput\n\t\t\t\tinputWrapperOrder={[\"label\", \"input\", \"description\"]}\n\t\t\t\tlabel=\"tags input\"\n\t\t\t\tdescription=\"输入值然后按回车键或逗号键试试\"\n\t\t\t\tplaceholder=\"请输入\"\n\t\t\t\tclassName=\"flex-1\"\n\t\t\t\tclearable={state.clearable}\n\t\t\t\tallowDuplicates={state.allowDuplicates}\n\t\t\t\tmaxTags={state.maxTags}\n\t\t\t\tdisabled={state.disabled}\n\t\t\t\treadOnly={state.readOnly}\n\t\t\t/>\n\t\t\t<Divider direction=\"horizontal\" />\n\t\t\t<div className=\"flex flex-col gap-6 p-4 bg-base-100 w-56\">\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Clearable\"\n\t\t\t\t\tchecked={state.clearable}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, clearable: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Allow duplicates\"\n\t\t\t\t\tchecked={state.allowDuplicates}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, allowDuplicates: val }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"ReadOnly\"\n\t\t\t\t\tchecked={state.readOnly}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, readOnly: val }))}\n\t\t\t\t/>\n\t\t\t\t<Switch\n\t\t\t\t\tlabel=\"Disabled\"\n\t\t\t\t\tchecked={state.disabled}\n\t\t\t\t\tonChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n\t\t\t\t/>\n\t\t\t\tMaxTags:\n\t\t\t\t<Slider\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabelAlwaysOn\n\t\t\t\t\tlabel={(v) => maxTagsValues[v - 1]}\n\t\t\t\t\tvalue={maxTagsValues.indexOf(state.maxTags) + 1}\n\t\t\t\t\tonChange={(val) =>\n\t\t\t\t\t\tsetState((prev) => ({ ...prev, maxTags: maxTagsValues[val - 1] }))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TagsInputBasicDemo\";\n"
	},
	{
		"name": "TagsInputRenderOptionDemo",
		"code": "import { TagsInput, type TagsInputProps } from \"@rtdui/core\";\nimport { IconCat, IconDog } from \"@tabler/icons-react\";\n\nconst data = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Feijoa\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Leeks\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Okra\",\n\t\"Papayas\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\nconst customRenderOption: TagsInputProps[\"renderOption\"] = ({ option }) => (\n\t<div className=\"flex items-center gap-1\">\n\t\t<IconCat className=\"stroke-sky-500\" />\n\t\t<span className=\"font-bold\">{option.value}</span>\n\t</div>\n);\nexport default function Demo() {\n\treturn (\n\t\t<TagsInput\n\t\t\tdata={data}\n\t\t\tplaceholder=\"Enter或,确认\"\n\t\t\trenderOption={customRenderOption}\n\t\t\tcomboboxProps={{}}\n\t\t/>\n\t);\n}\nDemo.displayName = \"TagsInputRenderOptionDemo\";\n"
	},
	{
		"name": "TagsInputSuggestionsDemo",
		"code": "import { TagsInput } from \"@rtdui/core\";\n\nconst data = [\n\t\"Apple\",\n\t\"Banana\",\n\t\"Cabbage\",\n\t\"Dried Plums\",\n\t\"Eggplant\",\n\t\"Feijoa\",\n\t\"Garlic\",\n\t\"Hominy\",\n\t\"Iceberg Lettuce\",\n\t\"Jicama\",\n\t\"Kale\",\n\t\"Leeks\",\n\t\"Madarins\",\n\t\"Napa\",\n\t\"Okra\",\n\t\"Papayas\",\n\t\"Quince\",\n\t\"Radicchio\",\n\t\"Shallots\",\n\t\"Tangelo\",\n\t\"Ugli Fruit\",\n\t\"Water Chestnuts\",\n\t\"Yams\",\n\t\"Zucchini Squash\",\n];\nexport default function Demo() {\n\treturn <TagsInput data={data} placeholder=\"请选择或输入\" />;\n}\nDemo.displayName = \"TagsInputSuggestionsDemo\";\n"
	},
	{
		"name": "TextareaBasicDemo",
		"code": "import { TextArea } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t自动高度不受限制:\n\t\t\t<TextArea autosize placeholder=\"请输入\" />\n\t\t\t限制自动增长最大为4行:\n\t\t\t<TextArea autosize maxRows={4} placeholder=\"请输入\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TextareaBasicDemo\";\n"
	},
	{
		"name": "TextareaResizeDemo",
		"code": "import { TextArea } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t允许用户改变尺寸(限制于垂直方向):\n\t\t\t<TextArea autosize placeholder=\"请输入\" resize=\"vertical\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TextareaDemo\";\n"
	},
	{
		"name": "DebouncedInputBasicDemo",
		"code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [output, setOutput] = React.useState(\"\");\n\treturn (\n\t\t<>\n\t\t\t<DebouncedInput\n\t\t\t\tonChange={(val) => setOutput(val.toString())}\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t/>\n\t\t\t<div>输出: {output}</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"DebouncedInputBasicDemo\";\n"
	},
	{
		"name": "DebouncedInputDefaultValueDemo",
		"code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [output, setOutput] = React.useState(\"\");\n\treturn (\n\t\t<>\n\t\t\t<DebouncedInput\n\t\t\t\tdefaultValue=\"1\"\n\t\t\t\tonChange={(val) => setOutput(val.toString())}\n\t\t\t\tplaceholder=\"search\"\n\t\t\t/>\n\t\t\t<div>输出: {output}</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"DebouncedInputDefaultValueDemo\";\n"
	},
	{
		"name": "DebouncedInputWaitDemo",
		"code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [output, setOutput] = React.useState(\"\");\n\treturn (\n\t\t<>\n\t\t\t<DebouncedInput\n\t\t\t\twait={1000}\n\t\t\t\tonChange={(val) => setOutput(val.toString())}\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t/>\n\t\t\t<div>输出: {output}</div>\n\t\t</>\n\t);\n}\nDemo.displayName = \"DebouncedInputWaitDemo\";\n"
	},
	{
		"name": "TextInputBackgroundDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <TextInput placeholder=\"请输入\" slots={{ input: \"bg-base-200\" }} />;\n}\nDemo.displayName = \"TextInputBackgroundDemo\";\n"
	},
	{
		"name": "TextInputBasicDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn <TextInput placeholder=\"请输入\" />;\n}\nDemo.displayName = \"TextInputBasicDemo\";\n"
	},
	{
		"name": "TextInputColorDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<TextInput placeholder=\"请输入\" color=\"primary\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"secondary\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"accent\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"info\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"success\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"warning\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" color=\"error\" className=\"min-w-52\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TextInputColorDemo\";\n"
	},
	{
		"name": "TextInputMemberDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<TextInput\n\t\t\tplaceholder=\"请输入\"\n\t\t\trequired\n\t\t\tlabel=\"这是标签\"\n\t\t\tdescription=\"(这是帮助文本)\"\n\t\t\terror=\"错误消息\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"TextInputMemberDemo\";\n"
	},
	{
		"name": "TextInputSectionDemo",
		"code": "import { IconAt, IconSend } from \"@tabler/icons-react\";\nimport { TextInput, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<TextInput\n\t\t\ttype=\"search\"\n\t\t\trequired\n\t\t\tsize=\"sm\"\n\t\t\tplaceholder=\"这是占位文本\"\n\t\t\tlabel=\"这是标签\"\n\t\t\tdescription=\"(这是帮助文本)\"\n\t\t\tleftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n\t\t\trightSection={\n\t\t\t\t<Button color=\"primary\" size=\"xs\" sharp=\"square\">\n\t\t\t\t\t<IconSend size=\"16\" />\n\t\t\t\t</Button>\n\t\t\t}\n\t\t\trightSectionPointerEvents=\"auto\"\n\t\t/>\n\t);\n}\nDemo.displayName = \"TextInputSectionDemo\";\n"
	},
	{
		"name": "TextInputSizeDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 items-start\">\n\t\t\t<TextInput placeholder=\"请输入\" size=\"xs\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" size=\"sm\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" size=\"md\" className=\"min-w-52\" />\n\t\t\t<TextInput placeholder=\"请输入\" size=\"lg\" className=\"min-w-52\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TextInputSizeDemo\";\n"
	},
	{
		"name": "TextInputVariantDemo",
		"code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-6\">\n\t\t\t<TextInput label=\"outline变体\" placeholder=\"请输入\" />\n\t\t\t<TextInput label=\"default变体\" placeholder=\"请输入\" variant=\"default\" />\n\t\t\t<TextInput label=\"ghost变体\" placeholder=\"请输入\" variant=\"ghost\" />\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TextInputVariantDemo\";\n"
	},
	{
		"name": "TooltipColorDemo",
		"code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 pt-8 lg:flex-row \">\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"primary\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"secondary\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"accent\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"info\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"success\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"warning\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"气泡提示\" color=\"error\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TooltipColorDemo\";\n"
	},
	{
		"name": "TooltipPositionDemo",
		"code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex justify-center\">\n\t\t\t<div>\n\t\t\t\t<div className=\"w-48 flex justify-center mb-2\">\n\t\t\t\t\t<Tooltip tip=\"气泡提示\" position=\"top\">\n\t\t\t\t\t\t<Button>顶部</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-48 flex justify-between mb-1.5\">\n\t\t\t\t\t<Tooltip tip=\"气泡提示\" position=\"left\">\n\t\t\t\t\t\t<Button>左侧</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip tip=\"气泡提示\" position=\"right\">\n\t\t\t\t\t\t<Button>右侧</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-48 flex justify-center\">\n\t\t\t\t\t<Tooltip tip=\"气泡提示\" position=\"bottom\">\n\t\t\t\t\t\t<Button>底部</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TooltipPositionDemo\";\n"
	},
	{
		"name": "TooltipTransitionDemo",
		"code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 pt-8 lg:flex-row \">\n\t\t\t<Tooltip tip=\"fade\" transition=\"fade\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"expand\" transition=\"expand\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"scale\" transition=\"scale\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"pop\" transition=\"pop\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"skew-up\" transition=\"skew-up\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"rotate-left\" transition=\"rotate-left\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip=\"slide-up\" transition=\"slide-up\">\n\t\t\t\t<Button>按钮</Button>\n\t\t\t</Tooltip>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TooltipTransitionDemo\";\n"
	},
	{
		"name": "TransitionAppearDemo",
		"code": "import React from \"react\";\nimport { Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t<Transition in transition=\"fade\" duration={1000}>\n\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t\tclassName=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n\t\t\t\t\t>\n\t\t\t\t\t\tno appear\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Transition>\n\n\t\t\t<Transition in appear transition=\"fade\" duration={1000}>\n\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t\tclassName=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n\t\t\t\t\t>\n\t\t\t\t\t\twith appear\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Transition>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TransitionAppearDemo\";\n"
	},
	{
		"name": "TransitionBasicDemo",
		"code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nconst transitions = {\n\tfade: \"逐渐显现\",\n\t\"skew-up\": \"从上倾斜\",\n\t\"skew-down\": \"从下倾斜\",\n\t\"rotate-right\": \"右侧旋转\",\n\t\"rotate-left\": \"左侧旋转\",\n\t\"slide-left\": \"向左滑入\",\n\t\"slide-right\": \"向右滑入\",\n\t\"slide-down\": \"向下滑入\",\n\t\"slide-up\": \"向上滑入\",\n\tscale: \"中心缩放\",\n\t\"scale-y\": \"垂直缩放\",\n\t\"scale-x\": \"水平缩放\",\n\texpand: \"中心展开\",\n\t\"expand-x\": \"水平展开\",\n\t\"expand-y\": \"垂直展开\",\n\tpop: \"中心弹出\",\n\t\"pop-top-left\": \"左上弹出\",\n\t\"pop-top-right\": \"右上弹出\",\n\t\"pop-bottom-left\": \"左下弹出\",\n\t\"pop-bottom-right\": \"右下弹出\",\n};\n\nconst initial = {\n\tfade: false,\n\t\"skew-up\": false,\n\t\"skew-down\": false,\n\t\"rotate-left\": false,\n\t\"rotate-right\": false,\n\t\"slide-left\": false,\n\t\"slide-right\": false,\n\t\"slide-down\": false,\n\t\"slide-up\": false,\n\tscale: false,\n\t\"scale-y\": false,\n\t\"scale-x\": false,\n\texpand: false,\n\t\"expand-x\": false,\n\t\"expand-y\": false,\n\tpop: false,\n\t\"pop-top-left\": false,\n\t\"pop-top-right\": false,\n\t\"pop-bottom-left\": false,\n\t\"pop-bottom-right\": false,\n};\nfunction reducer(state: typeof initial, action: Record<string, any>) {\n\tconst [[name, value]] = Object.entries(action);\n\treturn { ...state, [name]: value };\n}\n\nexport default function Demo() {\n\tconst [state, dispatch] = React.useReducer(reducer, initial);\n\treturn (\n\t\t<div className=\"flex flex-wrap gap-4 items-center\">\n\t\t\t{Object.entries(transitions).map((d) => {\n\t\t\t\tconst [name, label] = d;\n\t\t\t\treturn (\n\t\t\t\t\t<div key={name}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tnoAnimation\n\t\t\t\t\t\t\t// onClick={() =>\n\t\t\t\t\t\t\t//   dispatch({ [name]: !state[name as keyof typeof initial] })\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tonMouseEnter={() => dispatch({ [name]: true })}\n\t\t\t\t\t\t\tonMouseLeave={() => dispatch({ [name]: false })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Transition\n\t\t\t\t\t\t\tin={state[name as keyof typeof initial]}\n\t\t\t\t\t\t\ttransition={name as keyof typeof initial}\n\t\t\t\t\t\t\tduration={1000}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t\t\t\t\tclassName=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none w-fit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Transition>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TransitionBasicDemo\";\n"
	},
	{
		"name": "TransitionCustomDemo",
		"code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [inState, setInState] = React.useState(false);\n\treturn (\n\t\t<div className=\"flex flex-col gap-4 rounded-lg items-center\">\n\t\t\t<Button onClick={() => setInState(!inState)}>过渡</Button>\n\t\t\t<Transition\n\t\t\t\tin={inState}\n\t\t\t\tduration={1000}\n\t\t\t\tunmountOnExit={false}\n\t\t\t\ttransition={{\n\t\t\t\t\tin: { width: \"400px\", height: \"200px\" },\n\t\t\t\t\tout: { width: \"200px\", height: \"100px\" },\n\t\t\t\t\ttransitionProperty: \"width,height\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tclassName=\"bg-neutral text-neutral-content p-4 rounded-lg\"\n\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t>\n\t\t\t\t\t\t自定义过渡\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Transition>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TransitionCustomDemo\";\n"
	},
	{
		"name": "TransitionGroupDemo",
		"code": "import React from \"react\";\nimport { Button, TransitionGroup, Transition } from \"@rtdui/core\";\n\nlet count = 100;\nexport default function Demo() {\n\tconst [items, setItems] = React.useState([\"Item 1\", \"Item 2\", \"Item 3\"]);\n\n\treturn (\n\t\t<div className=\"flex flex-col items-start gap-4\">\n\t\t\t<TransitionGroup component={null}>\n\t\t\t\t{items.map((d) => (\n\t\t\t\t\t<Transition\n\t\t\t\t\t\tkey={d}\n\t\t\t\t\t\tduration={{ enter: 500, exit: 250 }}\n\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t>\n\t\t\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t\t\t<div ref={ref} style={styles} className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetItems((prev) => prev.filter((dd) => dd !== d))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{d}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Transition>\n\t\t\t\t))}\n\t\t\t</TransitionGroup>\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tcolor=\"info\"\n\t\t\t\tonClick={() => setItems((prev) => [...prev, `Item ${++count}`])}\n\t\t\t>\n\t\t\t\t添加\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TransitionGroupDemo\";\n"
	},
	{
		"name": "TransitionUnmountDemo",
		"code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n\tconst [state, setState] = React.useState(false);\n\treturn (\n\t\t<div className=\"flex flex-col items-center\">\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tnoAnimation\n\t\t\t\t// onClick={() => setState((prev) => !prev)}\n\t\t\t\tonMouseEnter={() => setState(true)}\n\t\t\t\tonMouseLeave={() => setState(false)}\n\t\t\t>\n\t\t\t\t初始不挂载,过渡结束卸载\n\t\t\t</Button>\n\t\t\t<Transition in={state} unmountOnExit transition=\"fade\" duration={1000}>\n\t\t\t\t{(ref, styles) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t\tclassName=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n\t\t\t\t\t>\n\t\t\t\t\t\tfade\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Transition>\n\t\t</div>\n\t);\n}\nDemo.displayName = \"TransitionUnmountDemo\";\n"
	},
	{
		"name": "TreeBasicDemo",
		"code": "import React from \"react\";\nimport { Tree, Button, Switch, Tooltip } from \"@rtdui/core\";\nimport { IconSettings, IconFolder, IconFile } from \"@tabler/icons-react\";\n\nconst MenuItemIcon = (props: any) => {\n\tconst { item } = props;\n\treturn item.children ? (\n\t\t<IconFolder strokeWidth={1} size={20} />\n\t) : (\n\t\t<IconFile strokeWidth={1} size={20} />\n\t);\n};\nconst MenuItemActions = (props: any) => {\n\tconst { item } = props;\n\tconst [, setUpdate] = React.useState({});\n\treturn (\n\t\t<>\n\t\t\t<Tooltip tip=\"配置\">\n\t\t\t\t<Button\n\t\t\t\t\tghost\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tsharp=\"circle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\talert(JSON.stringify(item));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<IconSettings strokeWidth={1} />\n\t\t\t\t</Button>\n\t\t\t</Tooltip>\n\t\t\t<Tooltip tip={item.enable ? \"已启用\" : \"已禁用\"}>\n\t\t\t\t<Switch\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tchecked={item.enable ?? false}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\titem.enable = checked;\n\t\t\t\t\t\tsetUpdate({});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t</>\n\t);\n};\n\nconst menuData = [\n\t{\n\t\tid: \"1\",\n\t\tlabel: \"1\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tid: \"1-1\",\n\t\t\t\tlabel: \"1-1\",\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1-1-1\",\n\t\t\t\t\t\tlabel: \"1-1-1\",\n\t\t\t\t\t\tenable: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1-1-2\",\n\t\t\t\t\t\tlabel: \"1-1-2\",\n\t\t\t\t\t\turl: \"/\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"1-2\",\n\t\t\t\tlabel: \"1-2\",\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1-2-1\",\n\t\t\t\t\t\tlabel: \"1-2-1\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"1-2-2\",\n\t\t\t\t\t\tlabel: \"1-2-2\",\n\t\t\t\t\t\tenable: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: \"2\",\n\t\tlabel: \"2\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tid: \"2-1\",\n\t\t\t\tlabel: \"2-1\",\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2-1-1\",\n\t\t\t\t\t\tlabel: \"2-1-1\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2-1-2\",\n\t\t\t\t\t\tlabel: \"2-1-2\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"2-2\",\n\t\t\t\tlabel: \"2-2\",\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2-2-1\",\n\t\t\t\t\t\tlabel: \"2-2-1\",\n\t\t\t\t\t\tenable: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"2-2-2\",\n\t\t\t\t\t\tlabel: \"2-2-2\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst handleMenuItemClick = (item: any) => {\n\tif (!item.url) {\n\t\talert(JSON.stringify(item));\n\t}\n};\n\nexport default function Demo() {\n\treturn (\n\t\t<Tree\n\t\t\tclassName=\"bg-base-100\"\n\t\t\tdata={menuData}\n\t\t\tdisplayField=\"label\"\n\t\t\texpandAll\n\t\t\tonItemClick={handleMenuItemClick}\n\t\t\tItemIconComponent={MenuItemIcon}\n\t\t\tItemActionsComponent={MenuItemActions}\n\t\t/>\n\t);\n}\nDemo.displayName = \"TreeBasicDemo\";\n"
	},
	{
		"name": "WatermarkImageDemo",
		"code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Watermark\n\t\t\twidth={200}\n\t\t\theight={50}\n\t\t\timageSrc=\"/photo-1414694762283-acccc27bca85.jpg\"\n\t\t>\n\t\t\t<div className=\"h-96 bg-base-100\">内容</div>\n\t\t</Watermark>\n\t);\n}\nDemo.displayName = \"WatermarkImageDemo\";\n"
	},
	{
		"name": "WatermarkMultiTextDemo",
		"code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Watermark text={[\"这是水印\", \"rtdui\"]}>\n\t\t\t<div className=\"h-96 bg-base-100\">内容</div>\n\t\t</Watermark>\n\t);\n}\nDemo.displayName = \"WatermarkMultiTextDemo\";\n"
	},
	{
		"name": "WatermarkTextDemo",
		"code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n\treturn (\n\t\t<Watermark text=\"这是水印rtdui\">\n\t\t\t<div className=\"h-96 bg-base-100\">内容</div>\n\t\t</Watermark>\n\t);\n}\nDemo.displayName = \"WatermarkTextDemo\";\n"
	}
]
