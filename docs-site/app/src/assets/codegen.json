[
  {
    "name": "AccordionArrowIndicatorDemo",
    "code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n  return <Accordion items={items} expandIcon=\"arrow\" />;\n}\n\nDemo.displayName = \"AccordionArrowIndicatorDemo\";\n"
  },
  {
    "name": "AccordionInitExpandDemo",
    "code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n  return <Accordion items={items} initExpandIndex={4} />;\n}\nDemo.displayName = \"AccordionInitExpandDemo\";\n"
  },
  {
    "name": "AccordionNoIndicatorDemo",
    "code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n  return <Accordion items={items} />;\n}\nDemo.displayName = \"AccordionNoIndicatorDemo\";\n"
  },
  {
    "name": "AccordionPlusIndicatorDemo",
    "code": "import { Accordion } from \"@rtdui/core\";\n\nconst items = [\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n  { title: \"Click to open this one and close others\", content: \"hello\" },\n];\nexport default function Demo() {\n  return <Accordion items={items} expandIcon=\"plus\" />;\n}\nDemo.displayName = \"AccordionPlusIndicatorDemo\";\n"
  },
  {
    "name": "AffixBasicDemo",
    "code": "import { useWindowScroll } from \"@rtdui/hooks\";\nimport { IconArrowUp } from \"@tabler/icons-react\";\nimport { Affix, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [scroll, scrollTo] = useWindowScroll();\n  return (\n    <div style={{ height: 1000 }}>\n      Affix is located at the bottom of the screen, scroll to see it\n      <Affix>\n        <Button\n          color=\"primary\"\n          startIcon={<IconArrowUp />}\n          onClick={() => scrollTo({ y: 0 })}\n        >\n          Scroll to top\n        </Button>\n      </Affix>\n    </div>\n  );\n}\nDemo.displayName = \"AffixBasicDemo\";\n"
  },
  {
    "name": "AspectRatioEmbedVideoDemo",
    "code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <AspectRatio ratio=\"16/9\">\n      <video controls>\n        <source\n          src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\"\n          type=\"video/webm\"\n        />\n        <source\n          src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\"\n          type=\"video/mp4\"\n        />\n      </video>\n    </AspectRatio>\n  );\n}\nDemo.displayName = \"AspectRatioEmbedVideoDemo\";\n"
  },
  {
    "name": "AspectRatioImage2Demo",
    "code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <AspectRatio ratio=\"4/3\" className=\"w-56\">\n      <img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n    </AspectRatio>\n  );\n}\nDemo.displayName = \"AspectRatioImage2Demo\";\n"
  },
  {
    "name": "AspectRatioImage3Demo",
    "code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <AspectRatio ratio=\"1\" className=\"w-56\">\n      <img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n    </AspectRatio>\n  );\n}\nDemo.displayName = \"AspectRatioImage3Demo\";\n"
  },
  {
    "name": "AspectRatioImageDemo",
    "code": "import { AspectRatio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <AspectRatio ratio=\"16/9\" className=\"w-56\">\n      <img src=\"/photo-1609621838510-5ad474b7d25d.jpg\" alt=\"\" />\n    </AspectRatio>\n  );\n}\nDemo.displayName = \"AspectRatioImageDemo\";\n"
  },
  {
    "name": "AutoCompleteBasicDemo",
    "code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Apple\",\n  \"Banana\",\n  \"Cabbage\",\n  \"Dates\",\n  \"Endive\",\n  \"Fennel\",\n  \"Garlic\",\n  \"Hominy\",\n  \"Iceberg Lettuce\",\n  \"Jicama\",\n  \"Kale\",\n  \"Lemons\",\n  \"Madarins\",\n  \"Napa\",\n  \"Oranges\",\n  \"Pears\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Shallots\",\n  \"Tangelo\",\n  \"Ugli Fruit\",\n  \"Watermelon\",\n  \"Yams\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return <AutoComplete options={fruits} />;\n}\nDemo.displayName = \"AutoCompleteBasicDemo\";\n"
  },
  {
    "name": "AutoCompleteControlledDemo",
    "code": "import React from \"react\";\nimport { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Apple\",\n  \"Banana\",\n  \"Cabbage\",\n  \"Dates\",\n  \"Endive\",\n  \"Fennel\",\n  \"Garlic\",\n  \"Hominy\",\n  \"Iceberg Lettuce\",\n  \"Jicama\",\n  \"Kale\",\n  \"Lemons\",\n  \"Madarins\",\n  \"Napa\",\n  \"Oranges\",\n  \"Pears\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Shallots\",\n  \"Tangelo\",\n  \"Ugli Fruit\",\n  \"Watermelon\",\n  \"Yams\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"\");\n  return <AutoComplete options={fruits} value={value} onChange={setValue} />;\n}\nDemo.displayName = \"AutoCompleteControlledDemo\";\n"
  },
  {
    "name": "AutoCompleteDisabledDemo",
    "code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Apple\",\n  \"Banana\",\n  \"Cabbage\",\n  \"Dates\",\n  \"Endive\",\n  \"Fennel\",\n  \"Garlic\",\n  \"Hominy\",\n  \"Iceberg Lettuce\",\n  \"Jicama\",\n  \"Kale\",\n  \"Lemons\",\n  \"Madarins\",\n  \"Napa\",\n  \"Oranges\",\n  \"Pears\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Shallots\",\n  \"Tangelo\",\n  \"Ugli Fruit\",\n  \"Watermelon\",\n  \"Yams\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return <AutoComplete options={fruits} disabled />;\n}\nDemo.displayName = \"AutoCompleteDisabledDemo\";\n"
  },
  {
    "name": "AutoCompleteInFormDemo",
    "code": "import { AutoComplete, TextInput, Button } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Apple\",\n  \"Banana\",\n  \"Cabbage\",\n  \"Dates\",\n  \"Endive\",\n  \"Fennel\",\n  \"Garlic\",\n  \"Hominy\",\n  \"Iceberg Lettuce\",\n  \"Jicama\",\n  \"Kale\",\n  \"Lemons\",\n  \"Madarins\",\n  \"Napa\",\n  \"Oranges\",\n  \"Pears\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Shallots\",\n  \"Tangelo\",\n  \"Ugli Fruit\",\n  \"Watermelon\",\n  \"Yams\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.target as HTMLFormElement);\n    console.log(Object.fromEntries(formData.entries()));\n  };\n  return (\n    <form className=\"flex flex-col gap-4\" onSubmit={handleSubmit}>\n      <TextInput name=\"input1\" placeholder=\"this is text input\" />\n      <AutoComplete\n        name=\"input2\"\n        options={fruits}\n        placeholder=\"this is autocomplete\"\n      />\n      <Button type=\"submit\" className=\"btn\">\n        submit\n      </Button>\n    </form>\n  );\n}\nDemo.displayName = \"AutoCompleteInFormDemo\";\n"
  },
  {
    "name": "AutoCompleteLongListDemo",
    "code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa Sprouts xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <AutoComplete\n      name=\"input2\"\n      options={fruits}\n      placeholder=\"this is autocomplete\"\n    />\n  );\n}\nDemo.displayName = \"AutoCompleteLongListDemo\";\n"
  },
  {
    "name": "AutoCompleteReadonlyDemo",
    "code": "import { AutoComplete } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Apple\",\n  \"Banana\",\n  \"Cabbage\",\n  \"Dates\",\n  \"Endive\",\n  \"Fennel\",\n  \"Garlic\",\n  \"Hominy\",\n  \"Iceberg Lettuce\",\n  \"Jicama\",\n  \"Kale\",\n  \"Lemons\",\n  \"Madarins\",\n  \"Napa\",\n  \"Oranges\",\n  \"Pears\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Shallots\",\n  \"Tangelo\",\n  \"Ugli Fruit\",\n  \"Watermelon\",\n  \"Yams\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return <AutoComplete options={fruits} readOnly />;\n}\nDemo.displayName = \"AutoCompleteReadonlyDemo\";\n"
  },
  {
    "name": "AvatarGroupDemo",
    "code": "import { Avatar, AvatarGroup } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <AvatarGroup size=\"lg\">\n        {Array.from({ length: 20 }).map((d, index) => (\n          <Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n        ))}\n      </AvatarGroup>\n      <AvatarGroup size=\"md\">\n        {Array.from({ length: 20 }).map((d, index) => (\n          <Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n        ))}\n      </AvatarGroup>\n      <AvatarGroup size=\"sm\">\n        {Array.from({ length: 20 }).map((d, index) => (\n          <Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n        ))}\n      </AvatarGroup>\n      <AvatarGroup size=\"xs\">\n        {Array.from({ length: 20 }).map((d, index) => (\n          <Avatar key={index} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n        ))}\n      </AvatarGroup>\n    </>\n  );\n}\nDemo.displayName = \"AvatarGroupDemo\";\n"
  },
  {
    "name": "AvatarIndicatorAndPlaceholderDemo",
    "code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center justify-center\">\n      <Avatar online placeholder=\"A\" />\n      <Avatar online={false} placeholder=\"A\" />\n    </div>\n  );\n}\nDemo.displayName = \"AvatarIndicatorAndPlaceholderDemo\";\n"
  },
  {
    "name": "AvatarIndicatorDemo",
    "code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center justify-center\">\n      <Avatar online src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n      <Avatar online={false} src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n    </div>\n  );\n}\nDemo.displayName = \"AvatarIndicatorDemo\";\n"
  },
  {
    "name": "AvatarPlaceholderDemo",
    "code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center justify-center\">\n      <Avatar size=\"lg\" placeholder=\"A\" />\n      <Avatar size=\"md\" placeholder=\"A\" />\n      <Avatar size=\"sm\" placeholder=\"A\" />\n      <Avatar size=\"xs\" placeholder=\"A\" />\n    </div>\n  );\n}\nDemo.displayName = \"AvatarPlaceholderDemo\";\n"
  },
  {
    "name": "AvatarSizeDemo",
    "code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Avatar size=\"lg\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n      <Avatar size=\"md\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n      <Avatar size=\"sm\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n      <Avatar size=\"xs\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n    </div>\n  );\n}\nDemo.displayName = \"AvatarSizeDemo\";\n"
  },
  {
    "name": "AvatarVariantDemo",
    "code": "import { Avatar } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center justify-center\">\n      <Avatar src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n      <Avatar variant=\"square\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />\n    </div>\n  );\n}\nDemo.displayName = \"AvatarVariantDemo\";\n"
  },
  {
    "name": "BadgeColorDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Badge>New</Badge>\n      <Badge color=\"primary\">New</Badge>\n      <Badge color=\"secondary\">New</Badge>\n      <Badge color=\"accent\">New</Badge>\n      <Badge color=\"info\">New</Badge>\n      <Badge color=\"warning\">New</Badge>\n      <Badge color=\"success\">New</Badge>\n      <Badge color=\"error\">New</Badge>\n      <Badge color=\"neutral\">New</Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeColorDemo\";\n"
  },
  {
    "name": "BadgeEmptyDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Badge size=\"lg\" color=\"info\"></Badge>\n      <Badge size=\"md\" color=\"success\"></Badge>\n      <Badge size=\"sm\" color=\"warning\"></Badge>\n      <Badge size=\"xs\" color=\"error\"></Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeEmptyDemo\";\n"
  },
  {
    "name": "BadgeIconsDemo",
    "code": "import { IconBell, IconCamera, IconX } from \"@tabler/icons-react\";\nimport { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Badge icon={<IconX />} color=\"info\">\n        New\n      </Badge>\n      <Badge icon={<IconBell />} color=\"success\">\n        New\n      </Badge>\n      <Badge icon={<IconCamera />} color=\"warning\">\n        New\n      </Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeIconsDemo\";\n"
  },
  {
    "name": "BadgeInButtonDemo",
    "code": "import { Badge, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Button>\n        Inbox\n        <Badge>+99</Badge>\n      </Button>\n      <Button>\n        Inbox\n        <Badge color=\"secondary\">+99</Badge>\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeInButtonDemo\";\n"
  },
  {
    "name": "BadgeInTextDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <h2>\n        Heading{\" \"}\n        <Badge size=\"lg\" color=\"info\">\n          New\n        </Badge>\n      </h2>\n      <h3>\n        Heading <Badge color=\"info\">New</Badge>\n      </h3>\n      <h4>\n        Heading{\" \"}\n        <Badge size=\"sm\" color=\"info\">\n          New\n        </Badge>\n      </h4>\n      <h5>\n        Heading{\" \"}\n        <Badge size=\"xs\" color=\"info\">\n          New\n        </Badge>\n      </h5>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeInTextDemo\";\n"
  },
  {
    "name": "BadgePolymorphicDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Badge as=\"span\">+99</Badge>\n      <Badge as=\"div\">+99</Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgePolymorphicDemo\";\n"
  },
  {
    "name": "BadgeSizeDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Badge size=\"lg\">New</Badge>\n      <Badge size=\"md\">New</Badge>\n      <Badge size=\"sm\">New</Badge>\n      <Badge size=\"xs\">New</Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeSizeDemo\";\n"
  },
  {
    "name": "BadgeVariantDemo",
    "code": "import { Badge } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Badge>New</Badge>\n      <Badge ghost>New</Badge>\n      <Badge outline>New</Badge>\n    </div>\n  );\n}\nDemo.displayName = \"BadgeVariantDemo\";\n"
  },
  {
    "name": "ButtonColorDemo",
    "code": "import { Button, Divider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Divider>default</Divider>\n      <div className=\"flex flex-wrap gap-4\">\n        <Button>default</Button>\n        <Button color=\"neutral\">neutral</Button>\n        <Button color=\"primary\">primary</Button>\n        <Button color=\"secondary\">secondary</Button>\n        <Button color=\"accent\">accent</Button>\n        <Button color=\"info\">info</Button>\n        <Button color=\"warning\">warning</Button>\n        <Button color=\"success\">success</Button>\n        <Button color=\"error\">error</Button>\n      </div>\n      <Divider>bordered</Divider>\n      <div className=\"flex flex-wrap gap-4\">\n        <Button outline>default</Button>\n        <Button outline color=\"neutral\">\n          neutral\n        </Button>\n        <Button outline color=\"primary\">\n          primary\n        </Button>\n        <Button outline color=\"secondary\">\n          secondary\n        </Button>\n        <Button outline color=\"accent\">\n          accent\n        </Button>\n        <Button outline color=\"info\">\n          info\n        </Button>\n        <Button outline color=\"warning\">\n          warning\n        </Button>\n        <Button outline color=\"success\">\n          success\n        </Button>\n        <Button outline color=\"error\">\n          error\n        </Button>\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"ButtonColorDemo\";\n"
  },
  {
    "name": "ButtonGhostDemo",
    "code": "import { Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Button ghost>Button</Button>;\n}\nDemo.displayName = \"ButtonGhostDemo\";\n"
  },
  {
    "name": "ButtonGlassDemo",
    "code": "import { Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div\n      className=\"flex justify-center items-center w-56 h-56\"\n      style={{\n        backgroundImage: \"url(/photo-1609621838510-5ad474b7d25d.jpg)\",\n      }}\n    >\n      <Button glass>Button</Button>\n    </div>\n  );\n}\nDemo.displayName = \"ButtonGlassDemo\";\n"
  },
  {
    "name": "ButtonLinkDemo",
    "code": "import { Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Button link>Link Style</Button>;\n}\nDemo.displayName = \"ButtonLinkDemo\";\n"
  },
  {
    "name": "ButtonSharpDemo",
    "code": "import { Button } from \"@rtdui/core\";\nimport { IconBell } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"flex flex-wrap items-center gap-4\">\n        <Button color=\"primary\" sharp=\"square\">\n          X\n        </Button>\n        <Button color=\"secondary\" outline sharp=\"square\">\n          X\n        </Button>\n        <Button color=\"secondary\" sharp=\"circle\">\n          X\n        </Button>\n        <Button color=\"secondary\" outline sharp=\"circle\">\n          X\n        </Button>\n        <Button color=\"accent\" sharp=\"square\">\n          <IconBell />\n        </Button>\n        <Button color=\"accent\" outline sharp=\"square\">\n          <IconBell />\n        </Button>\n        <Button color=\"info\" sharp=\"circle\">\n          <IconBell />\n        </Button>\n        <Button color=\"info\" outline sharp=\"circle\">\n          <IconBell />\n        </Button>\n      </div>\n      <div className=\"flex items-center gap-4\">\n        <Button color=\"secondary\" sharp=\"square\" size=\"lg\">\n          <IconBell size={32} />\n        </Button>\n        <Button color=\"secondary\" sharp=\"square\" size=\"md\">\n          <IconBell size={24} />\n        </Button>\n        <Button color=\"secondary\" sharp=\"square\" size=\"sm\">\n          <IconBell size={20} />\n        </Button>\n        <Button color=\"secondary\" sharp=\"square\" size=\"xs\">\n          <IconBell size={16} />\n        </Button>\n      </div>\n      <div className=\"flex items-center gap-4\">\n        <Button color=\"accent\" sharp=\"circle\" size=\"lg\">\n          <IconBell size={32} />\n        </Button>\n        <Button color=\"accent\" sharp=\"circle\" size=\"md\">\n          <IconBell size={24} />\n        </Button>\n        <Button color=\"accent\" sharp=\"circle\" size=\"sm\">\n          <IconBell size={20} />\n        </Button>\n        <Button color=\"accent\" sharp=\"circle\" size=\"xs\">\n          <IconBell size={16} />\n        </Button>\n      </div>\n      <div className=\"flex items-center gap-4\">\n        <Button sharp=\"square\" ghost size=\"lg\">\n          <IconBell size={32} />\n        </Button>\n        <Button sharp=\"square\" ghost size=\"md\">\n          <IconBell size={24} />\n        </Button>\n        <Button sharp=\"square\" ghost size=\"sm\">\n          <IconBell size={20} />\n        </Button>\n        <Button sharp=\"square\" ghost size=\"xs\">\n          <IconBell size={16} />\n        </Button>\n      </div>\n      <div className=\"flex items-center gap-4\">\n        <Button sharp=\"circle\" ghost size=\"lg\">\n          <IconBell size={32} />\n        </Button>\n        <Button sharp=\"circle\" ghost size=\"md\">\n          <IconBell size={24} />\n        </Button>\n        <Button sharp=\"circle\" ghost size=\"sm\">\n          <IconBell size={20} />\n        </Button>\n        <Button sharp=\"circle\" ghost size=\"xs\">\n          <IconBell size={16} />\n        </Button>\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"ButtonSharpDemo\";\n"
  },
  {
    "name": "ButtonSizeDemo",
    "code": "import { Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Button color=\"primary\" size=\"xs\">\n        xs\n      </Button>\n      <Button color=\"primary\" size=\"sm\">\n        sm\n      </Button>\n      <Button color=\"primary\" size=\"md\">\n        md(default)\n      </Button>\n      <Button color=\"primary\" size=\"lg\">\n        lg\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"ButtonSizeDemo\";\n"
  },
  {
    "name": "CarouselArrowDemo",
    "code": "import { Carousel } from \"@rtdui/core\";\n\nconst items = [\n  { imageSrc: \"/photo-1625726411847-8cbb60cc71e6.jpg\" },\n  { imageSrc: \"/photo-1609621838510-5ad474b7d25d.jpg\" },\n  { imageSrc: \"/photo-1414694762283-acccc27bca85.jpg\" },\n  { imageSrc: \"/photo-1665553365602-b2fb8e5d1707.jpg\" },\n];\nexport default function Demo() {\n  return <Carousel items={items} />;\n}\nDemo.displayName = \"CarouselArrowDemo\";\n"
  },
  {
    "name": "CarouselNumberDemo",
    "code": "import { Carousel } from \"@rtdui/core\";\n\nconst items = [\n  { imageSrc: \"/photo-1625726411847-8cbb60cc71e6.jpg\" },\n  { imageSrc: \"/photo-1609621838510-5ad474b7d25d.jpg\" },\n  { imageSrc: \"/photo-1414694762283-acccc27bca85.jpg\" },\n  { imageSrc: \"/photo-1665553365602-b2fb8e5d1707.jpg\" },\n];\nexport default function Demo() {\n  return <Carousel items={items} indicator=\"number\" />;\n}\nDemo.displayName = \"CarouselNumberDemo\";\n"
  },
  {
    "name": "ButtonCheckboxDemo",
    "code": "import { ButtonCheckbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <ButtonCheckbox required label=\"label\" />;\n}\nDemo.displayName = \"ButtonCheckboxDemo\";\n"
  },
  {
    "name": "ButtonCheckboxGroupDemo",
    "code": "import { ButtonCheckbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"join\">\n      <ButtonCheckbox required label=\"label1\" className=\"join-item\" />\n      <ButtonCheckbox required label=\"label2\" className=\"join-item\" />\n      <ButtonCheckbox required label=\"label3\" className=\"join-item\" />\n      <ButtonCheckbox required label=\"label4\" className=\"join-item\" />\n    </div>\n  );\n}\nDemo.displayName = \"ButtonCheckboxGroupDemo\";\n"
  },
  {
    "name": "CheckboxColorDemo",
    "code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Checkbox defaultChecked label=\"default\" />\n      <Checkbox defaultChecked color=\"primary\" label=\"primary\" />\n      <Checkbox defaultChecked color=\"secondary\" label=\"secondary\" />\n      <Checkbox defaultChecked color=\"accent\" label=\"accent\" />\n      <Checkbox defaultChecked color=\"info\" label=\"info\" />\n      <Checkbox defaultChecked color=\"success\" label=\"success\" />\n      <Checkbox defaultChecked color=\"warning\" label=\"warning\" />\n      <Checkbox defaultChecked color=\"error\" label=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"CheckboxColorDemo\";\n"
  },
  {
    "name": "CheckboxLabelDemo",
    "code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Checkbox required label=\"label\" helperText=\"(helperText)\" />;\n}\nDemo.displayName = \"CheckboxLabelDemo\";\n"
  },
  {
    "name": "CheckboxSizeDemo",
    "code": "import { Checkbox } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Checkbox size=\"xs\" label=\"xs\" />\n      <Checkbox size=\"sm\" label=\"sm\" />\n      <Checkbox size=\"md\" label=\"md(default)\" />\n      <Checkbox size=\"lg\" label=\"lg\" />\n    </div>\n  );\n}\nDemo.displayName = \"CheckboxSizeDemo\";\n"
  },
  {
    "name": "ChipActionDemo",
    "code": "import React from \"react\";\nimport { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [output, setOutput] = React.useState(\"\");\n  return (\n    <div>\n      <Chip\n        color=\"primary\"\n        label=\"normal\"\n        onClick={() => setOutput(\"onClick\")}\n        onDelete={() => setOutput(\"onDelete\")}\n      />\n      <div className=\"mt-4\">console: {output}</div>\n    </div>\n  );\n}\nDemo.displayName = \"ChipActionDemo\";\n"
  },
  {
    "name": "ChipColorDemo",
    "code": "import { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Chip label=\"default\" />\n      <Chip color=\"primary\" label=\"primary\" />\n      <Chip color=\"secondary\" label=\"secondary\" />\n      <Chip color=\"accent\" label=\"accent\" />\n      <Chip color=\"info\" label=\"info\" />\n      <Chip color=\"success\" label=\"success\" />\n      <Chip color=\"warning\" label=\"warning\" />\n      <Chip color=\"error\" label=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"ChipColorDemo\";\n"
  },
  {
    "name": "ChipSizeDemo",
    "code": "import { Chip } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center lg:justify-center\">\n      <Chip label=\"normal\" onDelete={() => {}} />\n      <Chip label=\"small\" onDelete={() => {}} size=\"small\" />\n    </div>\n  );\n}\nDemo.displayName = \"ChipSizeDemo\";\n"
  },
  {
    "name": "CodeHighlightAllDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n- return <div className={className}>hello world!</div>\n+ return <span className={className}>hello world!</span>\n}\n`;\n  return (\n    <CodeHighlight\n      code={code}\n      language=\"jsx\"\n      highlingtLines=\"{1,4-5}\"\n      diff\n      showLineNumbers\n    />\n  );\n}\nDemo.displayName = \"CodeHighlightAllDemo\";\n"
  },
  {
    "name": "CodeHighlightBadDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" bad />;\n}\nDemo.displayName = \"CodeHighlightBadDemo\";\n"
  },
  {
    "name": "CodeHighlightBasicDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" />;\n}\nDemo.displayName = \"CodeHighlightBasicDemo\";\n"
  },
  {
    "name": "CodeHighlightCopyBtnLabelDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return (\n    <CodeHighlight\n      code={code}\n      language=\"jsx\"\n      copyLabel=\"拷贝代码\"\n      copiedLabel=\"已拷贝到剪贴板\"\n    />\n  );\n}\nDemo.displayName = \"CodeHighlightCopyBtnLabelDemo\";\n"
  },
  {
    "name": "CodeHighlightDiffDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n- return <div className={className}>hello world!</div>\n+ return <span className={className}>hello world!</span>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" diff />;\n}\nDemo.displayName = \"CodeHighlightDiffDemo\";\n"
  },
  {
    "name": "CodeHighlightHiddenCopyBtnDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" withCopyButton={false} />;\n}\nDemo.displayName = \"CodeHighlightHiddenCopyBtnDemo\";\n"
  },
  {
    "name": "CodeHighlightLinesHighlightDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" highlingtLines=\"{1,4-5}\" />;\n}\nDemo.displayName = \"CodeHighlightLinesHighlightDemo\";\n"
  },
  {
    "name": "CodeHighlightShowLineNumbersDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\n\nexport default function Demo() {\n  const code = `\nimport React from \"react\";\n\nfunction Demo(props) {\n  const {className} = props\n  return <div className={className}>hello world!</div>\n}\n`;\n  return <CodeHighlight code={code} language=\"jsx\" showLineNumbers />;\n}\nDemo.displayName = \"CodeHighlightShowLineNumbersDemo\";\n"
  },
  {
    "name": "ColorInputBasicDemo",
    "code": "import React from \"react\";\nimport { ColorInput, Divider, Select, Slider, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\n\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst swatches = [\n  \"#2e2e2e\",\n  \"#868e96\",\n  \"#fa5252\",\n  \"#e64980\",\n  \"#be4bdb\",\n  \"#7950f2\",\n  \"#4c6ef5\",\n  \"#228be6\",\n  \"#15aabf\",\n  \"#12b886\",\n  \"#40c057\",\n  \"#82c91e\",\n  \"#fab005\",\n  \"#fd7e14\",\n];\nexport default function Demo() {\n  const [state, setState] = React.useState({\n    value: \"primary\",\n    size: \"md\",\n    disallowInput: false,\n    readOnly: false,\n    disabled: false,\n    format: \"hex\",\n    withPicker: true,\n    withSwatches: false,\n    closeOnColorSwatchClick: false,\n  });\n\n  const code = `\nimport { ColorInput } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <ColorInput${state.format !== \"hex\" ? ' format=\"' + state.format + '\"' : \"\"}${state.withSwatches ? \" swatches={\" + JSON.stringify(swatches) + \"}\" : \"\"}${state.size !== \"md\" ? ' size=\"' + state.size + '\"' : \"\"}${state.disallowInput ? \" disallowInput\" : \"\"}${state.readOnly ? \" readOnly\" : \"\"}${state.readOnly ? \" disabled\" : \"\"}${state.withPicker === false ? \" withPicker={false}\" : \"\"} />\n  );\n}\n`;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <div className=\"flex\">\n        <div className=\"flex-1\">\n          <ColorInput\n            size={state.size as any}\n            value={state.value}\n            onChange={(val) => setState((prev) => ({ ...prev, value: val }))}\n            readOnly={state.readOnly}\n            disabled={state.disabled}\n            disallowInput={state.disallowInput}\n            format={state.format as any}\n            withPicker={state.withPicker}\n            swatches={state.withSwatches ? swatches : undefined}\n            closeOnColorSwatchClick={state.closeOnColorSwatchClick}\n          />\n        </div>\n        <Divider direction=\"horizontal\" />\n        <div className=\"flex flex-col gap-4 w-72 bg-base-100 p-4\">\n          <Select\n            label=\"Format\"\n            value={state.format}\n            onChange={(val) =>\n              setState((prev) => ({\n                ...prev,\n                format: val as string,\n              }))\n            }\n            options={[\n              { value: \"hex\", label: \"HEX\" },\n              { value: \"hexa\", label: \"HEXA\" },\n              { value: \"rgb\", label: \"RGB\" },\n              { value: \"rgba\", label: \"RGBA\" },\n              { value: \"hsl\", label: \"HSL\" },\n              { value: \"hsla\", label: \"HSLA\" },\n            ]}\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"with swatches\"\n            checked={state.withSwatches}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, withSwatches: val }))\n            }\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"closeOnColorSwatchClick\"\n            disabled={!state.withSwatches}\n            checked={state.closeOnColorSwatchClick}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, closeOnColorSwatchClick: val }))\n            }\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"withPicker\"\n            checked={state.withPicker}\n            onChange={(val) =>\n              setState((prev) => ({\n                ...prev,\n                withPicker: val,\n                withSwatches: val === false ? true : prev.withSwatches,\n              }))\n            }\n          />\n          <div className=\"flex flex-col gap-8\">\n            Size\n            <Slider\n              min={1}\n              max={4}\n              value={size.indexOf(state.size) + 1}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, size: size[val - 1] }))\n              }\n              label={(v) => size[v - 1]}\n              labelAlwaysOn\n            />\n          </div>\n          <Switch\n            color=\"secondary\"\n            label=\"disallowInput\"\n            checked={state.disallowInput}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, disallowInput: val }))\n            }\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"readOnly\"\n            checked={state.readOnly}\n            onChange={(val) => setState((prev) => ({ ...prev, readOnly: val }))}\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"disabled\"\n            checked={state.disabled}\n            onChange={(val) => setState((prev) => ({ ...prev, disabled: val }))}\n          />\n        </div>\n      </div>\n      <CodeHighlight code={code} language=\"jsx\" />\n    </div>\n  );\n}\nDemo.displayName = \"ColorInputBasicDemo\";\n"
  },
  {
    "name": "ColorInputFixOnBlurDemo",
    "code": "import { ColorInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <ColorInput fixOnBlur={false} />\n    </div>\n  );\n}\nDemo.displayName = \"ColorInputFixOnBlurDemo\";\n"
  },
  {
    "name": "ColorPickerBasicDemo",
    "code": "import React from \"react\";\nimport { ColorPicker, Select, Slider, Switch } from \"@rtdui/core\";\nimport { CodeHighlight } from \"@rtdui/code-highlight\";\n\nconst size = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nconst swatches = [\n  \"primary\",\n  \"secondary\",\n  \"accent\",\n  \"info\",\n  \"warning\",\n  \"error\",\n  \"success\",\n  \"neutral\",\n  \"#2e2e2e\",\n  \"#868e96\",\n  \"#fa5252\",\n  \"#e64980\",\n  \"#be4bdb\",\n  \"#7950f2\",\n  \"#4c6ef5\",\n  \"#228be6\",\n  \"#15aabf\",\n  \"#12b886\",\n  \"#40c057\",\n  \"#82c91e\",\n  \"#fab005\",\n  \"#fd7e14\",\n];\nexport default function Demo() {\n  const [state, setState] = React.useState({\n    format: \"hex\",\n    color: \"primary\",\n    size: \"md\",\n    fullWidth: false,\n    withSwatches: false,\n  });\n\n  const code = `\nimport { ColorPicker } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <ColorPicker${state.format !== \"hex\" ? ' format=\"' + state.format + '\"' : \"\"}${state.withSwatches ? \" swatches={\" + JSON.stringify(swatches) + \"}\" : \"\"}${state.size !== \"md\" && !state.fullWidth ? ' size=\"' + state.size + '\"' : \"\"} ${state.fullWidth ? \"fullWidth\" : \"\"}/>\n  );\n}\n`;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <div className=\"flex gap-8\">\n        <div className=\"flex-1\">\n          <ColorPicker\n            color={state.color}\n            onChange={(val) => setState((prev) => ({ ...prev, color: val }))}\n            format={state.format as any}\n            size={state.size}\n            fullWidth={state.fullWidth}\n            swatches={state.withSwatches ? swatches : undefined}\n          />\n          <p className=\"ml-1 mt-4\">{state.color}</p>\n        </div>\n\n        <div className=\"flex flex-col gap-4 w-64 bg-base-100 p-4\">\n          <Select\n            label=\"Format\"\n            value={state.format}\n            onChange={(val) =>\n              setState((prev) => ({\n                ...prev,\n                format: val as string,\n              }))\n            }\n            options={[\n              { value: \"hex\", label: \"HEX\" },\n              { value: \"hexa\", label: \"HEXA\" },\n              { value: \"rgb\", label: \"RGB\" },\n              { value: \"rgba\", label: \"RGBA\" },\n              { value: \"hsl\", label: \"HSL\" },\n              { value: \"hsla\", label: \"HSLA\" },\n            ]}\n          />\n          <Switch\n            color=\"secondary\"\n            label=\"With swatches\"\n            checked={state.withSwatches}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, withSwatches: val }))\n            }\n          />\n          <div className=\"flex flex-col gap-8\">\n            Size\n            <Slider\n              min={1}\n              max={5}\n              value={size.indexOf(state.size) + 1}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, size: size[val - 1] }))\n              }\n              label={(v) => size[v - 1]}\n              labelAlwaysOn\n            />\n          </div>\n          <Switch\n            color=\"secondary\"\n            label=\"Full width\"\n            checked={state.fullWidth}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, fullWidth: val }))\n            }\n          />\n        </div>\n      </div>\n      <CodeHighlight code={code} language=\"jsx\" />\n    </div>\n  );\n}\nDemo.displayName = \"ColorPickerBasicDemo\";\n"
  },
  {
    "name": "CountdownBasicDemo",
    "code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const now = new Date();\n  const end = now.setHours(now.getHours() + 10); // 10小时倒计时\n  const endDate = new Date(end);\n  return <Countdown endDate={endDate} />;\n}\nDemo.displayName = \"CountdownBasicDemo\";\n"
  },
  {
    "name": "CountdownBoxDemo",
    "code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const now = new Date();\n  const end = now.setHours(now.getHours() + 10); // 10小时倒计时\n  const endDate = new Date(end);\n  return <Countdown endDate={endDate} variant=\"box\" />;\n}\nDemo.displayName = \"CountdownBoxDemo\";\n"
  },
  {
    "name": "CountdownLabelInlineDemo",
    "code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const now = new Date();\n  const end = now.setHours(now.getHours() + 10); // 10小时倒计时\n  const endDate = new Date(end);\n  return <Countdown endDate={endDate} variant=\"labelInline\" />;\n}\nDemo.displayName = \"CountdownLabelInlineDemo\";\n"
  },
  {
    "name": "CountdownLocaleDemo",
    "code": "import { Countdown } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const now = new Date();\n  const end = now.setFullYear(now.getFullYear() + 2); // 2年倒计时\n  const endDate = new Date(end);\n  return (\n    <div className=\"flex flex-col items-start gap-4\">\n      <Countdown\n        endDate={endDate}\n        labels={{\n          years: \"年\",\n          months: \"月\",\n          days: \"日\",\n          hours: \"时\",\n          minutes: \"分\",\n          seconds: \"秒\",\n        }}\n      />\n      <Countdown\n        endDate={endDate}\n        variant=\"labelInline\"\n        labels={{\n          years: \"年\",\n          months: \"月\",\n          days: \"日\",\n          hours: \"时\",\n          minutes: \"分\",\n          seconds: \"秒\",\n        }}\n      />\n      <Countdown\n        endDate={endDate}\n        variant=\"box\"\n        labels={{\n          years: \"年\",\n          months: \"月\",\n          days: \"日\",\n          hours: \"时\",\n          minutes: \"分\",\n          seconds: \"秒\",\n        }}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"CountdownLocaleDemo\";\n"
  },
  {
    "name": "DatatableSelectBasicDemo",
    "code": "import React from \"react\";\nimport { DataTableSelect } from \"@rtdui/datatable\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport type { ColumnDef } from \"@tanstack/react-table\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst dataTableColumns: ColumnDef<Person>[] = [\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n    size: 260,\n    minSize: 260,\n    meta: {\n      expandable: true,\n    },\n  },\n];\n\nconst getRowId = (row: any) => row.id;\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n  React.useEffect(() => {\n    setData(makePersonData(20, 3));\n  }, []);\n\n  return (\n    <DataTableSelect\n      defaultValue=\"1\"\n      placeholder=\"--请选择--\"\n      displayField=\"fullName\"\n      leftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n      columns={dataTableColumns}\n      data={data}\n      getRowId={getRowId}\n      getSubRows={(row: any) => row.subRows}\n    />\n  );\n}\nDemo.displayName = \"DatatableSelectBasicDemo\";\n"
  },
  {
    "name": "DatatableSelectMultipleDemo",
    "code": "import React from \"react\";\nimport { DataTableSelect } from \"@rtdui/datatable\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport type { ColumnDef } from \"@tanstack/react-table\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst dataTableColumns: ColumnDef<Person>[] = [\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n    size: 260,\n    minSize: 260,\n    meta: {\n      expandable: true,\n    },\n  },\n];\n\nconst getRowId = (row: any) => row.id;\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n  React.useEffect(() => {\n    setData(makePersonData(20, 3));\n  }, []);\n\n  return (\n    <DataTableSelect\n      defaultValue=\"1,4,7\"\n      placeholder=\"--请选择--\"\n      displayField=\"fullName\"\n      leftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n      columns={dataTableColumns}\n      data={data}\n      getRowId={getRowId}\n      getSubRows={(row: any) => row.subRows}\n      multiple\n    />\n  );\n}\nDemo.displayName = \"DatatableSelectMultipleDemo\";\n"
  },
  {
    "name": "DataTableBasicDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"性别\",\n    header: \"性别\",\n    accessorFn: (row) => (row.gender === \"male\" ? \"男\" : \"女\"),\n    meta: {\n      align: \"center\",\n    },\n    size: 80,\n    minSize: 80,\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n    size: 80,\n    minSize: 80,\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableBasicDemo\";\n"
  },
  {
    "name": "DataTableDefDemo",
    "code": "import type {\n  CellContext,\n  ColumnDef,\n  HeaderContext,\n} from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makeDatumData, type Datum } from \"../../demoData/makeData\";\n\nconst integerFormatter = new Intl.NumberFormat(\"zh-Hans-CN\");\nconst decimalFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n  minimumFractionDigits: 2,\n});\nconst percentFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nconst formatNumber = (\n  val: number,\n  style: \"integer\" | \"decimal\" | \"percent\"\n) => {\n  switch (style) {\n    case \"integer\":\n      return integerFormatter.format(val);\n    case \"percent\":\n      return percentFormatter.format(val);\n    case \"decimal\":\n    default:\n      return decimalFormatter.format(val);\n  }\n};\n\nconst dateFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n  hour12: false,\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n});\nconst timeFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n  hour12: false,\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n});\nconst datetimeFormatter = new Intl.DateTimeFormat(\"zh-Hans-CN\", {\n  hour12: false,\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n});\nconst formatDate = (date: Date, style: \"date\" | \"time\" | \"datetime\") => {\n  switch (style) {\n    case \"date\":\n      return dateFormatter.format(date).replace(/\\//g, \"-\");\n    case \"datetime\":\n      return datetimeFormatter.format(date).replace(/\\//g, \"-\");\n    case \"time\":\n      return timeFormatter.format(date);\n    default:\n      return datetimeFormatter.format(date).replace(/\\//g, \"-\");\n  }\n};\n\nconst DefaultFooterSumCell = (props: HeaderContext<Datum, any>) => (\n  <div className=\"flex justify-between\">\n    <span>总计:</span>\n    <span>\n      {decimalFormatter.format(\n        props.table\n          .getRowModel()\n          .rows.reduce(\n            (pre, cur) => pre + (cur.getValue(props.column.id) as number),\n            0\n          )\n      )}\n    </span>\n  </div>\n);\n\nconst DefaultAggregatedCell = (props: CellContext<Datum, any>) => (\n  <div className=\"flex justify-between\">\n    <span>小计:</span>\n    {decimalFormatter.format(props.getValue())}\n  </div>\n);\n\nconst columns: ColumnDef<Datum>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    header: \"数据类型\",\n    columns: [\n      {\n        id: \"枚举\",\n        header: (cx) => <span className=\"text-secondary\">枚举</span>,\n        accessorKey: \"enum\",\n        meta: {\n          align: \"center\",\n          showFilterList: true,\n        },\n        size: 100,\n        minSize: 100,\n        filterFn: \"equalsString\",\n      },\n      {\n        id: \"枚举映射\",\n        header: (cx) => <span className=\"text-secondary\">枚举映射</span>,\n        accessorFn: (row) => (row.enum === \"m\" ? \"男\" : \"女\"),\n        meta: {\n          align: \"center\",\n          showFilterList: true,\n        },\n        size: 100,\n        minSize: 100,\n        filterFn: \"equalsString\",\n      },\n      {\n        id: \"布尔\",\n        header: (cx) => <span className=\"text-secondary\">布尔</span>,\n        size: 100,\n        minSize: 100,\n        accessorKey: \"boolean\",\n        meta: {\n          align: \"center\",\n          showFilterList: true,\n        },\n        filterFn: \"equalsString\",\n        // cell: (cx) => cx.column.columnDef.meta?.mapping?.[cx.getValue()],\n      },\n      {\n        id: \"布尔映射\",\n        header: (cx) => <span className=\"text-secondary\">布尔映射</span>,\n        size: 100,\n        minSize: 100,\n        accessorFn: (row) => (row.boolean ? \"是\" : \"否\"),\n        meta: {\n          align: \"center\",\n          showFilterList: true,\n        },\n        filterFn: \"equalsString\",\n        // cell: (cx) => cx.column.columnDef.meta?.mapping?.[cx.getValue()],\n      },\n      {\n        id: \"整数\",\n        header: (cx) => <span className=\"text-secondary\">整数</span>,\n        meta: { align: \"right\" },\n        size: 250,\n        accessorKey: \"int\",\n        cell: (cx) => formatNumber(cx.getValue(), \"integer\"),\n        aggregatedCell: DefaultAggregatedCell,\n        footer: DefaultFooterSumCell,\n      },\n      {\n        id: \"数字百分比\",\n        header: (cx) => <span className=\"text-secondary\">数字百分比</span>,\n        accessorKey: \"percent\",\n        meta: { align: \"right\" },\n        cell: (cx) => formatNumber(cx.getValue(), \"percent\"),\n      },\n      {\n        id: \"数字\",\n        header: (cx) => <span className=\"text-secondary\">数字</span>,\n        accessorKey: \"float\",\n        meta: { align: \"right\" },\n        cell: (cx) => formatNumber(cx.getValue(), \"decimal\"),\n        aggregatedCell: DefaultAggregatedCell,\n      },\n      {\n        id: \"字符串数字\",\n        header: (cx) => <span className=\"text-secondary\">字符串数字</span>,\n        accessorKey: \"stringNumber\",\n        meta: { align: \"right\" },\n      },\n      {\n        id: \"Date映射为字符串日期\",\n        header: (cx) => (\n          <span className=\"text-secondary\">Date映射为字符串日期</span>\n        ),\n        accessorFn: (row) => dateFormatter.format(row.date).replace(/\\//g, \"-\"),\n        meta: {\n          align: \"center\",\n        },\n      },\n      {\n        id: \"Date映射为字符串日期时间\",\n        header: (cx) => (\n          <span className=\"text-secondary\">Date映射为字符串日期时间</span>\n        ),\n        accessorFn: (row) =>\n          datetimeFormatter.format(row.date).replace(/\\//g, \"-\"),\n        meta: {\n          align: \"center\",\n        },\n        size: 200,\n      },\n      {\n        id: \"Date未映射\",\n        header: (cx) => (\n          <span className=\"text-secondary\">\n            Date未映射但通过单元格格式化显示\n          </span>\n        ),\n        accessorKey: \"date\",\n        size: 250,\n        cell: (cx) => (\n          <div className=\"text-center\">{formatDate(cx.getValue(), \"time\")}</div>\n        ),\n      },\n    ],\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Datum[]>([]);\n\n  React.useEffect(() => {\n    setData(makeDatumData(50));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} getRowId={(row) => row.id} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableDefDemo\";\n"
  },
  {
    "name": "DataTableEditableDemo",
    "code": "import type { ColumnDef, CellContext } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { IconX } from \"@tabler/icons-react\";\nimport {\n  makePersonData as makePersonData,\n  type Person,\n  newPerson,\n} from \"../../demoData/makeData\";\nimport { NumberInput, TextInput } from \"@rtdui/core\";\nimport clsx from \"clsx\";\n\nconst getRowId = (row: Person) => row.id;\n\nfunction FullNameEditableInputCell(props: CellContext<any, any>) {\n  const { table, getValue } = props;\n  const initialValue = getValue();\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const validate = (\n    params: CellContext<Person, string> & { value: string }\n  ) => {\n    // 验证\n    if (params.value.trim() === \"\") {\n      return \"姓名不能为空\";\n    }\n    return \"\";\n  };\n\n  // If the initialValue is changed external, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    table.options.meta?.changeRow?.({\n      ...props,\n      value: newValue,\n      validate,\n    });\n  };\n\n  return (\n    <TextInput\n      ghost\n      bordered={false}\n      value={value}\n      onChange={(e) => setValue(e.currentTarget.value)}\n      onClick={(ev) => ev.stopPropagation()}\n      onBlur={onBlur}\n    />\n  );\n}\n\nfunction AgeEditableInputWithValidateCell(props: CellContext<any, any>) {\n  const { table, getValue } = props;\n  const initialValue = getValue();\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const validate = (\n    params: CellContext<Person, string> & { value: string }\n  ) => {\n    // 验证\n    if (Number(params.value) > 200) {\n      return \"值不能大于200\";\n    }\n    return \"\";\n  };\n\n  // When the input is blurred, we'll call our table meta's updateData function\n  const onBlur = (ev: React.FocusEvent<HTMLInputElement>) => {\n    const newValue = ev.target.value;\n    // 如果验证通过则加入变更集,否则加入错误集\n    table.options.meta?.changeRow?.({\n      ...props,\n      value: newValue,\n      validate,\n    });\n  };\n\n  // If the initialValue is changed external, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <NumberInput\n      ghost\n      allowNegative={false}\n      allowDecimal={false}\n      bordered={false}\n      value={value}\n      onChange={setValue}\n      onBlur={onBlur}\n      onClick={(ev) => ev.stopPropagation()}\n    />\n  );\n}\n\nfunction GenderEditableSelectCell(props: CellContext<any, any>) {\n  const { table, getValue } = props;\n  const initialValue = getValue();\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n    const newValue = ev.target.value;\n    setValue(newValue);\n    table.options.meta?.changeRow?.({\n      ...props,\n      value: newValue === \"男\" ? \"male\" : \"female\",\n    });\n  };\n\n  // If the initialValue is changed external, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <select\n      className=\"select select-ghost select-xs w-full\"\n      value={value}\n      onChange={onChange}\n      onClick={(ev) => ev.stopPropagation()}\n    >\n      <option value={\"男\"}>男</option>\n      <option value={\"女\"}>女</option>\n    </select>\n  );\n}\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n    enableColumnFilter: false,\n    minSize: 80,\n    size: 80,\n  },\n  {\n    header: \"个人信息\",\n    columns: [\n      {\n        id: \"姓名\",\n        header: \"姓名\",\n        accessorKey: \"fullName\",\n        cell: FullNameEditableInputCell,\n      },\n      {\n        id: \"年龄\",\n        header: \"年龄\",\n        size: 230,\n        accessorKey: \"age\",\n        cell: AgeEditableInputWithValidateCell,\n        aggregationFn: \"mean\",\n        aggregatedCell: ({ getValue }) => (\n          <div className=\"flex justify-between\">\n            <span>平均:</span>\n            <span>{Math.round(getValue() * 100) / 100}</span>\n          </div>\n        ),\n      },\n      {\n        id: \"性别\",\n        header: \"性别\",\n        size: 120,\n        minSize: 120,\n        accessorFn: (row) => (row.gender === \"male\" ? \"男\" : \"女\"),\n        meta: {\n          showFilterList: true,\n        },\n        filterFn: \"equalsString\",\n        cell: GenderEditableSelectCell,\n        aggregatedCell: \"\",\n      },\n    ],\n  },\n];\n\nconst defaultProps = {\n  getRowId,\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableTree: false,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: true,\n  enableMultiRowSelection: true,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: false,\n  enableCompactStyle: true,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\n\nlet newId = 0;\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    // setData(makeData(50, 2));\n    setData(makePersonData(10));\n  }, []);\n\n  const ref = React.useRef<any>(null!);\n  const handleNewRowClick = () => {\n    ref.current.addRow(newPerson(--newId));\n  };\n  const handleDeleteRowClick = () => {\n    ref.current.deleteRow();\n  };\n  const handleSaveClick = () => {\n    try {\n      const changes = ref.current.getChanges();\n      outputRef.current!.innerHTML = JSON.stringify(changes, undefined, 2);\n    } catch (ex: any) {\n      setError(ex.message);\n    }\n  };\n\n  const [error, setError] = React.useState(\"\");\n\n  const outputRef = React.useRef<HTMLPreElement>(null);\n\n  return (\n    <div className=\"flex-1 overflow-hidden flex flex-col\">\n      <div className=\"flex items-center gap-2 mb-4\">\n        <button className=\"btn btn-primary btn-sm\" onClick={handleNewRowClick}>\n          新增\n        </button>\n        <button\n          className=\"btn btn-warning btn-sm\"\n          onClick={handleDeleteRowClick}\n        >\n          删除\n        </button>\n        <button className=\"btn btn-info btn-sm\" onClick={handleSaveClick}>\n          保存\n        </button>\n        保存的数据结构查看底部的输出\n      </div>\n      <ul className=\"text-xs\">\n        <li>名字,年龄和性别列允许编辑: </li>\n        <li>名字列使用TextInput作为编辑器;</li>\n        <li>\n          年龄列使用NumberInput作为编辑器,同时启用了自定义输入验证: 不能大于200;\n        </li>\n        <li>性别列使用下拉选择作为编辑器。</li>\n      </ul>\n\n      <DataTable ref={ref} data={data} columns={columns} {...defaultProps} />\n\n      <output className=\"mt-4 flex flex-col gap-4\">\n        output:\n        <pre ref={outputRef} className=\"bg-base-100\"></pre>\n      </output>\n\n      <div className={clsx(\"toast z-10\", { hidden: !error })}>\n        <div className=\"alert alert-error\">\n          <div className=\"flex items-center gap-4\">\n            <span>{error}</span>\n            <button className=\"btn btn-circle btn-xs\">\n              <IconX size={16} onClick={() => setError(\"\")} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nDemo.displayName = \"DataTableEditableDemo\";\n"
  },
  {
    "name": "DataTableFilterListDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n    enableColumnFilter: false,\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n    meta: {\n      showFilterList: true,\n    },\n  },\n  {\n    id: \"性别\",\n    header: \"性别\",\n    accessorFn: (row) => (row.gender === \"male\" ? \"男\" : \"女\"),\n    meta: {\n      align: \"center\",\n      showFilterList: true,\n    },\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n    enableColumnFilter: false,\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} enableFilters />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableFilterListDemo\";\n"
  },
  {
    "name": "DataTableFormatDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst integerFormatter = new Intl.NumberFormat(\"zh-Hans-CN\");\nconst decimalFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\nconst percentFormatter = new Intl.NumberFormat(\"zh-Hans-CN\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nconst formatNumber = (\n  val: number,\n  style: \"integer\" | \"decimal\" | \"percent\"\n) => {\n  switch (style) {\n    case \"integer\":\n      return integerFormatter.format(val);\n    case \"percent\":\n      return percentFormatter.format(val);\n    case \"decimal\":\n    default:\n      return decimalFormatter.format(val);\n  }\n};\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n    size: 80,\n  },\n  {\n    header: \"个人信息\",\n    columns: [\n      {\n        id: \"姓名\",\n        header: \"姓名\",\n        accessorKey: \"fullName\",\n        meta: {\n          showFilterList: true,\n        },\n        footer: (cx) => (\n          <div className=\"flex justify-between\">\n            <span>总人数:</span>\n            <span>\n              {formatNumber(cx.table.getRowModel().rows.length, \"integer\")}\n            </span>\n          </div>\n        ),\n      },\n      {\n        id: \"性别\",\n        header: () => \"性别\",\n        accessorKey: \"gender\",\n        cell: (cx) => (\n          <div className=\"text-center\">\n            {cx.getValue() === \"male\" ? \"男 👨\" : \"女 👩\"}\n          </div>\n        ),\n        footer: (cx) => (\n          <div className=\"flex justify-between\">\n            <span>男女比例:</span>\n            <span>\n              {formatNumber(\n                cx.table\n                  .getRowModel()\n                  .rows.filter((d) => d.original.gender === \"male\").length /\n                  cx.table\n                    .getRowModel()\n                    .rows.filter((d) => d.original.gender === \"female\").length,\n                \"decimal\"\n              )}\n            </span>\n          </div>\n        ),\n      },\n      {\n        id: \"年龄\",\n        header: () => \"年龄\",\n        accessorKey: \"age\",\n        cell: (cx) => {\n          const value = cx.getValue();\n          return value > 30 ? (\n            <span className=\"text-red-500\">{value} ↑</span>\n          ) : (\n            <span className=\"text-green-500\">{value} ↓</span>\n          );\n        },\n        footer: (cx) => (\n          <div className=\"flex justify-between\">\n            <span>平均年龄: </span>\n            <span>\n              {formatNumber(\n                cx.table\n                  .getRowModel()\n                  .rows.reduce(\n                    (pre, cur) => pre + (cur.getValue(cx.column.id) as number),\n                    0\n                  ) / cx.table.getRowModel().rows.length,\n                \"decimal\"\n              )}\n            </span>\n          </div>\n        ),\n      },\n      {\n        id: \"存款\",\n        header: (cx) => <span className=\"text-pink-500\">存款</span>,\n        size: 200,\n        accessorKey: \"deposit\",\n        cell: (cx) => (\n          <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500\">\n            {formatNumber(cx.getValue(), \"decimal\")}\n          </span>\n        ),\n        footer: (cx) => (\n          <div className=\"flex justify-between text-pink-500\">\n            <span>总计:</span>\n            <span>\n              {formatNumber(\n                cx.table\n                  .getRowModel()\n                  .rows.reduce(\n                    (pre, cur) => pre + (cur.getValue(cx.column.id) as number),\n                    0\n                  ),\n                \"decimal\"\n              )}\n            </span>\n          </div>\n        ),\n      },\n    ],\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} getRowId={(row) => row.id} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableFormatDemo\";\n"
  },
  {
    "name": "DataTableGroupingDemo",
    "code": "import type { ColumnDef, CellContext } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst DepositAggregatedCell = (props: CellContext<Person, any>) => (\n  <div className=\"flex justify-between\">\n    <span>范围:</span>[{props.getValue()[0]}, {props.getValue()[1]}]\n  </div>\n);\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n  {\n    id: \"存款\",\n    header: \"存款\",\n    size: 280,\n    accessorKey: \"deposit\",\n    aggregatedCell: DepositAggregatedCell,\n    aggregationFn: \"extent\",\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} enableGrouping autoExpandAll />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableGroupingDemo\";\n"
  },
  {
    "name": "DataTablePaginationDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: true,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: false,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: false,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  return (\n    <div className=\"h-[600px]\">\n      <DataTable data={data} columns={columns} {...tableProps} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTablePaginationDemo\";\n"
  },
  {
    "name": "DataTableTreePaginationDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n    size: 220,\n    meta: {\n      expandable: true,\n    },\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: true,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: false,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: false,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n  getSubRows: (row) => row.subRows,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50, 3, 2));\n  }, []);\n\n  return (\n    <div className=\"h-[600px]\">\n      <DataTable data={data} columns={columns} {...tableProps} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableTreePaginationDemo\";\n"
  },
  {
    "name": "DataTableClickRowSelectionDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: true,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: true,\n  selectAllForAllPages: true,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  const ref = React.useRef<any>();\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"h-96\">\n        <DataTable\n          ref={ref}\n          data={data}\n          columns={columns}\n          {...tableProps}\n          onRowSelectionChange={setRowSelection}\n          state={{\n            rowSelection,\n          }}\n        />\n      </div>\n      <output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n    </div>\n  );\n}\nDemo.displayName = \"DataTableClickRowSelectionDemo\";\n"
  },
  {
    "name": "DataTableConditioinSelectionDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: (row) => Number(row.id) % 2 === 0,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: true,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"h-96\">\n        <DataTable\n          data={data}\n          columns={columns}\n          {...tableProps}\n          onRowSelectionChange={setRowSelection}\n          state={{\n            rowSelection,\n          }}\n        />\n      </div>\n      <output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n    </div>\n  );\n}\n\nDemo.displayName = \"DataTableConditioinSelectionDemo\";\n"
  },
  {
    "name": "DataTableMultiSelectionDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: true,\n  enableMultiRowSelection: true,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: true,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  const ref = React.useRef<any>();\n\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"h-96\">\n        <DataTable\n          ref={ref}\n          data={data}\n          columns={columns}\n          {...tableProps}\n          onRowSelectionChange={setRowSelection}\n          state={{\n            rowSelection,\n          }}\n        />\n      </div>\n      <output>当前选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n    </div>\n  );\n}\nDemo.displayName = \"DataTableMultiSelectionDemo\";\n"
  },
  {
    "name": "DataTableSelectionDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: true,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: true,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50));\n  }, []);\n\n  const ref = React.useRef<any>();\n\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"h-96\">\n        <DataTable\n          ref={ref}\n          data={data}\n          columns={columns}\n          {...tableProps}\n          onRowSelectionChange={setRowSelection}\n          state={{\n            rowSelection,\n          }}\n        />\n      </div>\n      <output>当前的选择: {JSON.stringify(rowSelection, undefined, 2)}</output>\n    </div>\n  );\n}\nDemo.displayName = \"DataTableSelectionDemo\";\n"
  },
  {
    "name": "DataTableTreeDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable, DataTableProps } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n    size: 180,\n    meta: {\n      expandable: true,\n    },\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\nconst tableProps: Partial<DataTableProps> = {\n  enableVirtualized: false,\n  enablePagination: false,\n  enableColumnReorder: true,\n  enableColumnResizing: true,\n  enableSorting: true,\n  getSubRows: (row: any) => row.subRows,\n  enableGrouping: false,\n  enableFilters: true,\n  filterFromLeafRows: false,\n  enableHiding: true,\n  enableRowSelection: false,\n  enableMultiRowSelection: false,\n  enableSubRowSelection: false,\n  enableClickRowSelection: false,\n  selectAllForAllPages: false,\n  enableStickyHeader: true,\n  enableAutoRowNumber: false,\n  enableExport: true,\n};\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(50, 3, 2));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} {...tableProps} />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableTreeDemo\";\n"
  },
  {
    "name": "DataTableVirtualizedDemo",
    "code": "import type { ColumnDef } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { DataTable } from \"@rtdui/datatable\";\nimport { makePersonData, type Person } from \"../../demoData/makeData\";\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    id: \"ID\",\n    header: \"ID\",\n    accessorKey: \"id\",\n  },\n  {\n    id: \"姓名\",\n    header: \"姓名\",\n    accessorKey: \"fullName\",\n  },\n  {\n    id: \"年龄\",\n    header: \"年龄\",\n    accessorKey: \"age\",\n  },\n];\n\nexport default function Demo() {\n  const [data, setData] = React.useState<Person[]>([]);\n\n  React.useEffect(() => {\n    setData(makePersonData(10000));\n  }, []);\n\n  return (\n    <div className=\"h-96\">\n      <DataTable data={data} columns={columns} enableVirtualized />\n    </div>\n  );\n}\nDemo.displayName = \"DataTableVirtualizedDemo\";\n"
  },
  {
    "name": "DialogBasicDemo",
    "code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { dialogs } from \"@rtdui/dialogs\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是提示框标题\",\n            content: \"这是对话框消息体\",\n            mode: \"alert\",\n          });\n        }}\n      >\n        打开alert框\n      </Button>\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是确认框标题\",\n            content: \"这是对话框消息体\",\n            mode: \"confirm\",\n            onClose: (result) => result && alert(JSON.stringify(result)),\n          });\n        }}\n      >\n        打开Confirm框\n      </Button>\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是输入框标题\",\n            content: \"请输入姓名\",\n            mode: \"prompt\",\n            onClose: (result) => result && alert(JSON.stringify(result)),\n          });\n        }}\n      >\n        打开Prompt框\n      </Button>\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是对话框标题\",\n            content: <div>这是对话框消息体</div>,\n            fullScreen: true,\n            slots: { dialogContent: \"h-[2000px]\", dialogTitle: \"sticky top-0\" },\n          });\n        }}\n      >\n        打开全屏对话框\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"DialogBasicDemo\";\n"
  },
  {
    "name": "DialogLocalizationDemo",
    "code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { dialogs } from \"@rtdui/dialogs\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是提示框标题\",\n            content: \"这是对话框消息体\",\n            mode: \"alert\",\n            closeLabel: \"关闭\",\n          });\n        }}\n      >\n        打开alert框\n      </Button>\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是确认框标题\",\n            content: \"这是对话框消息体\",\n            mode: \"confirm\",\n            onClose: (result) => result && alert(JSON.stringify(result)),\n            cancelLabel: \"取消\",\n            confirmLabel: \"确定\",\n          });\n        }}\n      >\n        打开Confirm框\n      </Button>\n      <Button\n        onClick={() => {\n          dialogs.show({\n            title: \"这是输入框标题\",\n            content: \"请输入姓名\",\n            mode: \"prompt\",\n            onClose: (result) => result && alert(JSON.stringify(result)),\n            cancelLabel: \"取消\",\n            confirmLabel: \"确定\",\n          });\n        }}\n      >\n        打开Prompt框\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"DialogLocalizationDemo\";\n"
  },
  {
    "name": "DrawerBasicDemo",
    "code": "import React from \"react\";\nimport { Button, Drawer } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [leftDrawerOpen, setLeftDrawerOpen] = React.useState(false);\n  const [rightDrawerOpen, setRightDrawerOpen] = React.useState(false);\n\n  return (\n    <div className=\"flex gap-4\">\n      <Button onClick={() => setLeftDrawerOpen(!leftDrawerOpen)}>\n        打开左抽屉\n      </Button>\n      <Drawer\n        anchor=\"left\"\n        open={leftDrawerOpen}\n        onChange={(open) => setLeftDrawerOpen(open)}\n      >\n        <div className=\"w-80 h-full p-4 bg-base-200\">左抽屉</div>\n      </Drawer>\n\n      <Button onClick={() => setRightDrawerOpen(!rightDrawerOpen)}>\n        打开右抽屉\n      </Button>\n      <Drawer\n        anchor=\"right\"\n        open={rightDrawerOpen}\n        onChange={(open) => setRightDrawerOpen(open)}\n      >\n        <div className=\"w-80 h-full p-4 bg-base-200\">右抽屉</div>\n      </Drawer>\n    </div>\n  );\n}\nDemo.displayName = \"DrawerBasicDemo\";\n"
  },
  {
    "name": "DrawerDisabledClickOutsideCloseDemo",
    "code": "import React from \"react\";\nimport { Button, Drawer } from \"@rtdui/core\";\nimport { IconX } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n  return (\n    <div id=\"my-drawer\" className=\"flex gap-4 relative h-56 overflow-hidden\">\n      <Button onClick={() => setDrawerOpen(true)}>打开抽屉</Button>\n      <Drawer\n        anchor=\"right\"\n        clickOutsideClose={false}\n        open={drawerOpen}\n        onChange={(open) => setDrawerOpen(open)}\n      >\n        <div className=\"w-64 h-full flex flex-col gap-4 p-4 bg-base-200\">\n          <div className=\"flex justify-end\">\n            <Button\n              size=\"xs\"\n              sharp=\"circle\"\n              color=\"neutral\"\n              onClick={() => setDrawerOpen(false)}\n            >\n              <IconX size={18} />\n            </Button>\n          </div>\n          <div className=\"flex-1\">点击幕布不会关闭抽屉</div>\n          <div className=\"flex justify-end\">\n            <Button onClick={() => setDrawerOpen(false)}>关闭</Button>\n          </div>\n        </div>\n      </Drawer>\n    </div>\n  );\n}\nDemo.displayName = \"DrawerDisabledClickOutsideCloseDemo\";\n"
  },
  {
    "name": "DrawerTargetDemo",
    "code": "import React from \"react\";\nimport { Button, Drawer } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [leftDrawerOpen, setLeftDrawerOpen] = React.useState(false);\n  const [rightDrawerOpen, setRightDrawerOpen] = React.useState(false);\n\n  return (\n    <div id=\"my-drawer\" className=\"flex gap-4 relative h-56 overflow-hidden\">\n      <Button onClick={() => setLeftDrawerOpen(!leftDrawerOpen)}>\n        打开左抽屉\n      </Button>\n      <Drawer\n        anchor=\"left\"\n        target=\"#my-drawer\"\n        open={leftDrawerOpen}\n        onChange={(open) => setLeftDrawerOpen(open)}\n      >\n        <div className=\"w-56 h-full p-4 bg-base-200\">左抽屉</div>\n      </Drawer>\n      <Button onClick={() => setRightDrawerOpen(!rightDrawerOpen)}>\n        打开右抽屉\n      </Button>\n      <Drawer\n        anchor=\"right\"\n        target=\"#my-drawer\"\n        open={rightDrawerOpen}\n        onChange={(open) => setRightDrawerOpen(open)}\n      >\n        <div className=\"w-56 h-full p-4 bg-base-200\">右抽屉</div>\n      </Drawer>\n    </div>\n  );\n}\nDemo.displayName = \"DrawerTargetDemo\";\n"
  },
  {
    "name": "EditorBasicDemo",
    "code": "import { RichTextEditor } from \"@rtdui/editor\";\nimport { Button } from \"@rtdui/core\";\nimport React from \"react\";\n\nexport default function Demo() {\n  const ref = React.useRef<any>(null!);\n  const refTarget = React.useRef<any>(null!);\n\n  const handleBtnClick = () =>\n    refTarget.current.setContent(ref.current.getJSON());\n\n  return (\n    <div>\n      <RichTextEditor\n        ref={ref}\n        uploadImageUrl=\"/kv/upload\"\n        className=\"border border-base-200 rounded-box bg-base-100 overflow-hidden\"\n        slots={{ toolbar: \"border-b\" }}\n      />\n      <div className=\"my-4 flex items-center gap-2\">\n        <Button color=\"primary\" onClick={handleBtnClick}>\n          保存JSON\n        </Button>\n        <div className=\"bg-base-200 px-4\">\n          点击保存按钮会将上面编辑器的内容保存为JSON,并且被加载到下面的只读编辑器中.\n          <br />\n          这模拟了编辑、保存、阅览的过程\n        </div>\n      </div>\n      <RichTextEditor\n        ref={refTarget}\n        editable={false}\n        className=\"border border-base-200 rounded-box bg-base-100 overflow-hidden\"\n        slots={{ toolbar: \"border-b\" }}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"EditorBasicDemo\";\n"
  },
  {
    "name": "GridAutoDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid>\n      <Grid.Col span={2}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span=\"auto\">\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={6}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridAutoDemo\";\n"
  },
  {
    "name": "GridBasicDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid>\n      <Grid.Col span={2}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={6}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridBasicDemo\";\n"
  },
  {
    "name": "GridGrowDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid grow>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">5</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridGrowDemo\";\n"
  },
  {
    "name": "GridOffsetDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid>\n      <Grid.Col span={3}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={3}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={3} offset={3}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridOffsetDemo\";\n"
  },
  {
    "name": "GridResponsiveGutterDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid gutter={{ base: \"4px\", md: \"16px\", lg: \"48px\" }}>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridResponsiveGutterDemo\";\n"
  },
  {
    "name": "GridResponsiveSpanDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid>\n      <Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n      <Grid.Col span={{ base: 12, sm: 6, md: 4, lg: 3, xl: 2, \"2xl\": 1 }}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridResponsiveSpanDemo\";\n"
  },
  {
    "name": "GridWrapDemo",
    "code": "import { Grid } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Grid>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">1</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">2</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">3</div>\n      </Grid.Col>\n      <Grid.Col span={4}>\n        <div className=\"bg-sky-100 text-sky-600 text-center p-4\">4</div>\n      </Grid.Col>\n    </Grid>\n  );\n}\nDemo.displayName = \"GridWrapDemo\";\n"
  },
  {
    "name": "IndicatorAnimationDemo",
    "code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Indicator animation>\n      <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n        Content\n      </div>\n    </Indicator>\n  );\n}\nDemo.displayName = \"IndicatorAnimationDemo\";\n"
  },
  {
    "name": "IndicatorColorDemo",
    "code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Indicator badgeColor=\"primary\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"secondary\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"accent\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"info\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"success\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"warning\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"error\">\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n    </div>\n  );\n}\nDemo.displayName = \"IndicatorColorDemo\";\n"
  },
  {
    "name": "IndicatorColorWithAnimationDemo",
    "code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Indicator badgeColor=\"primary\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"secondary\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"accent\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"info\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"success\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"warning\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n      <Indicator badgeColor=\"error\" animation>\n        <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n          Content\n        </div>\n      </Indicator>\n    </div>\n  );\n}\nDemo.displayName = \"IndicatorColorWithAnimationDemo\";\n"
  },
  {
    "name": "IndicatorDotDemo",
    "code": "import { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Indicator>\n      <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n        Content\n      </div>\n    </Indicator>\n  );\n}\nDemo.displayName = \"IndicatorDotDemo\";\n"
  },
  {
    "name": "IndicatorTextDemo",
    "code": "import React from \"react\";\nimport { Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Indicator badgeText=\"New\">\n      <div className=\"w-20 h-20 bg-base-200 rounded-lg flex justify-center items-center\">\n        Content\n      </div>\n    </Indicator>\n  );\n}\nDemo.displayName = \"IndicatorTextDemo\";\n"
  },
  {
    "name": "JoinGroupButtonsDemo",
    "code": "import { JionGroup, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <JionGroup>\n      <Button className=\"join-item\">a</Button>\n      <Button className=\"join-item\">b</Button>\n      <Button className=\"join-item\">c</Button>\n    </JionGroup>\n  );\n}\nDemo.displayName = \"JoinGroupButtonsDemo\";\n"
  },
  {
    "name": "JoinGroupInputsDemo",
    "code": "import React from \"react\";\nimport { JionGroup, Button, TextInput, Select, Indicator } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <JionGroup>\n      <TextInput\n        bordered\n        slots={{\n          input:\n            \"join-item focus:outline-offset-[-1px] focus:outline-1 focus:outline-info\",\n        }}\n      />\n      <Select\n        bordered\n        options={[\"Sci-fi\", \"Drama\", \"Action\"]}\n        slots={{\n          input:\n            \"join-item focus:outline-offset-[-1px] focus:outline-1 focus:outline-info\",\n        }}\n      />\n      <Indicator badgeText=\"new\">\n        <Button\n          size=\"sm\"\n          outline\n          className=\"join-item [--tw-border-opacity:.2] border-base-content\"\n        >\n          search\n        </Button>\n      </Indicator>\n    </JionGroup>\n  );\n}\nDemo.displayName = \"JoinGroupInputsDemo\";\n"
  },
  {
    "name": "JsonInputBasicDemo",
    "code": "import React from \"react\";\nimport { JsonInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <JsonInput placeholder=\"输入JSON字符串\" />;\n}\nDemo.displayName = \"JsonInputBasicDemo\";\n"
  },
  {
    "name": "KbdCharacterDemo",
    "code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Kbd>A</Kbd>\n      <Kbd>B</Kbd>\n      <Kbd>C</Kbd>\n      <Kbd>D</Kbd>\n    </div>\n  );\n}\nDemo.displayName = \"KbdCharacterDemo\";\n"
  },
  {
    "name": "KbdCompositeDemo",
    "code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div>\n        <Kbd>ctrl</Kbd>+<Kbd>shift</Kbd>+<Kbd>del</Kbd>\n      </div>\n      <div>\n        <Kbd size=\"xs\">ctrl</Kbd>+<Kbd size=\"xs\">shift</Kbd>+\n        <Kbd size=\"xs\">del</Kbd>\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"KbdCompositeDemo\";\n"
  },
  {
    "name": "KbdSizeDemo",
    "code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Kbd size=\"lg\">Shift</Kbd>\n      <Kbd size=\"md\">Shift</Kbd>\n      <Kbd size=\"sm\">Shift</Kbd>\n      <Kbd size=\"xs\">Shift</Kbd>\n    </div>\n  );\n}\nDemo.displayName = \"KbdSizeDemo\";\n"
  },
  {
    "name": "KbdSymbolDemo",
    "code": "import React from \"react\";\nimport { Kbd } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Kbd>⌘</Kbd>\n      <Kbd>⌥</Kbd>\n      <Kbd>⇧</Kbd>\n      <Kbd>⌃</Kbd>\n    </div>\n  );\n}\nDemo.displayName = \"KbdSymbolDemo\";\n"
  },
  {
    "name": "LinkBasicDemo",
    "code": "import React from \"react\";\nimport { Link } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Link href=\"/\">go</Link>\n    </div>\n  );\n}\nDemo.displayName = \"LinkBasicDemo\";\n"
  },
  {
    "name": "LinkPolymorphicDemo",
    "code": "import React from \"react\";\nimport { Link as RouterLink, NavLink } from \"react-router-dom\";\nimport { Link } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Link as=\"a\" href=\"/\">\n        native anchor\n      </Link>\n      <Link as={RouterLink} to=\"/\">\n        react-router Link\n      </Link>\n      <Link as={NavLink} to=\"/components/link\">\n        react-router NavLink\n      </Link>\n    </div>\n  );\n}\n\nDemo.displayName = \"LinkPolymorphicDemo\";\n"
  },
  {
    "name": "LoadingBallDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"ball\" />\n        <Loading size=\"md\" variant=\"ball\" />\n        <Loading size=\"sm\" variant=\"ball\" />\n        <Loading size=\"xs\" variant=\"ball\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"ball\" color=\"primary\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"secondary\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"accent\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"info\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"success\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"warning\" />\n        <Loading size=\"lg\" variant=\"ball\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingBallDemo\";\n"
  },
  {
    "name": "LoadingBarsDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"bars\" />\n        <Loading size=\"md\" variant=\"bars\" />\n        <Loading size=\"sm\" variant=\"bars\" />\n        <Loading size=\"xs\" variant=\"bars\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"bars\" color=\"primary\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"secondary\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"accent\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"info\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"success\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"warning\" />\n        <Loading size=\"lg\" variant=\"bars\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingBarsDemo\";\n"
  },
  {
    "name": "LoadingDotsDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"dots\" />\n        <Loading size=\"md\" variant=\"dots\" />\n        <Loading size=\"sm\" variant=\"dots\" />\n        <Loading size=\"xs\" variant=\"dots\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"dots\" color=\"primary\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"secondary\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"accent\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"info\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"success\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"warning\" />\n        <Loading size=\"lg\" variant=\"dots\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingDotsDemo\";\n"
  },
  {
    "name": "LoadingInfinityDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"infinity\" />\n        <Loading size=\"md\" variant=\"infinity\" />\n        <Loading size=\"sm\" variant=\"infinity\" />\n        <Loading size=\"xs\" variant=\"infinity\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"infinity\" color=\"primary\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"secondary\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"accent\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"info\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"success\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"warning\" />\n        <Loading size=\"lg\" variant=\"infinity\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingInfinityDemo\";\n"
  },
  {
    "name": "LoadingRingDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"ring\" />\n        <Loading size=\"md\" variant=\"ring\" />\n        <Loading size=\"sm\" variant=\"ring\" />\n        <Loading size=\"xs\" variant=\"ring\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" variant=\"ring\" color=\"primary\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"secondary\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"accent\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"info\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"success\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"warning\" />\n        <Loading size=\"lg\" variant=\"ring\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingRingDemo\";\n"
  },
  {
    "name": "LoadingSpinnerDemo",
    "code": "import React from \"react\";\nimport { Loading } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" />\n        <Loading size=\"md\" />\n        <Loading size=\"sm\" />\n        <Loading size=\"xs\" />\n      </div>\n      <div className=\"flex gap-4\">\n        <Loading size=\"lg\" color=\"primary\" />\n        <Loading size=\"lg\" color=\"secondary\" />\n        <Loading size=\"lg\" color=\"accent\" />\n        <Loading size=\"lg\" color=\"info\" />\n        <Loading size=\"lg\" color=\"success\" />\n        <Loading size=\"lg\" color=\"warning\" />\n        <Loading size=\"lg\" color=\"error\" />\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"LoadingSpinnerDemo\";\n"
  },
  {
    "name": "NotificationBasicDemo",
    "code": "import React from \"react\";\nimport { Button } from \"@rtdui/core\";\nimport { IconX, IconCheck } from \"@tabler/icons-react\";\nimport { notifications } from \"@rtdui/notifications\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Button\n        onClick={() => {\n          notifications.show({\n            title: \"这是通知标题\",\n            content: \"这是通知消息体\",\n            autoClose: false,\n          });\n        }}\n      >\n        禁用自动关闭\n      </Button>\n      <Button\n        onClick={() => {\n          notifications.show({\n            title: \"这是通知标题\",\n            content: \"这是通知消息体\",\n          });\n        }}\n      >\n        显示通知(无图标)\n      </Button>\n      <Button\n        onClick={() => {\n          notifications.show({\n            title: \"这是通知标题\",\n            content: \"这是通知消息体\",\n            icon: <IconX size=\"20\" />,\n            color: \"error\",\n          });\n        }}\n      >\n        显示通知\n      </Button>\n      <Button\n        onClick={() => {\n          notifications.show({\n            id: \"my-test-notifications-id\",\n            content: \"正在处理中...\",\n            loading: true,\n            autoClose: false,\n          });\n          setTimeout(() => {\n            notifications.update({\n              id: \"my-test-notifications-id\",\n              content: \"已处理成功\",\n              color: \"success\",\n              loading: false,\n              icon: <IconCheck size=\"20\" />,\n              autoClose: 4000,\n            });\n          }, 3000);\n        }}\n      >\n        显示通知(loading+更新)\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"NotificationBasicDemo\";\n"
  },
  {
    "name": "NumberInputBasicDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <NumberInput placeholder=\"可以输入任意数字\" />;\n}\nDemo.displayName = \"NumberInputBasicDemo\";\n"
  },
  {
    "name": "NumberInputCustomDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <NumberInput\n      placeholder=\"请输入支付金额(无法输入负数或0)\"\n      isAllowed={(values) => {\n        if (values.value === \"-\" || values.floatValue! <= 0) {\n          return false;\n        }\n        return true;\n      }}\n    />\n  );\n}\nDemo.displayName = \"NumberInputCustomDemo\";\n"
  },
  {
    "name": "NumberInputDecimalScaleDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <NumberInput decimalScale={2} placeholder=\"最大2位小数\" />;\n}\nDemo.displayName = \"NumberInputDecimalScaleDemo\";\n"
  },
  {
    "name": "NumberInputDisabledDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      readOnly:\n      <NumberInput readOnly placeholder=\"只读的\" />\n      disabled:\n      <NumberInput disabled placeholder=\"禁用的\" />\n    </div>\n  );\n}\nDemo.displayName = \"NumberInputDisabledDemo\";\n"
  },
  {
    "name": "NumberInputPositiveDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <NumberInput allowNegative={false} placeholder=\"不允许负数\" />;\n}\nDemo.displayName = \"NumberInputPositiveDemo\";\n"
  },
  {
    "name": "NumberInputPositiveIntegerDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <NumberInput\n      allowNegative={false}\n      allowDecimal={false}\n      placeholder=\"只能是正整数\"\n    />\n  );\n}\nDemo.displayName = \"NumberInputPositiveIntegerDemo\";\n"
  },
  {
    "name": "NumberInputPrefixDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <NumberInput prefix=\"￥\" placeholder=\"自动带￥前缀\" />\n      <NumberInput suffix=\"%\" placeholder=\"自动带%后缀\" />\n    </div>\n  );\n}\nDemo.displayName = \"NumberInputPrefixDemo\";\n"
  },
  {
    "name": "NumberInputRangeDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      blur模式(默认模式)\n      <NumberInput\n        min={10}\n        max={20}\n        step={1}\n        placeholder=\"min为 10, max为 20, step为 1\"\n      />\n      strict模式\n      <NumberInput\n        min={-10}\n        max={20}\n        step={1}\n        clampBehavior=\"strict\"\n        placeholder=\"min为 -10, max为 20, step为 1\"\n      />\n    </div>\n  );\n}\nDemo.displayName = \"NumberInputRangeDemo\";\n"
  },
  {
    "name": "NumberInputThousandsGroupDemo",
    "code": "import { NumberInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <NumberInput\n        thousandsGroupStyle=\"thousand\"\n        placeholder=\"自动千分位显示\"\n      />\n      <NumberInput thousandsGroupStyle=\"wan\" placeholder=\"自动万分位显示\" />\n      <NumberInput thousandsGroupStyle=\"lakh\" placeholder=\"自动百分位显示\" />\n    </div>\n  );\n}\nDemo.displayName = \"NumberInputThousandsGroupDemo\";\n"
  },
  {
    "name": "PaginationBasicDemo",
    "code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Pagination count={10} />;\n}\nDemo.displayName = \"PaginationBasicDemo\";\n"
  },
  {
    "name": "PaginationHiddenButtonsDemo",
    "code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Pagination\n      count={10}\n      showFirstButton={false}\n      showLastButton={false}\n      showPrevButton={false}\n      showNextButton={false}\n    />\n  );\n}\nDemo.displayName = \"PaginationHiddenButtonsDemo\";\n"
  },
  {
    "name": "PaginationHiddenFirstLastButtonDemo",
    "code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Pagination count={10} showFirstButton={false} showLastButton={false} />\n  );\n}\nDemo.displayName = \"PaginationHiddenFirstLastButtonDemo\";\n"
  },
  {
    "name": "PaginationSizeDemo",
    "code": "import { Pagination } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Pagination size=\"xs\" count={10} />\n      <Pagination\n        size=\"xs\"\n        count={10}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n      <Pagination\n        size=\"xs\"\n        count={10}\n        showFirstButton={false}\n        showLastButton={false}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n\n      <Pagination size=\"sm\" count={10} />\n      <Pagination\n        size=\"sm\"\n        count={10}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n      <Pagination\n        size=\"sm\"\n        count={10}\n        showFirstButton={false}\n        showLastButton={false}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n\n      <Pagination size=\"lg\" count={10} />\n      <Pagination\n        size=\"lg\"\n        count={10}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n      <Pagination\n        size=\"lg\"\n        count={10}\n        showFirstButton={false}\n        showLastButton={false}\n        showPrevButton={false}\n        showNextButton={false}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"PaginationSizeDemo\";\n"
  },
  {
    "name": "PopoverArrowDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-8 items-center\">\n      <Popover>\n        <Popover.Trigger>\n          <Button>popover</Button>\n        </Popover.Trigger>\n        <Popover.Dropdown showArrow slots={{ arrow: \"fill-primary\" }}>\n          <div className=\"w-56 h-30 bg-primary text-primary-content p-8 rounded-box\">\n            dropdown content\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n    </div>\n  );\n}\nDemo.displayName = \"PopoverArrowDemo\";\n"
  },
  {
    "name": "PopoverBasicDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\nimport { IconBell } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-8 items-center\">\n      <Popover>\n        <Popover.Trigger>\n          <Button>popover</Button>\n        </Popover.Trigger>\n        <Popover.Dropdown>\n          <div className=\"w-72 h-40 bg-base-200 p-8 rounded-box\">\n            dropdown content\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n\n      <Popover>\n        <Popover.Trigger>\n          <Button ghost sharp=\"circle\">\n            <IconBell />\n          </Button>\n        </Popover.Trigger>\n        <Popover.Dropdown>\n          <div className=\"w-72 h-40 bg-base-200 p-8 rounded-box\">\n            dropdown content\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n    </div>\n  );\n}\nDemo.displayName = \"PopoverBasicDemo\";\n"
  },
  {
    "name": "PopoverControlledDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <Popover.Trigger>\n        <Button onClick={(e) => setOpen(true)}>popover</Button>\n      </Popover.Trigger>\n      <Popover.Dropdown>\n        <div className=\"w-80 h-40 bg-base-200 p-8 rounded-box\">abcdefg</div>\n      </Popover.Dropdown>\n    </Popover>\n  );\n}\nDemo.displayName = \"PopoverControlledDemo\";\n"
  },
  {
    "name": "PopoverFocusDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Popover openOnFocus>\n      <Popover.Trigger>\n        <Button>popover</Button>\n      </Popover.Trigger>\n      <Popover.Dropdown>\n        <div className=\"w-72 h-40 bg-base-200 p-8 rounded-box\">\n          dropdown content\n        </div>\n      </Popover.Dropdown>\n    </Popover>\n  );\n}\nDemo.displayName = \"PopoverFocusDemo\";\n"
  },
  {
    "name": "PopoverFocusTrapDemo",
    "code": "import React from \"react\";\nimport { Popover, Button, TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Popover focusTrap>\n      <Popover.Trigger>\n        <Button>popover</Button>\n      </Popover.Trigger>\n      <Popover.Dropdown>\n        <form className=\"flex flex-col gap-4 bg-base-200 w-80 p-8 rounded-box\">\n          <div className=\"flex justify-center items-center text-lg p-2\">\n            登录\n          </div>\n          <TextInput label=\"UserName\" />\n          <TextInput label=\"Password\" />\n          <Button color=\"primary\" className=\"mt-4\">\n            Submit\n          </Button>\n        </form>\n      </Popover.Dropdown>\n    </Popover>\n  );\n}\nDemo.displayName = \"PopoverFocusTrapDemo\";\n"
  },
  {
    "name": "PopoverHoverDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Popover openOnHover>\n      <Popover.Trigger>\n        <Button>popover</Button>\n      </Popover.Trigger>\n      <Popover.Dropdown>\n        <div className=\"w-72 h-40 bg-base-200 p-8 rounded-box\">\n          dropdown content\n        </div>\n      </Popover.Dropdown>\n    </Popover>\n  );\n}\nDemo.displayName = \"PopoverHoverDemo\";\n"
  },
  {
    "name": "PopoverTransitionDemo",
    "code": "import React from \"react\";\nimport { Popover, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-8 items-center\">\n      <Popover transition=\"slide-up\">\n        <Popover.Trigger>\n          <Button>popover</Button>\n        </Popover.Trigger>\n        <Popover.Dropdown showArrow slots={{ arrow: \"fill-primary\" }}>\n          <div className=\"w-56 h-30 bg-primary text-primary-content p-8 rounded-box\">\n            slide-up\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n\n      <Popover transition=\"scale\">\n        <Popover.Trigger>\n          <Button>popover</Button>\n        </Popover.Trigger>\n        <Popover.Dropdown showArrow slots={{ arrow: \"fill-primary\" }}>\n          <div className=\"w-56 h-30 bg-primary text-primary-content p-8 rounded-box\">\n            scale\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n    </div>\n  );\n}\nDemo.displayName = \"PopoverTransitionDemo\";\n"
  },
  {
    "name": "ProgressAnimationDemo",
    "code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Progress color=\"primary\" />\n      <Progress color=\"secondary\" />\n      <Progress color=\"accent\" />\n      <Progress color=\"info\" />\n      <Progress color=\"success\" />\n      <Progress color=\"warning\" />\n      <Progress color=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"ProgressAnimationDemo\";\n"
  },
  {
    "name": "ProgressColorDemo",
    "code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Progress value={10} color=\"primary\" />\n      <Progress value={30} color=\"secondary\" />\n      <Progress value={40} color=\"accent\" />\n      <Progress value={70} color=\"info\" />\n      <Progress value={80} color=\"success\" />\n      <Progress value={90} color=\"warning\" />\n      <Progress value={100} color=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"ProgressColorDemo\";\n"
  },
  {
    "name": "ProgressSizeDemo",
    "code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Progress value={70} size=\"lg\" />\n      <Progress value={70} size=\"md\" />\n      <Progress value={70} size=\"sm\" />\n      <Progress value={70} size=\"xs\" />\n    </div>\n  );\n}\nDemo.displayName = \"ProgressSizeDemo\";\n"
  },
  {
    "name": "ProgressValuesDemo",
    "code": "import React from \"react\";\nimport { Progress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Progress value={0} />\n      <Progress value={10} />\n      <Progress value={40} />\n      <Progress value={70} />\n    </div>\n  );\n}\nDemo.displayName = \"ProgressValuesDemo\";\n"
  },
  {
    "name": "QRCodeBasicDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <QRCode value={value} />\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeBasicDemo\";\n"
  },
  {
    "name": "QRCodeColorDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <div className=\"flex gap-4\">\n        <QRCode value={value} fgColor=\"green\" />\n        <QRCode value={value} fgColor=\"blue\" />\n        <QRCode value={value} fgColor=\"#C71585\" />\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeColorDemo\";\n"
  },
  {
    "name": "QRCodeDownloadDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { Button, TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  const id = React.useId();\n  const downloadQRCode = () => {\n    const canvas = document\n      .getElementById(id)!\n      .querySelector<HTMLCanvasElement>(\"canvas\");\n    if (canvas) {\n      const url = canvas.toDataURL();\n      const a = document.createElement(\"a\");\n      a.download = \"QRCode.png\";\n      a.href = url;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n  return (\n    <div id={id} className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <QRCode value={value} />\n      <Button\n        type=\"button\"\n        color=\"primary\"\n        className=\"self-start\"\n        onClick={downloadQRCode}\n      >\n        下载二维码\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeDownloadDemo\";\n"
  },
  {
    "name": "QRCodeIconDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <QRCode value={value} icon=\"/rtdui.svg\" />\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeIconDemo\";\n"
  },
  {
    "name": "QRCodeLevelDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <div className=\"flex gap-4\">\n        <QRCode value={value} level=\"L\" />\n        <QRCode value={value} level=\"M\" />\n        <QRCode value={value} level=\"Q\" />\n        <QRCode value={value} level=\"H\" />\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeLevelDemo\";\n"
  },
  {
    "name": "QRCodeRefreshDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput } from \"@rtdui/core\";\n\nfunction randomString(length: number, chars = \"abcdefghijklmnopqrstuvwxyz\") {\n  let result = \"\";\n  for (let i = length; i > 0; --i)\n    result += chars[Math.floor(Math.random() * chars.length)];\n  return result;\n}\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  const noise = randomString(6);\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <QRCode\n        value={value}\n        onRefresh={() =>\n          setValue(`https://example.com/?query=1&noise=${noise}`)\n        }\n      />\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeRefreshDemo\";\n"
  },
  {
    "name": "QRCodeSizeDemo",
    "code": "import React from \"react\";\nimport { QRCode } from \"@rtdui/qr-code\";\nimport { TextInput, Slider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(\"https://example.com/?query=1\");\n  const [size, setSize] = React.useState(160);\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <TextInput value={value} onChange={(e) => setValue(e.target.value)} />\n      <Slider\n        color=\"primary\"\n        min={60}\n        max={320}\n        step={10}\n        value={size}\n        onChange={setSize}\n      />\n      <QRCode value={value} size={size} icon=\"/rtdui.svg\" iconSize={size / 4} />\n    </div>\n  );\n}\nDemo.displayName = \"QRCodeSizeDemo\";\n"
  },
  {
    "name": "RadialProgressColorDemo",
    "code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <RadialProgress value={10} color=\"primary\" />\n      <RadialProgress value={20} color=\"secondary\" />\n      <RadialProgress value={30} color=\"accent\" />\n      <RadialProgress value={40} color=\"info\" />\n      <RadialProgress value={50} color=\"success\" />\n      <RadialProgress value={60} color=\"warning\" />\n      <RadialProgress value={70} color=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"RadialProgressColorDemo\";\n"
  },
  {
    "name": "RadialProgressCustomBackgroundDemo",
    "code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <RadialProgress value={70} className=\"!bg-blue-600 !text-blue-300\" />\n      <RadialProgress value={70} className=\"!bg-green-600 !text-green-300\" />\n      <RadialProgress value={70} className=\"!bg-yellow-600 !text-yellow-300\" />\n      <RadialProgress value={70} className=\"!bg-red-600 !text-red-300\" />\n      <RadialProgress value={70} className=\"!bg-pink-600 !text-pink-300\" />\n    </div>\n  );\n}\nDemo.displayName = \"RadialProgressCustomBackgroundDemo\";\n"
  },
  {
    "name": "RadialProgressCustomSizeDemo",
    "code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <RadialProgress value={70} size=\"12rem\" thickness=\"14px\" />;\n}\nDemo.displayName = \"RadialProgressCustomSizeDemo\";\n"
  },
  {
    "name": "RadialProgressValueDemo",
    "code": "import React from \"react\";\nimport { RadialProgress } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <RadialProgress value={0} />\n      <RadialProgress value={10} />\n      <RadialProgress value={40} />\n      <RadialProgress value={70} />\n    </div>\n  );\n}\nDemo.displayName = \"RadialProgressValueDemo\";\n"
  },
  {
    "name": "RadioColorDemo",
    "code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Radio defaultChecked label=\"default\" />\n      <Radio defaultChecked color=\"primary\" label=\"primary\" />\n      <Radio defaultChecked color=\"secondary\" label=\"secondary\" />\n      <Radio defaultChecked color=\"accent\" label=\"accent\" />\n      <Radio defaultChecked color=\"info\" label=\"info\" />\n      <Radio defaultChecked color=\"success\" label=\"success\" />\n      <Radio defaultChecked color=\"warning\" label=\"warning\" />\n      <Radio defaultChecked color=\"error\" label=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"RadioColorDemo\";\n"
  },
  {
    "name": "RadioGroupColorAndSizeDemo",
    "code": "import React from \"react\";\nimport { RadioGroup, Radio, Divider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <Divider>Size</Divider>\n      <RadioGroup\n        size=\"xs\"\n        color=\"primary\"\n        name=\"radioGroup1\"\n        label=\"xs size\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n      <RadioGroup\n        color=\"secondary\"\n        name=\"radioGroup2\"\n        label=\"sm size\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n      <RadioGroup\n        size=\"md\"\n        color=\"accent\"\n        name=\"radioGroup3\"\n        label=\"md size\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n      <RadioGroup\n        size=\"lg\"\n        color=\"info\"\n        name=\"radioGroup4\"\n        label=\"lg size\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n\n      <Divider>Color</Divider>\n      <RadioGroup\n        color=\"success\"\n        name=\"radioGroup5\"\n        label=\"这是RadioGroup标签\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n      <RadioGroup\n        color=\"warning\"\n        name=\"radioGroup6\"\n        label=\"这是RadioGroup标签\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n      <RadioGroup\n        color=\"error\"\n        name=\"radioGroup7\"\n        label=\"这是RadioGroup标签\"\n        helperText=\"(这是RadioGroup的帮助文本)\"\n      >\n        <Radio value={1} label=\"Radio标签1\" />\n        <Radio value={2} label=\"Radio标签2\" />\n        <Radio value={3} label=\"Radio标签3\" />\n        <Radio value={4} label=\"Radio标签4\" />\n      </RadioGroup>\n    </div>\n  );\n}\nDemo.displayName = \"RadioGroupColorAndSizeDemo\";\n"
  },
  {
    "name": "RadioGroupDemo",
    "code": "import React from \"react\";\nimport { RadioGroup, Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [radioGroupValue, setRadioGroupValue] = React.useState<string | number>(\n    1\n  );\n  return (\n    <RadioGroup\n      color=\"primary\"\n      name=\"controlledRadioGroup\"\n      value={radioGroupValue}\n      onChange={setRadioGroupValue}\n      label=\"这是RadioGroup标签\"\n      helperText=\"(这是RadioGroup的帮助文本)\"\n    >\n      <Radio value={1} label=\"Radio标签1\" />\n      <Radio value={2} label=\"Radio标签2\" />\n      <Radio value={3} label=\"Radio标签3\" />\n      <Radio value={4} label=\"Radio标签4\" />\n    </RadioGroup>\n  );\n}\nDemo.displayName = \"RadioGroupDemo\";\n"
  },
  {
    "name": "RadioGroupUnControlledDemo",
    "code": "import { RadioGroup, Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup\n      color=\"primary\"\n      name=\"unControlledRadioGroup\"\n      defaultValue=\"a\"\n      label=\"这是RadioGroup\"\n    >\n      <Radio value=\"a\" label=\"这是标签1\" />\n      <Radio value=\"b\" label=\"这是标签2\" />\n      <Radio value=\"c\" label=\"这是标签3\" />\n      <Radio value=\"d\" label=\"这是标签4\" />\n    </RadioGroup>\n  );\n}\nDemo.displayName = \"RadioGroupUnControlledDemo\";\n"
  },
  {
    "name": "RadioLabelDemo",
    "code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Radio required label=\"这是标签\" helperText=\"(这是帮助文本)\" />;\n}\nDemo.displayName = \"RadioLabelDemo\";\n"
  },
  {
    "name": "RadioSizeDemo",
    "code": "import { Radio } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Radio size=\"xs\" label=\"xs\" />\n      <Radio size=\"sm\" label=\"sm\" />\n      <Radio size=\"md\" label=\"md\" />\n      <Radio size=\"lg\" label=\"lg\" />\n    </div>\n  );\n}\nDemo.displayName = \"RadioSizeDemo\";\n"
  },
  {
    "name": "RatingBasicDemo",
    "code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />;\n}\nDemo.displayName = \"RatingBasicDemo\";\n"
  },
  {
    "name": "RatingControlledDemo",
    "code": "import React from \"react\";\nimport { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(2);\n  return (\n    <>\n      <Rating half value={value} onChange={setValue} />\n      <div>当前星级: {value}</div>\n    </>\n  );\n}\nDemo.displayName = \"RatingControlledDemo\";\n"
  },
  {
    "name": "RatingCustomColorDemo",
    "code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />\n      <Rating defaultValue={2} slots={{ star: \"bg-info\" }} />\n      <Rating defaultValue={2} slots={{ star: \"bg-yellow-400\" }} />\n      <Rating defaultValue={2} slots={{ star: \"bg-purple-500\" }} />\n      <Rating defaultValue={2} slots={{ star: \"bg-pink-500\" }} />\n      <Rating defaultValue={2} slots={{ star: \"bg-primary\" }} />\n    </div>\n  );\n}\nDemo.displayName = \"RatingCustomColorDemo\";\n"
  },
  {
    "name": "RatingHalfDemo",
    "code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Rating defaultValue={2} half />;\n}\nDemo.displayName = \"RatingHalfDemo\";\n"
  },
  {
    "name": "RatingSizeDemo",
    "code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Rating size=\"xs\" defaultValue={2} />\n      <Rating size=\"sm\" defaultValue={2} />\n      <Rating size=\"md\" defaultValue={2} />\n      <Rating size=\"lg\" defaultValue={2} />\n    </div>\n  );\n}\nDemo.displayName = \"RatingSizeDemo\";\n"
  },
  {
    "name": "RatingStarDemo",
    "code": "import { Rating } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Rating defaultValue={2} />\n      <Rating defaultValue={2} star=\"star\" />\n      <Rating defaultValue={2} star=\"heart\" />\n    </div>\n  );\n}\nDemo.displayName = \"RatingStarDemo\";\n"
  },
  {
    "name": "SelectColorDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Select color=\"primary\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"secondary\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"accent\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"info\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"success\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"warning\" options={fruits} className=\"min-w-52\" />\n      <Select color=\"error\" options={fruits} className=\"min-w-52\" />\n    </div>\n  );\n}\nDemo.displayName = \"SelectColorDemo\";\n"
  },
  {
    "name": "SelectDisabledDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return <Select disabled options={fruits} />;\n}\nDemo.displayName = \"SelectDisabledDemo\";\n"
  },
  {
    "name": "SelectInFormDemo",
    "code": "import React from \"react\";\nimport { Select, Button } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa Sprouts xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  const [output, setOutput] = React.useState(\"\");\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const data = Object.fromEntries(\n      new FormData(e.target as HTMLFormElement).entries()\n    );\n    setOutput(JSON.stringify(data, undefined, 2));\n  };\n  return (\n    <form onSubmit={handleFormSubmit} className=\"flex flex-col gap-4\">\n      <Select name=\"mySelect\" color=\"primary\" options={fruits} />\n      <Button type=\"submit\">提交</Button>\n      <output className=\"my-4 flex flex-col gap-4\">\n        output:\n        <pre className=\"bg-base-100\">{output}</pre>\n      </output>\n    </form>\n  );\n}\nDemo.displayName = \"SelectInFormDemo\";\n"
  },
  {
    "name": "SelectLabelDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <Select\n      required\n      label=\"这是标签\"\n      helperText=\"(这是帮助文本)\"\n      options={fruits}\n    />\n  );\n}\nDemo.displayName = \"SelectLabelDemo\";\n"
  },
  {
    "name": "SelectMultipleDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <Select\n      multiple\n      options={fruits}\n      onChange={(val) => console.log(\"select多选:\", val)}\n    />\n  );\n}\nDemo.displayName = \"SelectMultipleDemo\";\n"
  },
  {
    "name": "SelectReadonlyDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return <Select readOnly options={fruits} />;\n}\nDemo.displayName = \"SelectReadonlyDemo\";\n"
  },
  {
    "name": "SelectSectionDemo",
    "code": "import { Select, Button } from \"@rtdui/core\";\nimport { IconAt, IconSend } from \"@tabler/icons-react\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <Select\n      required\n      size=\"sm\"\n      placeholder=\"--请选择--\"\n      label=\"这是标签\"\n      helperText=\"(这是帮助文本)\"\n      options={fruits}\n      leftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n      rightSection={\n        <Button color=\"primary\" size=\"sm\" sharp=\"square\">\n          <IconSend size=\"1rem\" />\n        </Button>\n      }\n    />\n  );\n}\nDemo.displayName = \"SelectSectionDemo\";\n"
  },
  {
    "name": "SelectSizeDemo",
    "code": "import { Select } from \"@rtdui/core\";\n\nconst fruits = [\n  \"Alfalfa\",\n  \"Apple\",\n  \"Apricot\",\n  \"Artichoke\",\n  \"Asian Pear\",\n  \"Asparagus\",\n  \"Atemoya\",\n  \"Avocado\",\n  \"Bamboo Shoots\",\n  \"Banana\",\n  \"Bean Sprouts\",\n  \"Beans\",\n  \"Beets\",\n  \"Belgian Endive\",\n  \"Bell Peppers\",\n  \"Bitter Melon\",\n  \"Blackberries\",\n  \"Blueberries\",\n  \"Bok Choy\",\n  \"Boniato\",\n  \"Boysenberries\",\n  \"Broccoflower\",\n  \"Broccoli\",\n  \"Brussels Sprouts\",\n  \"Cabbage\",\n  \"Cactus Pear\",\n  \"Cantaloupe\",\n  \"Carambola\",\n  \"Carrots\",\n  \"Casaba Melon\",\n  \"Cauliflower\",\n  \"Celery\",\n  \"Chayote\",\n  \"Cherimoya\",\n  \"Cherries\",\n  \"Coconuts\",\n  \"Collard Greens\",\n  \"Corn\",\n  \"Cranberries\",\n  \"Cucumber\",\n  \"Dates\",\n  \"Dried Plums\",\n  \"Eggplant\",\n  \"Endive\",\n  \"Escarole\",\n  \"Feijoa\",\n  \"Fennel\",\n  \"Figs\",\n  \"Garlic\",\n  \"Gooseberries\",\n  \"Grapefruit\",\n  \"Grapes\",\n  \"Green Beans\",\n  \"Green Onions\",\n  \"Greens\",\n  \"Guava\",\n  \"Hominy\",\n  \"Honeydew Melon\",\n  \"Horned Melon\",\n  \"Iceberg Lettuce\",\n  \"Jerusalem Artichoke\",\n  \"Jicama\",\n  \"Kale\",\n  \"Kiwifruit\",\n  \"Kohlrabi\",\n  \"Kumquat\",\n  \"Leeks\",\n  \"Lemons\",\n  \"Lettuce\",\n  \"Lima Beans\",\n  \"Limes\",\n  \"Longan\",\n  \"Loquat\",\n  \"Lychee\",\n  \"Madarins\",\n  \"Malanga\",\n  \"Mandarin Oranges\",\n  \"Mangos\",\n  \"Mulberries\",\n  \"Mushrooms\",\n  \"Napa\",\n  \"Nectarines\",\n  \"Okra\",\n  \"Onion\",\n  \"Oranges\",\n  \"Papayas\",\n  \"Parsnip\",\n  \"Passion Fruit\",\n  \"Peaches\",\n  \"Pears\",\n  \"Peas\",\n  \"Peppers\",\n  \"Persimmons\",\n  \"Pineapple\",\n  \"Plantains\",\n  \"Plums\",\n  \"Pomegranate\",\n  \"Potatoes\",\n  \"Prickly Pear\",\n  \"Prunes\",\n  \"Pummelo\",\n  \"Pumpkin\",\n  \"Quince\",\n  \"Radicchio\",\n  \"Radishes\",\n  \"Raisins\",\n  \"Raspberries\",\n  \"Red Cabbage\",\n  \"Rhubarb\",\n  \"Romaine Lettuce\",\n  \"Rutabaga\",\n  \"Shallots\",\n  \"Snow Peas\",\n  \"Spinach\",\n  \"Sprouts\",\n  \"Squash\",\n  \"Strawberries\",\n  \"String Beans\",\n  \"Sweet Potato\",\n  \"Tangelo\",\n  \"Tangerines\",\n  \"Tomatillo\",\n  \"Tomato\",\n  \"Turnip\",\n  \"Ugli Fruit\",\n  \"Water Chestnuts\",\n  \"Watercress\",\n  \"Watermelon\",\n  \"Waxed Beans\",\n  \"Yams\",\n  \"Yellow Squash\",\n  \"Yuca/Cassava\",\n  \"Zucchini Squash\",\n];\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <Select size=\"xs\" options={fruits} className=\"min-w-52\" />\n      <Select size=\"sm\" options={fruits} className=\"min-w-52\" />\n      <Select size=\"md\" options={fruits} className=\"min-w-52\" />\n      <Select size=\"lg\" options={fruits} className=\"min-w-52\" />\n    </div>\n  );\n}\nDemo.displayName = \"SelectSizeDemo\";\n"
  },
  {
    "name": "SkeletonBasicDemo",
    "code": "import React from \"react\";\nimport { Skeleton } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 bg-base-100 p-4\">\n      <div className=\"flex gap-4\">\n        <Skeleton circle className=\"w-10 h-10\" />\n        <div className=\"flex-grow flex flex-col gap-4\">\n          <Skeleton paragraph className=\"h-2\" />\n          <Skeleton paragraph className=\"h-2\" />\n          <Skeleton paragraph className=\"w-9/12 h-2\" />\n        </div>\n      </div>\n      <div className=\"flex gap-4\">\n        <Skeleton box className=\"w-full h-20\" />\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"SkeletonBasicDemo\";\n"
  },
  {
    "name": "SliderBasicDemo",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      <Slider defaultValue={35} />\n      <RangeSlider defaultValue={[35, 65]} />\n    </div>\n  );\n}\nDemo.displayName = \"SliderBasicDemo\";\n"
  },
  {
    "name": "SliderColorDemo",
    "code": "import React from \"react\";\nimport { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [color, setColor] = React.useState(\"#0000ff\");\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      <input\n        type=\"color\"\n        value={color}\n        onChange={(e) => setColor(e.target.value)}\n      />\n      <Slider defaultValue={35} color={color} />\n      <RangeSlider defaultValue={[35, 65]} color={color} />\n    </div>\n  );\n}\nDemo.displayName = \"SliderColorDemo\";\n"
  },
  {
    "name": "SliderCustomDemo",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nconst marks = [\n  { value: 20, label: \"20%\" },\n  { value: 50, label: \"50%\" },\n  { value: 80, label: \"80%\" },\n];\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      <Slider\n        defaultValue={35}\n        labelAlwaysOn\n        marks={marks}\n        slots={{\n          track: \"before:!bg-teal-200\",\n          bar: \"!bg-purple-500\",\n          mark: \"!bg-purple-500\",\n          markLabel: \"!text-yellow-500\",\n          thumb: \"!border-red-500\",\n          label: \"!bg-green-500\",\n        }}\n      />\n      <RangeSlider\n        defaultValue={[35, 65]}\n        labelAlwaysOn\n        marks={marks}\n        slots={{\n          track: \"before:!bg-teal-200\",\n          bar: \"!bg-purple-500\",\n          mark: \"!bg-purple-500\",\n          markLabel: \"!text-yellow-500\",\n          thumb: \"!border-red-500\",\n          label: \"!bg-green-500\",\n        }}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"SliderCustomDemo\";\n"
  },
  {
    "name": "SliderDisabledDemo",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-4\">\n      <Slider disabled labelAlwaysOn defaultValue={35} />\n      <RangeSlider disabled labelAlwaysOn defaultValue={[35, 65]} />\n    </div>\n  );\n}\nDemo.displayName = \"SliderDisabledDemo\";\n"
  },
  {
    "name": "SliderInvertedDemo",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      <Slider inverted defaultValue={35} />\n      <RangeSlider inverted defaultValue={[35, 65]} />\n    </div>\n  );\n}\nDemo.displayName = \"SliderInvertedDemo\";\n"
  },
  {
    "name": "SliderLabelsDeme",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      no label\n      <Slider defaultValue={35} label={null} />\n      <RangeSlider defaultValue={[35, 65]} label={null} />\n      custom label\n      <Slider defaultValue={35} label={(v) => `${v} °C`} />\n      <RangeSlider defaultValue={[35, 65]} label={(v) => `${v} °C`} />\n      always visible\n      <Slider defaultValue={35} labelAlwaysOn label={(v) => `${v} °C`} />\n      <RangeSlider\n        defaultValue={[35, 65]}\n        labelAlwaysOn\n        label={(v) => `${v} °C`}\n      />\n      label transition\n      <Slider\n        defaultValue={35}\n        label={(v) => `${v} °C`}\n        labelTransitionProps={{ transition: \"expand\" }}\n      />\n      <RangeSlider\n        defaultValue={[35, 65]}\n        label={(v) => `${v} °C`}\n        labelTransitionProps={{ transition: \"expand\" }}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"SliderLabelsDeme\";\n"
  },
  {
    "name": "SliderMarksDemo",
    "code": "import { Slider, RangeSlider } from \"@rtdui/core\";\n\nconst marks = [{ value: 20 }, { value: 50 }, { value: 80 }];\n\nconst marksWithLabel = [\n  { value: 20, label: \"20%\" },\n  { value: 50, label: \"50%\" },\n  { value: 80, label: \"80%\" },\n];\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-10 py-8\">\n      <Slider defaultValue={35} marks={marks} />\n      <Slider defaultValue={45} marks={marksWithLabel} />\n      <RangeSlider defaultValue={[35, 65]} marks={marks} />\n      <RangeSlider defaultValue={[45, 75]} marks={marksWithLabel} />\n    </div>\n  );\n}\nDemo.displayName = \"SliderMarksDemo\";\n"
  },
  {
    "name": "SliderOnChangeEndDemo",
    "code": "import React from \"react\";\nimport { Slider } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(35);\n  const [endValue, setEndValue] = React.useState(35);\n  return (\n    <div className=\"flex flex-col gap-6 py-8\">\n      <Slider value={value} onChange={setValue} onChangeEnd={setEndValue} />\n      <output>\n        onChange value: <b>{value}</b>\n      </output>\n      <output>\n        onChangeEnd value: <b>{endValue}</b>\n      </output>\n    </div>\n  );\n}\nDemo.displayName = \"SliderOnChangeEndDemo\";\n"
  },
  {
    "name": "SliderSlotsDemo",
    "code": "import React from \"react\";\nimport { RangeSlider } from \"@rtdui/core\";\n\nconst marks = [\n  { value: 20, label: \"20%\" },\n  { value: 50, label: \"50%\" },\n  { value: 80, label: \"80%\" },\n];\n\nconst outline = \"!outline !outline-2 !outline-offset-1 !outline-red-500\";\nexport default function Demo() {\n  const [slots, setSlots] = React.useState({});\n  return (\n    <div className=\"flex flex-col gap-12 py-4\">\n      <div className=\"flex flex-wrap gap-4 bg-base-200 rounded-box p-4\">\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              root: outline,\n            })\n          }\n        >\n          root\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              trackContainer: outline,\n            })\n          }\n        >\n          trackContainer\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              track: outline,\n            })\n          }\n        >\n          track\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              bar: outline,\n            })\n          }\n        >\n          bar\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              mark: outline,\n            })\n          }\n        >\n          mark\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              markLabel: outline,\n            })\n          }\n        >\n          markLabel\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              thumb: outline,\n            })\n          }\n        >\n          thumb\n        </div>\n        <div\n          className=\"cursor-pointer\"\n          onClick={() =>\n            setSlots({\n              label: outline,\n            })\n          }\n        >\n          label\n        </div>\n      </div>\n      <RangeSlider\n        id=\"tours\"\n        defaultValue={[35, 65]}\n        labelAlwaysOn\n        marks={marks}\n        slots={slots}\n      />\n    </div>\n  );\n}\nDemo.displayName = \"SliderSlotsDemo\";\n"
  },
  {
    "name": "StatPanelActionDemo",
    "code": "import React from \"react\";\nimport { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const handleActionClick = (val: any) => {\n    ref.current.innerText = val;\n  };\n  const items = [\n    {\n      figure: <IconInfoCircle />,\n      title: \"Total Page Views\",\n      value: \"89,400\",\n      desc: \"21% more than last month\",\n      actions: (\n        <div className=\"flex items-center gap-4\">\n          <Button\n            size=\"sm\"\n            color=\"primary\"\n            onClick={(e) => handleActionClick(\"基础款\")}\n          >\n            基础款\n          </Button>\n          <Button\n            size=\"sm\"\n            color=\"secondary\"\n            onClick={(e) => handleActionClick(\"专业款\")}\n          >\n            专业款\n          </Button>\n        </div>\n      ),\n    },\n    {\n      figure: <IconInfoCircle />,\n      title: \"Total Likes\",\n      value: \"25.6K\",\n      desc: \"21% more than last month\",\n    },\n    {\n      figure: <IconInfoCircle />,\n      title: \"Downloads\",\n      value: \"31K\",\n      desc: \"Jan 1st - Feb 1st\",\n    },\n  ];\n\n  const ref = React.useRef<HTMLSpanElement>(null!);\n\n  return (\n    <>\n      <StatPanel items={items} />\n      <div>\n        console: <span ref={ref}></span>\n      </div>\n    </>\n  );\n}\nDemo.displayName = \"StatPanelActionDemo\";\n"
  },
  {
    "name": "StatPanelBackgroundDemo",
    "code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Page Views\",\n    value: \"89,400\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Likes\",\n    value: \"25.6K\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Downloads\",\n    value: \"31K\",\n    desc: \"Jan 1st - Feb 1st\",\n  },\n];\n\nexport default function Demo() {\n  return <StatPanel items={items} className=\"bg-info\" />;\n}\nDemo.displayName = \"StatPanelBackgroundDemo\";\n"
  },
  {
    "name": "StatPanelBasicDemo",
    "code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Page Views\",\n    value: \"89,400\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Likes\",\n    value: \"25.6K\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Downloads\",\n    value: \"31K\",\n    desc: \"Jan 1st - Feb 1st\",\n  },\n];\n\nexport default function Demo() {\n  return <StatPanel items={items} />;\n}\nDemo.displayName = \"StatPanelBasicDemo\";\n"
  },
  {
    "name": "StatPanelItemsDemo",
    "code": "import { StatPanel, Avatar } from \"@rtdui/core\";\n\nconst items = [\n  {\n    figure: <Avatar size=\"lg\" src=\"/photo-1534528741775-53994a69daeb.jpg\" />,\n    title: <span className=\"text-xl\">Total Page Views</span>,\n    value: <span className=\"text-secondary\">89,400</span>,\n    desc: <span className=\"text-sm\">21% more than last month</span>,\n  },\n  {\n    figure: (\n      <img\n        alt=\"avatar\"\n        src=\"/photo-1534528741775-53994a69daeb.jpg\"\n        width={100}\n        height={100}\n        className=\"rounded-box\"\n      />\n    ),\n    title: <span className=\"text-xl\">Total Page Views</span>,\n    value: <span className=\"text-secondary\">89,400</span>,\n    desc: <span className=\"text-sm\">21% more than last month</span>,\n  },\n];\n\nexport default function Demo() {\n  return <StatPanel items={items} />;\n}\nDemo.displayName = \"StatPanelItemsDemo\";\n"
  },
  {
    "name": "StatPanelSlotsDemo",
    "code": "import { IconInfoCircle } from \"@tabler/icons-react\";\nimport { StatPanel } from \"@rtdui/core\";\n\nconst items = [\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Page Views\",\n    value: \"89,400\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Total Likes\",\n    value: \"25.6K\",\n    desc: \"21% more than last month\",\n  },\n  {\n    figure: <IconInfoCircle />,\n    title: \"Downloads\",\n    value: \"31K\",\n    desc: \"Jan 1st - Feb 1st\",\n  },\n];\n\nexport default function Demo() {\n  return (\n    <StatPanel\n      items={items}\n      slots={{\n        figure: \"text-primary\",\n        title: \"text-xl\",\n        value: \"text-secondary\",\n        desc: \"text-sm\",\n      }}\n    />\n  );\n}\nDemo.displayName = \"StatPanelSlotsDemo\";\n"
  },
  {
    "name": "StepsBasicDemo",
    "code": "import { Steps } from \"@rtdui/core\";\n\nconst items = [\"步骤1\", \"步骤2\", \"步骤3\", \"步骤4\", \"步骤5\", \"步骤6\", \"步骤7\"];\n\nexport default function Demo() {\n  return <Steps steps={items} />;\n}\nDemo.displayName = \"StepsBasicDemo\";\n"
  },
  {
    "name": "StepsSequentialDemo",
    "code": "import React from \"react\";\nimport { Steps, Button } from \"@rtdui/core\";\n\nconst items = [\"步骤1\", \"步骤2\", \"步骤3\", \"步骤4\", \"步骤5\", \"步骤6\", \"步骤7\"];\n\nexport default function Demo() {\n  const ref = React.useRef(null!);\n  return (\n    <>\n      <Steps ref={ref} steps={items} sequential={true} />\n      <Button onClick={(e) => (ref.current as any).next()}>下一步</Button>\n    </>\n  );\n}\nDemo.displayName = \"StepsSequentialDemo\";\n"
  },
  {
    "name": "SwapFlipDemo",
    "code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Swap transitionEffect=\"flip\" className=\"text-9xl\">\n      <div>😈</div>\n      <div>😇</div>\n    </Swap>\n  );\n}\nDemo.displayName = \"SwapFlipDemo\";\n"
  },
  {
    "name": "SwapIconDemo",
    "code": "import { Swap } from \"@rtdui/core\";\nimport { IconVolume3 as IconVolumeMute, IconVolume } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n  return (\n    <Swap>\n      <IconVolumeMute size={36} />\n      <IconVolume size={36} />\n    </Swap>\n  );\n}\nDemo.displayName = \"SwapIconDemo\";\n"
  },
  {
    "name": "SwapIconRotateDemo",
    "code": "import { Swap } from \"@rtdui/core\";\nimport { IconMoon, IconSun, IconMenu2, IconX } from \"@tabler/icons-react\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex gap-8\">\n      <Swap transitionEffect=\"rotate\">\n        <IconMoon size={36} />\n        <IconSun size={36} />\n      </Swap>\n      <Swap transitionEffect=\"rotate\">\n        <IconMenu2 size={36} />\n        <IconX size={36} />\n      </Swap>\n    </div>\n  );\n}\nDemo.displayName = \"SwapIconRotateDemo\";\n"
  },
  {
    "name": "SwapIndeterminateDemo",
    "code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Swap transitionEffect=\"flip\" className=\"text-9xl\" indeterminate>\n      <div>😈</div>\n      <div>😇</div>\n      <div>😭</div>\n    </Swap>\n  );\n}\nDemo.displayName = \"SwapIndeterminateDemo\";\n"
  },
  {
    "name": "SwapInFormDemo",
    "code": "import React from \"react\";\nimport { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n  // 作为Swap的受控属性\n  const [swapChecked, setSwapChecked] = React.useState(false);\n\n  const [output, setOutput] = React.useState(\"\");\n\n  const handleSwapChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSwapChecked(e.currentTarget.checked);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const jsonObj = Object.fromEntries(formData.entries());\n    setOutput(JSON.stringify(jsonObj, undefined, 2));\n  };\n\n  return (\n    <>\n      <form method=\"post\" onSubmit={handleFormSubmit}>\n        <Swap\n          name=\"aa\"\n          checked={swapChecked}\n          onChange={handleSwapChange}\n          className=\"text-6xl\"\n        >\n          <div>😈</div>\n          <div>😇</div>\n        </Swap>\n\n        <Swap name=\"bb\" defaultChecked={true} className=\"text-6xl\">\n          <div>🥶</div>\n          <div>😭</div>\n        </Swap>\n\n        <button className=\"btn btn-primary btn-block mt-4\" type=\"submit\">\n          提交\n        </button>\n      </form>\n      <output className=\"my-4 flex flex-col gap-4\">\n        output:\n        <pre className=\"bg-base-100\">{output}</pre>\n      </output>\n    </>\n  );\n}\nDemo.displayName = \"SwapInFormDemo\";\n"
  },
  {
    "name": "SwapTextDemo",
    "code": "import { Swap } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Swap>\n      <span>ON</span>\n      <span>OFF</span>\n    </Swap>\n  );\n}\nDemo.displayName = \"SwapTextDemo\";\n"
  },
  {
    "name": "SwitchColorDemo",
    "code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <Switch defaultChecked />\n      <Switch defaultChecked color=\"primary\" />\n      <Switch defaultChecked color=\"secondary\" />\n      <Switch defaultChecked color=\"accent\" />\n      <Switch defaultChecked color=\"info\" />\n      <Switch defaultChecked color=\"success\" />\n      <Switch defaultChecked color=\"warning\" />\n      <Switch defaultChecked color=\"error\" />\n    </div>\n  );\n}\nDemo.displayName = \"SwitchColorDemo\";\n"
  },
  {
    "name": "SwitchLabelDemo",
    "code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <Switch required label=\"这是标签\" helperText=\"(这是帮助文本)\" />;\n}\nDemo.displayName = \"SwitchLabelDemo\";\n"
  },
  {
    "name": "SwitchLabelPostionDemo",
    "code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Switch\n      required\n      label=\"这是标签\"\n      labelPosition=\"right\"\n      helperText=\"(这是帮助文本)\"\n    />\n  );\n}\nDemo.displayName = \"SwitchLabelPostionDemo\";\n"
  },
  {
    "name": "SwitchSizeDemo",
    "code": "import { Switch } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-start gap-4\">\n      <Switch size=\"xs\" label=\"xs\" />\n      <Switch size=\"sm\" label=\"sm\" />\n      <Switch size=\"md\" label=\"md\" />\n      <Switch size=\"lg\" label=\"lg\" />\n    </div>\n  );\n}\nDemo.displayName = \"SwitchSizeDemo\";\n"
  },
  {
    "name": "TabsBasicDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\nimport {\n  Radio,\n  RadioGroup,\n  Slider,\n  Switch,\n  Tabs,\n  ColorSwatch,\n  Popover,\n  ColorPicker,\n  TextInput,\n} from \"@rtdui/core\";\nimport { IconCheck, IconPalette } from \"@tabler/icons-react\";\nimport { useState } from \"react\";\n\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"circle\"];\nexport default function Demo() {\n  const [state, setState] = useState({\n    activedTab: \"tab1\",\n    selectedColor: \"primary\",\n    variant: \"default\",\n    orientation: \"horizontal\",\n    placement: \"left\",\n    radius: \"md\",\n    grow: false,\n    justify: \"start\",\n    tab2Disabled: false,\n  });\n  const code = `\nimport { Tabs } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <Tabs defaultValue=\"tab1\"${state.variant !== \"default\" ? ' variant=\"' + state.variant + '\"' : \"\"}${state.orientation !== \"horizontal\" ? ' orientation=\"' + state.orientation + '\"' : \"\"}${state.placement !== \"left\" && state.orientation !== \"horizontal\" ? ' placement=\"' + state.placement + '\"' : \"\"}${state.radius !== \"md\" ? ' radius=\"' + state.radius + '\"' : \"\"}${state.selectedColor !== \"primary\" ? ' color=\"' + state.selectedColor + '\"' : \"\"}>\n      <Tabs.Panel value=\"tab1\">\n        tab1 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab2\">\n        tab2 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab3\">\n        tab3 content\n      </Tabs.Panel>\n      <Tabs.List${state.grow ? \" grow\" : \"\"}${state.justify !== \"start\" && !state.grow ? ' justify=\"' + state.justify + '\"' : \"\"}>\n        <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n        <Tabs.Tab value=\"tab2\"${state.tab2Disabled ? \" disabled\" : \"\"}>tab2</Tabs.Tab>\n        <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n      </Tabs.List>\n    </Tabs>\n  );\n}\n`;\n  return (\n    <div>\n      <div className=\"flex gap-32 p-4 bg-base-100\">\n        <div className=\"flex-1 flex\">\n          <Tabs\n            value={state.activedTab}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, activedTab: val as any }))\n            }\n            variant={state.variant as any}\n            radius={state.radius}\n            color={state.selectedColor}\n            orientation={state.orientation as any}\n            placement={state.placement as any}\n            className=\"flex-1\"\n          >\n            <Tabs.List grow={state.grow} justify={state.justify as any}>\n              <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n              <Tabs.Tab value=\"tab2\" disabled={state.tab2Disabled}>\n                tab2\n              </Tabs.Tab>\n              <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n            </Tabs.List>\n            <Tabs.Panel value=\"tab1\" className=\"p-4\">\n              tab1 content\n            </Tabs.Panel>\n            <Tabs.Panel value=\"tab2\" className=\"p-4\">\n              tab2 content\n            </Tabs.Panel>\n            <Tabs.Panel value=\"tab3\" className=\"p-4\">\n              tab3 content\n            </Tabs.Panel>\n          </Tabs>\n        </div>\n        <div className=\"flex flex-col gap-4 w-64\">\n          Color\n          <div className=\"colors flex flex-wrap gap-0.5\">\n            {[\n              \"primary\",\n              \"secondary\",\n              \"accent\",\n              \"info\",\n              \"warning\",\n              \"error\",\n              \"success\",\n              \"neutral\",\n            ].map((d) => (\n              <ColorSwatch\n                size=\"28px\"\n                radius=\"sm\"\n                key={d}\n                color={d}\n                onClick={() =>\n                  setState((prev) => ({ ...prev, selectedColor: d }))\n                }\n              >\n                {d === state.selectedColor && (\n                  <IconCheck size=\"20\" color=\"white\" />\n                )}\n              </ColorSwatch>\n            ))}\n            <Popover>\n              <Popover.Trigger>\n                <ColorSwatch withShadow size=\"28px\" radius=\"sm\" color=\"white\">\n                  <IconPalette className=\"stroke-amber-500\" />\n                </ColorSwatch>\n              </Popover.Trigger>\n              <Popover.Dropdown>\n                <div className=\"flex flex-col gap-2 bg-base-100 p-4 border border-base-300 rounded shadow\">\n                  <ColorPicker\n                    format=\"hexa\"\n                    value={state.selectedColor}\n                    onChange={(val) =>\n                      setState((prev) => ({ ...prev, selectedColor: val }))\n                    }\n                  />\n                  <TextInput value={state.selectedColor} readOnly />\n                </div>\n              </Popover.Dropdown>\n            </Popover>\n          </div>\n          <RadioGroup\n            value={state.variant}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, variant: val as string }))\n            }\n            label=\"Variant\"\n          >\n            <Radio value=\"default\" label=\"default\" />\n            <Radio value=\"outline\" label=\"outline\" />\n            <Radio value=\"pills\" label=\"pills\" />\n          </RadioGroup>\n          <div className=\"flex flex-col gap-8\">\n            <RadioGroup\n              value={state.orientation}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, orientation: val as string }))\n              }\n              label=\"Orientation\"\n            >\n              <Radio value=\"horizontal\" label=\"horizontal\" />\n              <Radio value=\"vertical\" label=\"vertical\" />\n            </RadioGroup>\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <RadioGroup\n              value={state.placement}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, placement: val as string }))\n              }\n              label=\"Placement\"\n              disabled={state.orientation === \"horizontal\"}\n            >\n              <Radio value=\"left\" label=\"left\" />\n              <Radio value=\"right\" label=\"right\" />\n            </RadioGroup>\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            Radius\n            <Slider\n              min={1}\n              max={5}\n              value={radius.indexOf(state.radius) + 1}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, radius: radius[val - 1] }))\n              }\n              label={(v) => radius[v - 1]}\n              labelAlwaysOn\n            />\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <Switch\n              color=\"secondary\"\n              checked={state.grow}\n              onChange={(val) => setState((prev) => ({ ...prev, grow: val }))}\n              label=\"Grow\"\n            />\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <RadioGroup\n              disabled={state.grow}\n              value={state.justify}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, justify: val as string }))\n              }\n              label=\"Justify\"\n            >\n              <Radio value=\"start\" label=\"start\" />\n              <Radio value=\"center\" label=\"center\" />\n              <Radio value=\"end\" label=\"end\" />\n            </RadioGroup>\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <Switch\n              color=\"secondary\"\n              checked={state.tab2Disabled}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, tab2Disabled: val }))\n              }\n              label=\"disable tab2\"\n            />\n          </div>\n        </div>\n      </div>\n      <CodeHighlight code={code} language=\"jsx\" />\n    </div>\n  );\n}\nDemo.displayName = \"TabsBasicDemo\";\n"
  },
  {
    "name": "TabsInvertedDemo",
    "code": "import { CodeHighlight } from \"@rtdui/code-highlight\";\nimport { Radio, RadioGroup, Slider, Switch, Tabs } from \"@rtdui/core\";\nimport { useState } from \"react\";\n\nconst radius = [\"xs\", \"sm\", \"md\", \"lg\", \"circle\"];\nexport default function Demo() {\n  const [state, setState] = useState({\n    activedTab: \"tab1\",\n    variant: \"default\",\n    radius: \"md\",\n    grow: false,\n    justify: \"start\",\n    tab2Disabled: false,\n  });\n\n  const code = `\nimport { Tabs } from '@rtdui/core';\n\nfunction Demo() {\n  return (\n    <Tabs inverted defaultValue=\"tab1\">\n      <Tabs.Panel value=\"tab1\">\n        tab1 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab2\">\n        tab2 content\n      </Tabs.Panel>\n      <Tabs.Panel value=\"tab3\">\n        tab3 content\n      </Tabs.Panel>\n      <Tabs.List>\n        <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n        <Tabs.Tab value=\"tab2\">tab2</Tabs.Tab>\n        <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n      </Tabs.List>\n    </Tabs>\n  );\n}\n`;\n  return (\n    <div>\n      <div className=\"inverted-demo flex gap-64 p-4 bg-base-100\">\n        <div className=\"flex-1 flex\">\n          <Tabs\n            value={state.activedTab}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, activedTab: val as any }))\n            }\n            variant={state.variant as any}\n            radius={state.radius}\n            className=\"flex-1\"\n            inverted\n          >\n            <Tabs.Panel value=\"tab1\" className=\"p-4\">\n              tab1 content\n            </Tabs.Panel>\n            <Tabs.Panel value=\"tab2\" className=\"p-4\">\n              tab2 content\n            </Tabs.Panel>\n            <Tabs.Panel value=\"tab3\" className=\"p-4\">\n              tab3 content\n            </Tabs.Panel>\n            <Tabs.List grow={state.grow} justify={state.justify as any}>\n              <Tabs.Tab value=\"tab1\">tab1</Tabs.Tab>\n              <Tabs.Tab value=\"tab2\" disabled={state.tab2Disabled}>\n                tab2\n              </Tabs.Tab>\n              <Tabs.Tab value=\"tab3\">tab3</Tabs.Tab>\n            </Tabs.List>\n          </Tabs>\n        </div>\n        <div className=\"flex flex-col gap-4 w-96\">\n          <RadioGroup\n            value={state.variant}\n            onChange={(val) =>\n              setState((prev) => ({ ...prev, variant: val as string }))\n            }\n            label=\"Variant\"\n          >\n            <Radio value=\"default\" label=\"default\" />\n            <Radio value=\"outline\" label=\"outline\" />\n            <Radio value=\"pills\" label=\"pills\" />\n          </RadioGroup>\n\n          <div className=\"flex flex-col gap-8\">\n            Radius\n            <Slider\n              min={1}\n              max={5}\n              value={radius.indexOf(state.radius) + 1}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, radius: radius[val - 1] }))\n              }\n              label={(v) => radius[v - 1]}\n              labelAlwaysOn\n            />\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <Switch\n              color=\"secondary\"\n              checked={state.grow}\n              onChange={(val) => setState((prev) => ({ ...prev, grow: val }))}\n              label=\"Grow\"\n            />\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <RadioGroup\n              disabled={state.grow}\n              value={state.justify}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, justify: val as string }))\n              }\n              label=\"Justify\"\n            >\n              <Radio value=\"start\" label=\"start\" />\n              <Radio value=\"center\" label=\"center\" />\n              <Radio value=\"end\" label=\"end\" />\n            </RadioGroup>\n          </div>\n          <div className=\"flex flex-col gap-8\">\n            <Switch\n              color=\"secondary\"\n              checked={state.tab2Disabled}\n              onChange={(val) =>\n                setState((prev) => ({ ...prev, tab2Disabled: val }))\n              }\n              label=\"disable tab2\"\n            />\n          </div>\n        </div>\n      </div>\n      <CodeHighlight code={code} language=\"jsx\" />\n    </div>\n  );\n}\nDemo.displayName = \"TabsInvertedDemo\";\n"
  },
  {
    "name": "TextareaDemo",
    "code": "import { TextArea } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      不限行数:\n      <TextArea placeholder=\"请输入\" />\n      限制最大4行:\n      <TextArea maxRows={4} placeholder=\"请输入\" />\n    </div>\n  );\n}\nDemo.displayName = \"TextareaDemo\";\n"
  },
  {
    "name": "DebouncedInputBasicDemo",
    "code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [output, setOutput] = React.useState(\"\");\n  return (\n    <>\n      <DebouncedInput\n        onChange={(val) => setOutput(val.toString())}\n        placeholder=\"Search\"\n      />\n      <div>输出: {output}</div>\n    </>\n  );\n}\nDemo.displayName = \"DebouncedInputBasicDemo\";\n"
  },
  {
    "name": "DebouncedInputDefaultValueDemo",
    "code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [output, setOutput] = React.useState(\"\");\n  return (\n    <>\n      <DebouncedInput\n        defaultValue=\"1\"\n        onChange={(val) => setOutput(val.toString())}\n        placeholder=\"search\"\n      />\n      <div>输出: {output}</div>\n    </>\n  );\n}\nDemo.displayName = \"DebouncedInputDefaultValueDemo\";\n"
  },
  {
    "name": "DebouncedInputWaitDemo",
    "code": "import React from \"react\";\nimport { DebouncedInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [output, setOutput] = React.useState(\"\");\n  return (\n    <>\n      <DebouncedInput\n        wait={1000}\n        onChange={(val) => setOutput(val.toString())}\n        placeholder=\"Search\"\n      />\n      <div>输出: {output}</div>\n    </>\n  );\n}\nDemo.displayName = \"DebouncedInputWaitDemo\";\n"
  },
  {
    "name": "TextInputBackgroundDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <TextInput placeholder=\"请输入\" slots={{ input: \"bg-base-200\" }} />;\n}\nDemo.displayName = \"TextInputBackgroundDemo\";\n"
  },
  {
    "name": "TextInputBasicDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <TextInput placeholder=\"请输入\" />;\n}\nDemo.displayName = \"TextInputBasicDemo\";\n"
  },
  {
    "name": "TextInputColorDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <TextInput placeholder=\"请输入\" color=\"primary\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"secondary\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"accent\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"info\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"success\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"warning\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" color=\"error\" className=\"min-w-52\" />\n    </div>\n  );\n}\nDemo.displayName = \"TextInputColorDemo\";\n"
  },
  {
    "name": "TextInputErrorDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <TextInput\n        label=\"用户名\"\n        required\n        error=\"必须的\"\n        bordered\n        size=\"xs\"\n        className=\"min-w-52\"\n      />\n    </div>\n  );\n}\nDemo.displayName = \"TextInputErrorDemo\";\n"
  },
  {
    "name": "TextInputGhostDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <TextInput ghost bordered={false} placeholder=\"请输入\" />;\n}\nDemo.displayName = \"TextInputGhostDemo\";\n"
  },
  {
    "name": "TextInputLabelDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <TextInput\n      placeholder=\"请输入\"\n      required\n      label=\"这是标签\"\n      helperText=\"(这是帮助文本)\"\n    />\n  );\n}\nDemo.displayName = \"TextInputLabelDemo\";\n"
  },
  {
    "name": "TextInputNoborderDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return <TextInput placeholder=\"请输入\" bordered={false} />;\n}\nDemo.displayName = \"TextInputNoborderDemo\";\n"
  },
  {
    "name": "TextInputSectionDemo",
    "code": "import { IconAt, IconSend } from \"@tabler/icons-react\";\nimport { TextInput, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <TextInput\n      type=\"search\"\n      required\n      size=\"sm\"\n      placeholder=\"这是占位文本\"\n      label=\"这是标签\"\n      helperText=\"(这是帮助文本)\"\n      leftSection={<IconAt strokeWidth={1} size=\"1.2rem\" />}\n      rightSection={\n        <Button color=\"primary\" size=\"sm\" sharp=\"square\">\n          <IconSend size=\"1rem\" />\n        </Button>\n      }\n    />\n  );\n}\nDemo.displayName = \"TextInputSectionDemo\";\n"
  },
  {
    "name": "TextInputSizeDemo",
    "code": "import { TextInput } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 items-start\">\n      <TextInput placeholder=\"请输入\" bordered size=\"xs\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" bordered size=\"sm\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" bordered size=\"md\" className=\"min-w-52\" />\n      <TextInput placeholder=\"请输入\" bordered size=\"lg\" className=\"min-w-52\" />\n    </div>\n  );\n}\nDemo.displayName = \"TextInputSizeDemo\";\n"
  },
  {
    "name": "TooltipColorDemo",
    "code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 pt-8 lg:flex-row \">\n      <Tooltip tip=\"气泡提示\" color=\"primary\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"secondary\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"accent\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"info\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"success\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"warning\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"气泡提示\" color=\"error\">\n        <Button>按钮</Button>\n      </Tooltip>\n    </div>\n  );\n}\nDemo.displayName = \"TooltipColorDemo\";\n"
  },
  {
    "name": "TooltipPositionDemo",
    "code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex justify-center\">\n      <div>\n        <div className=\"w-48 flex justify-center mb-2\">\n          <Tooltip tip=\"气泡提示\" position=\"top\">\n            <Button>顶部</Button>\n          </Tooltip>\n        </div>\n        <div className=\"w-48 flex justify-between mb-1.5\">\n          <Tooltip tip=\"气泡提示\" position=\"left\">\n            <Button>左侧</Button>\n          </Tooltip>\n          <Tooltip tip=\"气泡提示\" position=\"right\">\n            <Button>右侧</Button>\n          </Tooltip>\n        </div>\n        <div className=\"w-48 flex justify-center\">\n          <Tooltip tip=\"气泡提示\" position=\"bottom\">\n            <Button>底部</Button>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  );\n}\nDemo.displayName = \"TooltipPositionDemo\";\n"
  },
  {
    "name": "TooltipTransitionDemo",
    "code": "import { Tooltip, Button } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col gap-4 pt-8 lg:flex-row \">\n      <Tooltip tip=\"fade\" transition=\"fade\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"expand\" transition=\"expand\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"scale\" transition=\"scale\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"pop\" transition=\"pop\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"skew-up\" transition=\"skew-up\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"rotate-left\" transition=\"rotate-left\">\n        <Button>按钮</Button>\n      </Tooltip>\n      <Tooltip tip=\"slide-up\" transition=\"slide-up\">\n        <Button>按钮</Button>\n      </Tooltip>\n    </div>\n  );\n}\nDemo.displayName = \"TooltipTransitionDemo\";\n"
  },
  {
    "name": "TransitionAppearDemo",
    "code": "import React from \"react\";\nimport { Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Transition in transition=\"fade\" duration={1000}>\n        {(ref, styles) => (\n          <div\n            ref={ref}\n            style={styles}\n            className=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n          >\n            no appear\n          </div>\n        )}\n      </Transition>\n\n      <Transition in appear transition=\"fade\" duration={1000}>\n        {(ref, styles) => (\n          <div\n            ref={ref}\n            style={styles}\n            className=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n          >\n            with appear\n          </div>\n        )}\n      </Transition>\n    </div>\n  );\n}\nDemo.displayName = \"TransitionAppearDemo\";\n"
  },
  {
    "name": "TransitionBasicDemo",
    "code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nconst transitions = {\n  fade: \"逐渐显现\",\n  \"skew-up\": \"从上倾斜\",\n  \"skew-down\": \"从下倾斜\",\n  \"rotate-right\": \"右侧旋转\",\n  \"rotate-left\": \"左侧旋转\",\n  \"slide-left\": \"向左滑入\",\n  \"slide-right\": \"向右滑入\",\n  \"slide-down\": \"向下滑入\",\n  \"slide-up\": \"向上滑入\",\n  scale: \"中心缩放\",\n  \"scale-y\": \"垂直缩放\",\n  \"scale-x\": \"水平缩放\",\n  expand: \"中心展开\",\n  \"expand-x\": \"水平展开\",\n  \"expand-y\": \"垂直展开\",\n  pop: \"中心弹出\",\n  \"pop-top-left\": \"左上弹出\",\n  \"pop-top-right\": \"右上弹出\",\n  \"pop-bottom-left\": \"左下弹出\",\n  \"pop-bottom-right\": \"右下弹出\",\n};\n\nconst initial = {\n  fade: false,\n  \"skew-up\": false,\n  \"skew-down\": false,\n  \"rotate-left\": false,\n  \"rotate-right\": false,\n  \"slide-left\": false,\n  \"slide-right\": false,\n  \"slide-down\": false,\n  \"slide-up\": false,\n  scale: false,\n  \"scale-y\": false,\n  \"scale-x\": false,\n  expand: false,\n  \"expand-x\": false,\n  \"expand-y\": false,\n  pop: false,\n  \"pop-top-left\": false,\n  \"pop-top-right\": false,\n  \"pop-bottom-left\": false,\n  \"pop-bottom-right\": false,\n};\nfunction reducer(state: typeof initial, action: Record<string, any>) {\n  const [[name, value]] = Object.entries(action);\n  return { ...state, [name]: value };\n}\n\nexport default function Demo() {\n  const [state, dispatch] = React.useReducer(reducer, initial);\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {Object.entries(transitions).map((d) => {\n        const [name, label] = d;\n        return (\n          <div key={name}>\n            <Button\n              type=\"button\"\n              noAnimation\n              // onClick={() =>\n              //   dispatch({ [name]: !state[name as keyof typeof initial] })\n              // }\n              onMouseEnter={() => dispatch({ [name]: true })}\n              onMouseLeave={() => dispatch({ [name]: false })}\n            >\n              {label}\n            </Button>\n            <Transition\n              in={state[name as keyof typeof initial]}\n              transition={name as keyof typeof initial}\n              duration={1000}\n            >\n              {(ref, styles) => (\n                <div\n                  ref={ref}\n                  style={styles}\n                  className=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none w-fit\"\n                >\n                  {name}\n                </div>\n              )}\n            </Transition>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nDemo.displayName = \"TransitionBasicDemo\";\n"
  },
  {
    "name": "TransitionCustomDemo",
    "code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [inState, setInState] = React.useState(false);\n  return (\n    <div className=\"flex flex-col gap-4 rounded-lg items-center\">\n      <Button onClick={() => setInState(!inState)}>过渡</Button>\n      <Transition\n        in={inState}\n        duration={1000}\n        unmountOnExit={false}\n        transition={{\n          in: { width: \"400px\", height: \"200px\" },\n          out: { width: \"200px\", height: \"100px\" },\n          transitionProperty: \"width,height\",\n        }}\n      >\n        {(ref, styles) => (\n          <div\n            ref={ref}\n            className=\"bg-neutral text-neutral-content p-4 rounded-lg\"\n            style={styles}\n          >\n            自定义过渡\n          </div>\n        )}\n      </Transition>\n    </div>\n  );\n}\nDemo.displayName = \"TransitionCustomDemo\";\n"
  },
  {
    "name": "TransitionGroupDemo",
    "code": "import React from \"react\";\nimport { Button, TransitionGroup, Transition } from \"@rtdui/core\";\n\nlet count = 100;\nexport default function Demo() {\n  const [items, setItems] = React.useState([\"Item 1\", \"Item 2\", \"Item 3\"]);\n\n  return (\n    <div className=\"flex flex-col items-start gap-4\">\n      <TransitionGroup component={null}>\n        {items.map((d) => (\n          <Transition\n            key={d}\n            duration={{ enter: 500, exit: 250 }}\n            unmountOnExit\n          >\n            {(ref, styles) => (\n              <div ref={ref} style={styles} className=\"flex items-center gap-2\">\n                <Button\n                  size=\"xs\"\n                  color=\"error\"\n                  onClick={() =>\n                    setItems((prev) => prev.filter((dd) => dd !== d))\n                  }\n                >\n                  x\n                </Button>\n                {d}\n              </div>\n            )}\n          </Transition>\n        ))}\n      </TransitionGroup>\n      <Button\n        type=\"button\"\n        color=\"info\"\n        onClick={() => setItems((prev) => [...prev, `Item ${++count}`])}\n      >\n        添加\n      </Button>\n    </div>\n  );\n}\nDemo.displayName = \"TransitionGroupDemo\";\n"
  },
  {
    "name": "TransitionUnmountDemo",
    "code": "import React from \"react\";\nimport { Button, Transition } from \"@rtdui/core\";\n\nexport default function Demo() {\n  const [state, setState] = React.useState(false);\n  return (\n    <div className=\"flex flex-col items-center\">\n      <Button\n        type=\"button\"\n        noAnimation\n        // onClick={() => setState((prev) => !prev)}\n        onMouseEnter={() => setState(true)}\n        onMouseLeave={() => setState(false)}\n      >\n        初始不挂载,过渡结束卸载\n      </Button>\n      <Transition in={state} unmountOnExit transition=\"fade\" duration={1000}>\n        {(ref, styles) => (\n          <div\n            ref={ref}\n            style={styles}\n            className=\"bg-neutral text-neutral-content p-2 rounded-md pointer-events-none\"\n          >\n            fade\n          </div>\n        )}\n      </Transition>\n    </div>\n  );\n}\nDemo.displayName = \"TransitionUnmountDemo\";\n"
  },
  {
    "name": "TreeBasicDemo",
    "code": "import React from \"react\";\nimport { Tree, Button, Switch, Tooltip } from \"@rtdui/core\";\nimport { IconSettings, IconFolder, IconFile } from \"@tabler/icons-react\";\n\nconst MenuItemIcon = (props: any) => {\n  const { item } = props;\n  return item.children ? (\n    <IconFolder strokeWidth={1} size={20} />\n  ) : (\n    <IconFile strokeWidth={1} size={20} />\n  );\n};\nconst MenuItemActions = (props: any) => {\n  const { item } = props;\n  const [, setUpdate] = React.useState({});\n  return (\n    <>\n      <Tooltip tip=\"配置\">\n        <Button\n          ghost\n          size=\"sm\"\n          sharp=\"circle\"\n          onClick={(e) => {\n            e.stopPropagation();\n            alert(JSON.stringify(item));\n          }}\n        >\n          <IconSettings strokeWidth={1} />\n        </Button>\n      </Tooltip>\n      <Tooltip tip={item.enable ? \"已启用\" : \"已禁用\"}>\n        <Switch\n          color=\"primary\"\n          size=\"sm\"\n          checked={item.enable ?? false}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          onChange={(checked) => {\n            item.enable = checked;\n            setUpdate({});\n          }}\n        />\n      </Tooltip>\n    </>\n  );\n};\n\nconst menuData = [\n  {\n    id: \"1\",\n    label: \"1\",\n    children: [\n      {\n        id: \"1-1\",\n        label: \"1-1\",\n        children: [\n          {\n            id: \"1-1-1\",\n            label: \"1-1-1\",\n            enable: true,\n          },\n          {\n            id: \"1-1-2\",\n            label: \"1-1-2\",\n            url: \"/\",\n          },\n        ],\n      },\n      {\n        id: \"1-2\",\n        label: \"1-2\",\n        children: [\n          {\n            id: \"1-2-1\",\n            label: \"1-2-1\",\n          },\n          {\n            id: \"1-2-2\",\n            label: \"1-2-2\",\n            enable: true,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    label: \"2\",\n    children: [\n      {\n        id: \"2-1\",\n        label: \"2-1\",\n        children: [\n          {\n            id: \"2-1-1\",\n            label: \"2-1-1\",\n          },\n          {\n            id: \"2-1-2\",\n            label: \"2-1-2\",\n          },\n        ],\n      },\n      {\n        id: \"2-2\",\n        label: \"2-2\",\n        children: [\n          {\n            id: \"2-2-1\",\n            label: \"2-2-1\",\n            enable: true,\n          },\n          {\n            id: \"2-2-2\",\n            label: \"2-2-2\",\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst handleMenuItemClick = (item: any) => {\n  if (!item.url) {\n    alert(JSON.stringify(item));\n  }\n};\n\nexport default function Demo() {\n  return (\n    <Tree\n      className=\"bg-base-100\"\n      data={menuData}\n      displayField=\"label\"\n      expandAll\n      onItemClick={handleMenuItemClick}\n      ItemIconComponent={MenuItemIcon}\n      ItemActionsComponent={MenuItemActions}\n    />\n  );\n}\nDemo.displayName = \"TreeBasicDemo\";\n"
  },
  {
    "name": "WatermarkImageDemo",
    "code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Watermark\n      width={200}\n      height={50}\n      imageSrc=\"/photo-1414694762283-acccc27bca85.jpg\"\n    >\n      <div className=\"h-96 bg-base-100\">内容</div>\n    </Watermark>\n  );\n}\nDemo.displayName = \"WatermarkImageDemo\";\n"
  },
  {
    "name": "WatermarkMultiTextDemo",
    "code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Watermark text={[\"这是水印\", \"rtdui\"]}>\n      <div className=\"h-96 bg-base-100\">内容</div>\n    </Watermark>\n  );\n}\nDemo.displayName = \"WatermarkMultiTextDemo\";\n"
  },
  {
    "name": "WatermarkTextDemo",
    "code": "import { Watermark } from \"@rtdui/core\";\n\nexport default function Demo() {\n  return (\n    <Watermark text=\"这是水印rtdui\">\n      <div className=\"h-96 bg-base-100\">内容</div>\n    </Watermark>\n  );\n}\nDemo.displayName = \"WatermarkTextDemo\";\n"
  }
]
